[null,[[["goog.fx.DragDrop",null,null,null,[null,44,null,[null,null,"closure/goog/fx/dragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/dragdrop.js#L44"]],null,[[[null,"<p>Drag/drop implementation for creating drag sources/drop targets consisting of\na single HTML Element.</p>\n"]]],[null,null,null,null,null,null,1],null,[],null,[],[],[["DragDrop",[null,44,null,[null,null,"closure/goog/fx/dragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/dragdrop.js#L44"]],[[[null,"<p>Drag/drop implementation for creating drag sources/drop targets consisting of\na single HTML Element.</p>\n"]]],null,null,null,null,null,[],[]],[],1,[["element",[null,null,null,null,null,[[[null,null,null,["Element",null,null,null,[]]],[null,null,null,["string",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Dom Node, or string representation of node\nid, to be used as drag source/drop target.</p>\n"]]]],["opt_data",[1,null,null,null,null,[[[null,null,null,["Object",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Data associated with the source/target.</p>\n"]]]]],null,[]],[[["addEventListener",[null,150,null,[null,null,"closure/goog/events/eventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/eventtarget.js#L150"]],[[[null,"<p>Adds an event listener to the event target. The same handler can only be\nadded once per the type. Even if you add the same handler multiple times\nusing the same type then it will only be called once when the event is\ndispatched.</p>\n"]]],[[[null,"<p>Use <code>#listen</code> instead, when possible. Otherwise, use\n<code>goog.events.listen</code> if you are passing Object\n(instead of Function) as handler.</p>\n"]]],null,[null,1],["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#addEventListener"]],null,[]],null,[],[]],[],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[]]]]]],[[[null,"<p>The type of the event to listen for</p>\n"]]]],["handler",[null,null,null,null,null,[[[null,null,[null,null,[[null,null,null,null,null,null,null,1]],[null,null,null,null,null,null,null,1]]],[null,null,null,null,[[["handleEvent",[null,null,[null,null,[[null,null,null,null,null,null,null,1]],[null,null,null,null,null,null,null,1]]]]]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The function\nto handle the event. The handler can also be an object that implements\nthe handleEvent method which takes the event object as argument.</p>\n"]]]],["opt_capture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>In DOM-compliant browsers, this determines\nwhether the listener is fired during the capture or bubble phase\nof the event.</p>\n"]]]],["opt_handlerScope",[1,null,null,null,null,[[[null,null,null,["Object",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call\nthe listener.</p>\n"]]]]],null,[]],[["addItem",[null,248,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L248"]],[[[null,"<p>Add item to drag object.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#addItem"]],null,[]],null,[],[]],[],null,[["element",[null,null,null,null,null,[[[null,null,null,["Element",null,null,null,[]]],[null,null,null,["string",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Dom Node, or string representation of node\nid, to be used as drag source/drop target.</p>\n"]]]]],null,[]],[["addOnDisposeCallback",[null,221,null,[null,null,"closure/goog/disposable/disposable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L221"]],[[[null,"<p>Invokes a callback function when this object is disposed. Callbacks are\ninvoked in the order in which they were added. If a callback is added to\nan already disposed Disposable, it will be called immediately.</p>\n"]]],null,null,null,["goog.Disposable",null,[null,null,[null,null,"goog.Disposable.html#addOnDisposeCallback"]],null,[]],null,[],[]],["T"],null,[["callback",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["T",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[],[null,null,null,null,null,null,null,1]]],[[[null,"<p>The callback function.</p>\n"]]]],["opt_scope",[1,null,null,null,null,[[[null,null,null,["T",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>An optional scope to call the callback in.</p>\n"]]]]],null,[]],[["addScrollableContainer",[null,735,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L735"]],[[[null,"<p>Makes drag and drop aware of a target container that could scroll mid drag.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#addScrollableContainer"]],null,[]],null,[],[]],[],null,[["element",[null,null,null,null,null,[[[null,null,null,["Element",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The scroll container.</p>\n"]]]]],null,[]],[["addTarget",[null,256,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L256"]],[[[null,"<p>Associate drop target with drag element.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#addTarget"]],null,[]],null,[],[]],[],null,[["target",[null,null,null,null,null,[[[null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Target to add.</p>\n"]]]]],null,[]],[["afterEndDrag",[null,573,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L573"]],[[[null,"<p>Called after a drag operation has finished.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#afterEndDrag"]],null,[]],null,[],[],[null,1]],[],null,[["opt_dropTarget",[1,null,null,null,null,[[[null,null,null,["goog.fx.DragDropItem",null,[null,null,[null,null,"goog.fx.DragDropItem.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Target for successful drop.</p>\n"]]]]],null,[]],[["createDragElement",[null,819,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L819"]],[[[null,"<p>Creates an element for the item being dragged.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#createDragElement"]],null,[]],null,[],[]],[],null,[["sourceEl",[null,null,null,null,null,[[[null,null,null,["Element",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Drag source element.</p>\n"]]]]],[null,[null,null,null,null,null,[[[null,null,null,["Element",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The new drag element.</p>\n"]]]],[]],[["createDragElementInternal",[null,887,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L887"]],[[[null,"<p>Generates an element to follow the cursor during dragging, given a drag\nsource element.  The default behavior is simply to clone the source element,\nbut this may be overridden in subclasses.  This method is called by\n<code>createDragElement()</code> before the drag class is added.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#createDragElementInternal"]],null,[]],null,[],[],[null,1]],[],null,[["sourceEl",[null,null,null,null,null,[[[null,null,null,["Element",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Drag source element.</p>\n"]]]]],[null,[null,null,null,["Element",null,null,null,[]]],[[[null,"<p>The new drag element.</p>\n"]]]],[]],[["createDraggerFor",[null,500,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L500"]],[[[null,"<p>Creates the Dragger for the drag element.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#createDraggerFor"]],null,[]],null,[],[],[null,1]],[],null,[["sourceEl",[null,null,null,null,null,[[[null,null,null,["Element",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Drag source element.</p>\n"]]]],["el",[null,null,null,null,null,[[[null,null,null,["Element",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>the element created by createDragElement().</p>\n"]]]],["event",[null,null,null,null,null,[[[null,null,null,["goog.events.BrowserEvent",null,[null,null,[null,null,"goog.events.BrowserEvent.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Mouse down event for start of drag.</p>\n"]]]]],[null,[null,null,null,["goog.fx.Dragger",null,[null,null,[null,null,"goog.fx.Dragger.html"]],null,[]]],[[[null,"<p>The new Dragger.</p>\n"]]]],[]],[["dispatchEvent",[null,180,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L180"]],[[[null,"<p>Dispatches an event (or event like object) and calls all listeners\nlistening for events of this type. The type of the event is decided by the\ntype property on the event object.</p>\n<p>If any of the listeners returns false OR calls preventDefault then this\nfunction will return false.  If one of the capture listeners calls\nstopPropagation, then the bubble listeners won&#39;t fire.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#dispatchEvent"]],null,[]],[],[]],[],null,[["e",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["Object",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Event object.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>If anyone called preventDefault on the event object (or\nif any of the listeners returns false) this will also return false.</p>\n"]]]],[]],[["dispose",[null,39,null,[null,null,"closure/goog/disposable/idisposable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/disposable/idisposable.js#L39"]],[[[null,"<p>Disposes of the object and its resources.</p>\n"]]],null,null,null,null,["goog.Disposable",null,[null,null,[null,null,"goog.Disposable.html#dispose"]],null,[]],[],[]],[],null,[],[null,null,[[[null,"<p>Nothing.</p>\n"]]]],[]],[["disposeDrag",[null,584,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L584"]],[[[null,"<p>Called once a drag operation has finished. Removes event listeners and\nelements.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#disposeDrag"]],null,[]],null,[],[],[null,1]],[],null,[],null,[]],[["disposeInternal",[null,1178,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L1178"]],[[[null,"<p>Removes listeners from this object.  Classes that extend EventTarget may\nneed to override this method in order to remove references to DOM Elements\nand additional listeners.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#disposeInternal"]],null,[]],["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#disposeInternal"]],null,[]],[],[],[null,1]],[],null,[],null,[]],[["disposeItem",[null,334,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L334"]],[[[null,"<p>Called when removing an item. Removes event listeners and classes.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#disposeItem"]],null,[]],null,[],[],[null,1]],[],null,[["item",[null,null,null,null,null,[[[null,null,null,["goog.fx.DragDropItem",null,[null,null,[null,null,"goog.fx.DragDropItem.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Item to dispose.</p>\n"]]]]],null,[]],[["endDrag",[null,517,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L517"]],[[[null,"<p>Event handler that&#39;s used to stop drag. Fires a drop event if over a valid\ntarget.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#endDrag"]],null,[]],null,[],[]],[],null,[["event",[null,null,null,null,null,[[[null,null,null,["goog.fx.DragEvent",null,[null,null,[null,null,"goog.fx.DragEvent.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Drag event.</p>\n"]]]]],null,[]],[["fireListeners",[null,225,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L225"]],[[[null,"<p>Fires all registered listeners in this listenable for the given\ntype and capture mode, passing them the given eventObject. This\ndoes not perform actual capture/bubble. Only implementors of the\ninterface should be using this.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#fireListeners"]],null,[]],[],[]],["EVENTOBJ"],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The type of the\nlisteners to fire.</p>\n"]]]],["capture",[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>The capture mode of the listeners to fire.</p>\n"]]]],["eventObject",[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The event object to fire.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether all listeners succeeded without\nattempting to prevent default behavior. If any listener returns\nfalse or called goog.events.Event#preventDefault, this returns\nfalse.</p>\n"]]]],[]],[["getDisposed",[null,160,null,[null,null,"closure/goog/disposable/disposable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L160"]],[[]],[[[null,"<p>Use <a href=\"goog.fx.DragDrop.html#isDisposed\"><code>#isDisposed</code></a> instead.</p>\n"]]],null,[null,1],["goog.Disposable",null,[null,null,[null,null,"goog.Disposable.html#getDisposed"]],null,[]],null,[],[]],[],null,[],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether the object has been disposed of.</p>\n"]]]],[]],[["getDragElementPosition",[null,838,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L838"]],[[[null,"<p>Returns the position for the drag element.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#getDragElementPosition"]],null,[]],null,[],[]],[],null,[["el",[null,null,null,null,null,[[[null,null,null,["Element",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Drag source element.</p>\n"]]]],["dragEl",[null,null,null,null,null,[[[null,null,null,["Element",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The dragged element created by createDragElement().</p>\n"]]]],["event",[null,null,null,null,null,[[[null,null,null,["goog.events.BrowserEvent",null,[null,null,[null,null,"goog.events.BrowserEvent.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Mouse down event for start of drag.</p>\n"]]]]],[null,[null,null,null,["goog.math.Coordinate",null,[null,null,[null,null,"goog.math.Coordinate.html"]],null,[]]],[[[null,"<p>The position for the drag element.</p>\n"]]]],[]],[["getDragger",[null,858,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L858"]],[[[null,"<p>Returns the dragger object.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#getDragger"]],null,[]],null,[],[]],[],null,[],[null,[null,null,null,null,null,[[[null,null,null,["goog.fx.Dragger",null,[null,null,[null,null,"goog.fx.Dragger.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The dragger object used by this drag and drop\ninstance.</p>\n"]]]],[]],[["getElementBox",[null,928,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L928"]],[[[null,"<p>Calculates the position and dimension of a draggable element.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#getElementBox"]],null,[]],null,[],[],[null,1]],[],null,[["item",[null,null,null,null,null,[[[null,null,null,["goog.fx.DragDropItem",null,[null,null,[null,null,"goog.fx.DragDropItem.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Item that&#39;s being dragged.</p>\n"]]]],["element",[null,null,null,null,null,[[[null,null,null,["Element",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The element to calculate the box.</p>\n"]]]]],[null,[null,null,null,["goog.math.Box",null,[null,null,[null,null,"goog.math.Box.html"]],null,[]]],[[[null,"<p>Box describing the position and dimension\nof element.</p>\n"]]]],[]],[["getEventPosition",[null,1167,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L1167"]],[[[null,"<p>Get the position of a drag event.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#getEventPosition"]],null,[]],null,[],[],[null,1]],[],null,[["event",[null,null,null,null,null,[[[null,null,null,["goog.fx.DragEvent",null,[null,null,[null,null,"goog.fx.DragEvent.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Drag event.</p>\n"]]]]],[null,[null,null,null,["goog.math.Coordinate",null,[null,null,[null,null,"goog.math.Coordinate.html"]],null,[]]],[[[null,"<p>Position of the event.</p>\n"]]]],[]],[["getListener",[null,255,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L255"]],[[[null,"<p>Gets the goog.events.ListenableKey for the event or null if no such\nlistener is in use.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#getListener"]],null,[]],[],[]],["SCOPE","EVENTOBJ"],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The name of the event\nwithout the &#39;on&#39; prefix.</p>\n"]]]],["listener",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[null,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>The\nlistener function to get.</p>\n"]]]],["capture",[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether the listener is a capturing listener.</p>\n"]]]],["opt_listenerScope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call the\nlistener.</p>\n"]]]]],[null,[null,null,null,null,null,[[[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>the found listener or null if not found.</p>\n"]]]],[]],[["getListeners",[null,238,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L238"]],[[[null,"<p>Gets all listeners in this listenable for the given type and\ncapture mode.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#getListeners"]],null,[]],[],[]],["EVENTOBJ"],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[]]]]]],[[[null,"<p>The type of the listeners to fire.</p>\n"]]]],["capture",[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>The capture mode of the listeners to fire.</p>\n"]]]]],[null,[null,null,null,["Array",null,null,1,[[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]]]]],[[[null,"<p>An array of registered\nlisteners.</p>\n"]]]],[]],[["getParentEventTarget",[null,206,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L206"]],[[[null,"<p>Returns the parent of this event target to use for capture/bubble\nmechanism.</p>\n<p>NOTE(chrishenry): The name reflects the original implementation of\ncustom event target (<code>goog.events.EventTarget</code>). We decided\nthat changing the name is not worth it.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#getParentEventTarget"]],null,[]],[],[]],[],null,[],[null,[null,null,null,null,null,[[[null,null,null,["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The parent EventTarget or null if\nthere is no parent.</p>\n"]]]],[]],[["getScrollPos",[null,1156,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L1156"]],[[[null,"<p>Gets the scroll distance as a coordinate object, using\nthe window of the current drag element&#39;s dom.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#getScrollPos"]],null,[]],null,[],[],[null,1]],[],null,[],[null,[null,null,null,["goog.math.Coordinate",null,[null,null,[null,null,"goog.math.Coordinate.html"]],null,[]]],[[[null,"<p>Object with scroll offsets &#39;x&#39; and &#39;y&#39;.</p>\n"]]]],[]],[["hasListener",[null,270,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L270"]],[[[null,"<p>Whether there is any active listeners matching the specified\nsignature. If either the type or capture parameters are\nunspecified, the function will match on the remaining criteria.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#hasListener"]],null,[]],[],[]],["EVENTOBJ"],null,[["opt_type",[1,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Event type.</p>\n"]]]],["opt_capture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Whether to check for capture or bubble\nlisteners.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether there is any active listeners matching\nthe requested type and/or capture phase.</p>\n"]]]],[]],[["init",[null,292,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L292"]],[[[null,"<p>Initialize drag and drop functionality for sources/targets already added.\nSources/targets added after init has been called will initialize themselves\none by one.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#init"]],null,[]],null,[],[]],[],null,[],null,[]],[["initItem",[null,310,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L310"]],[[[null,"<p>Initializes a single item.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#initItem"]],null,[]],null,[],[],[null,1]],[],null,[["item",[null,null,null,null,null,[[[null,null,null,["goog.fx.DragDropItem",null,[null,null,[null,null,"goog.fx.DragDropItem.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Item to initialize.</p>\n"]]]]],null,[]],[["isDisposed",[null,45,null,[null,null,"closure/goog/disposable/idisposable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/disposable/idisposable.js#L45"]],[[]],null,null,null,null,["goog.Disposable",null,[null,null,[null,null,"goog.Disposable.html#isDisposed"]],null,[]],[],[]],[],null,[],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether the object has been disposed of.</p>\n"]]]],[]],[["isInitialized",[null,236,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L236"]],[[[null,"<p>Whether the control has been initialized.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#isInitialized"]],null,[]],null,[],[]],[],null,[],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>True if it&#39;s been initialized.</p>\n"]]]],[]],[["isInside",[null,1145,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L1145"]],[[[null,"<p>Checks whatever a given point is inside a given box.</p>\n"]]],[[[null,"<p>Use goog.math.Box.contains.</p>\n"]]],null,[null,1],["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#isInside"]],null,[]],null,[],[],[null,1]],[],null,[["x",[null,null,null,["number",null,null,1,[]]],[[[null,"<p>Cursor position on the x-axis.</p>\n"]]]],["y",[null,null,null,["number",null,null,1,[]]],[[[null,"<p>Cursor position on the y-axis.</p>\n"]]]],["box",[null,null,null,null,null,[[[null,null,null,["goog.math.Box",null,[null,null,[null,null,"goog.math.Box.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Box to check position against.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether the given point is inside <code>box</code>.</p>\n"]]]],[]],[["listen",[null,113,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L113"]],[[[null,"<p>Adds an event listener. A listener can only be added once to an\nobject and if it is added again the key for the listener is\nreturned. Note that if the existing listener is a one-off listener\n(registered via listenOnce), it will no longer be a one-off\nlistener after a call to listen().</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#listen"]],null,[]],[],[]],["SCOPE","EVENTOBJ"],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The event type id.</p>\n"]]]],["listener",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[null,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>Callback\nmethod.</p>\n"]]]],["opt_useCapture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Whether to fire in capture phase\n(defaults to false).</p>\n"]]]],["opt_listenerScope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call the\nlistener.</p>\n"]]]]],[null,[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]],[[[null,"<p>Unique key for the listener.</p>\n"]]]],[]],[["listenOnce",[null,137,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L137"]],[[[null,"<p>Adds an event listener that is removed automatically after the\nlistener fired once.</p>\n<p>If an existing listener already exists, listenOnce will do\nnothing. In particular, if the listener was previously registered\nvia listen(), listenOnce() will not turn the listener into a\none-off listener. Similarly, if there is already an existing\none-off listener, listenOnce does not modify the listeners (it is\nstill a once listener).</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#listenOnce"]],null,[]],[],[]],["SCOPE","EVENTOBJ"],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The event type id.</p>\n"]]]],["listener",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[null,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>Callback\nmethod.</p>\n"]]]],["opt_useCapture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Whether to fire in capture phase\n(defaults to false).</p>\n"]]]],["opt_listenerScope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call the\nlistener.</p>\n"]]]]],[null,[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]],[[[null,"<p>Unique key for the listener.</p>\n"]]]],[]],[["maybeStartDrag",[null,371,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L371"]],[[[null,"<p>Starts a drag event for an item if the mouse button stays pressed and the\ncursor moves a few pixels. Allows dragging of items without first having to\nregister them with addItem.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#maybeStartDrag"]],null,[]],null,[],[]],[],null,[["event",[null,null,null,null,null,[[[null,null,null,["goog.events.BrowserEvent",null,[null,null,[null,null,"goog.events.BrowserEvent.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Mouse down event.</p>\n"]]]],["item",[null,null,null,null,null,[[[null,null,null,["goog.fx.DragDropItem",null,[null,null,[null,null,"goog.fx.DragDropItem.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Item that&#39;s being dragged.</p>\n"]]]]],null,[]],[["recalculateDragTargets",[null,450,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L450"]],[[[null,"<p>Recalculates the geometry of this source&#39;s drag targets.  Call this\nif the position or visibility of a drag target has changed during\na drag, or if targets are added or removed.</p>\n<p>TODO(user): this is an expensive operation;  more efficient APIs\nmay be necessary.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#recalculateDragTargets"]],null,[]],null,[],[]],[],null,[],null,[]],[["recalculateScrollableContainers",[null,468,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L468"]],[[[null,"<p>Recalculates the current scroll positions of scrollable containers and\nallocates targets. Call this if the position of a container changed or if\ntargets are added or removed.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#recalculateScrollableContainers"]],null,[]],null,[],[]],[],null,[],null,[]],[["registerDisposable",[null,208,null,[null,null,"closure/goog/disposable/disposable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L208"]],[[[null,"<p>Associates a disposable object with this object so that they will be disposed\ntogether.</p>\n"]]],null,null,null,["goog.Disposable",null,[null,null,[null,null,"goog.Disposable.html#registerDisposable"]],null,[]],null,[],[]],[],null,[["disposable",[null,null,null,null,null,[[[null,null,null,["goog.disposable.IDisposable",null,[null,null,[null,null,"goog.disposable.IDisposable.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>that will be disposed when\nthis object is disposed.</p>\n"]]]]],null,[]],[["removeAllListeners",[null,192,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L192"]],[[[null,"<p>Removes all listeners from this listenable. If type is specified,\nit will only remove listeners of the particular type. otherwise all\nregistered listeners will be removed.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#removeAllListeners"]],null,[]],[],[]],[],null,[["opt_type",[1,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Type of event to remove, default is to\nremove all types.</p>\n"]]]]],[null,[null,null,null,["number",null,null,1,[]]],[[[null,"<p>Number of listeners removed.</p>\n"]]]],[]],[["removeAllScrollableContainers",[null,743,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L743"]],[[[null,"<p>Removes all scrollable containers.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#removeAllScrollableContainers"]],null,[]],null,[],[]],[],null,[],null,[]],[["removeEventListener",[null,174,null,[null,null,"closure/goog/events/eventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/eventtarget.js#L174"]],[[[null,"<p>Removes an event listener from the event target. The handler must be the\nsame object as the one added. If the handler has not been added then\nnothing is done.</p>\n"]]],[[[null,"<p>Use <code>#unlisten</code> instead, when possible. Otherwise, use\n<code>goog.events.unlisten</code> if you are passing Object\n(instead of Function) as handler.</p>\n"]]],null,[null,1],["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#removeEventListener"]],null,[]],null,[],[]],[],null,[["type",[null,null,null,["string",null,null,1,[]]],[[[null,"<p>The type of the event to listen for.</p>\n"]]]],["handler",[null,null,null,null,null,[[[null,null,[null,null,[[null,null,null,null,null,null,null,1]],[null,null,null,null,null,null,null,1]]],[null,null,null,null,[[["handleEvent",[null,null,[null,null,[[null,null,null,null,null,null,null,1]],[null,null,null,null,null,null,null,1]]]]]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The function\nto handle the event. The handler can also be an object that implements\nthe handleEvent method which takes the event object as argument.</p>\n"]]]],["opt_capture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>In DOM-compliant browsers, this determines\nwhether the listener is fired during the capture or bubble phase\nof the event.</p>\n"]]]],["opt_handlerScope",[1,null,null,null,null,[[[null,null,null,["Object",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call\nthe listener.</p>\n"]]]]],null,[]],[["removeItems",[null,355,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L355"]],[[[null,"<p>Removes all items.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#removeItems"]],null,[]],null,[],[]],[],null,[],null,[]],[["removeTarget",[null,268,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L268"]],[[[null,"<p>Removes the specified target from the list of drop targets.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#removeTarget"]],null,[]],null,[],[]],[],null,[["target",[null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html"]],null,[]]],[[[null,"<p>Target to remove.</p>\n"]]]]],null,[]],[["setDragClass",[null,204,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L204"]],[[[null,"<p>Set class to add to source elements being dragged.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#setDragClass"]],null,[]],null,[],[]],[],null,[["className",[null,null,null,["string",null,null,1,[]]],[[[null,"<p>Class to be added.  Must be a single, valid\nclassname.</p>\n"]]]]],null,[]],[["setParentEventTarget",[null,126,null,[null,null,"closure/goog/events/eventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/eventtarget.js#L126"]],[[[null,"<p>Sets the parent of this event target to use for capture/bubble\nmechanism.</p>\n"]]],null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#setParentEventTarget"]],null,[]],null,[],[]],[],null,[["parent",[null,null,null,null,null,[[[null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Parent listenable (null if none).</p>\n"]]]]],null,[]],[["setScrollTarget",[null,282,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L282"]],[[[null,"<p>Sets the SCROLL event target to make drag element follow scrolling.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#setScrollTarget"]],null,[]],null,[],[]],[],null,[["scrollTarget",[null,null,null,null,null,[[[null,null,null,["EventTarget",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The element that dispatches SCROLL events.</p>\n"]]]]],null,[]],[["setSourceClass",[null,215,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L215"]],[[[null,"<p>Set class to add to source elements.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#setSourceClass"]],null,[]],null,[],[]],[],null,[["className",[null,null,null,["string",null,null,1,[]]],[[[null,"<p>Class to be added.  Must be a single, valid\nclassname.</p>\n"]]]]],null,[]],[["setSubtargetFunction",[null,808,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L808"]],[[[null,"<p>Set a function that provides subtargets. A subtargeting function\nreturns an arbitrary identifier for each subtarget of an element.\nDnD code will generate additional drag over / out events when\nswitching from subtarget to subtarget. This is useful for instance\nif you are interested if you are on the top half or the bottom half\nof the element.\nThe provided function will be given the DragDropItem, box, x, y\nbox is the current window coordinates occupied by element\nx, y is the mouse position in window coordinates</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#setSubtargetFunction"]],null,[]],null,[],[]],[],null,[["f",[null,null,null,null,null,[[[null,null,null,["Function",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The new subtarget function.</p>\n"]]]]],null,[]],[["setTargetClass",[null,226,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L226"]],[[[null,"<p>Set class to add to target elements.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#setTargetClass"]],null,[]],null,[],[]],[],null,[["className",[null,null,null,["string",null,null,1,[]]],[[[null,"<p>Class to be added.  Must be a single, valid\nclassname.</p>\n"]]]]],null,[]],[["setTargetForTesting",[null,321,null,[null,null,"closure/goog/events/eventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/eventtarget.js#L321"]],[[[null,"<p>Sets the target to be used for <code>event.target</code> when firing\nevent. Mainly used for testing. For example, see\n<code>goog.testing.events.mixinListenable</code>.</p>\n"]]],null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#setTargetForTesting"]],null,[]],null,[],[]],[],null,[["target",[null,null,null,["Object",null,null,1,[]]],[[[null,"<p>The target.</p>\n"]]]]],null,[]],[["startDrag",[null,382,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L382"]],[[[null,"<p>Event handler that&#39;s used to start drag.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#startDrag"]],null,[]],null,[],[]],[],null,[["event",[null,null,null,null,null,[[[null,null,null,["goog.events.BrowserEvent",null,[null,null,[null,null,"goog.events.BrowserEvent.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Mouse move event.</p>\n"]]]],["item",[null,null,null,null,null,[[[null,null,null,["goog.fx.DragDropItem",null,[null,null,[null,null,"goog.fx.DragDropItem.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Item that&#39;s being dragged.</p>\n"]]]]],null,[]],[["unlisten",[null,153,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L153"]],[[[null,"<p>Removes an event listener which was added with listen() or listenOnce().</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#unlisten"]],null,[]],[],[]],["SCOPE","EVENTOBJ"],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The event type id.</p>\n"]]]],["listener",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[null,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>Callback\nmethod.</p>\n"]]]],["opt_useCapture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Whether to fire in capture phase\n(defaults to false).</p>\n"]]]],["opt_listenerScope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call\nthe listener.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether any listener was removed.</p>\n"]]]],[]],[["unlistenByKey",[null,164,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L164"]],[[[null,"<p>Removes an event listener which was added with listen() by the key\nreturned by listen().</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#unlistenByKey"]],null,[]],[],[]],[],null,[["key",[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]],[[[null,"<p>The key returned by\nlisten() or listenOnce().</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether any listener was removed.</p>\n"]]]],[]]],[[["creationStack",[null,44,null,[null,null,"closure/goog/disposable/disposable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L44"]],[[[null,"<p>If monitoring the goog.Disposable instances is enabled, stores the creation\nstack trace of the Disposable instance.</p>\n"]]],null,null,null,["goog.Disposable",null,[null,null,[null,null,"goog.Disposable.html#creationStack"]],null,[]],null,[],[]],[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]]],[["items_",[null,70,null,[null,null,"closure/goog/fx/abstractdragdrop.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/abstractdragdrop.js#L70"]],[[[null,"<p>List of items that makes up the drag source or drop target.</p>\n"]]],null,null,null,["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html#items_"]],null,[]],null,[],[],[null,1]],[null,null,null,null,null,[[[null,null,null,["Array",null,null,1,[[null,null,null,null,null,[[[null,null,null,["goog.fx.DragDropItem",null,[null,null,[null,null,"goog.fx.DragDropItem.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]],[null,null,null,null,null,null,null,null,null,1]]]]]],null,[["goog.fx.AbstractDragDrop",null,[null,null,[null,null,"goog.fx.AbstractDragDrop.html"]],null,[]],["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html"]],null,[]],["goog.Disposable",null,[null,null,[null,null,"goog.Disposable.html"]],null,[]]],[["goog.disposable.IDisposable",null,[null,null,[null,null,"goog.disposable.IDisposable.html"]],null,[]],["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html"]],null,[]]],[],[["goog.fx.DragDrop",null,[null,null,[null,null,"goog.fx.DragDrop.html"]],null,[]],null,null,1],null,"goog.fx.DragDrop.html","goog.fx.DragDrop",[],[],[],[]]]]]