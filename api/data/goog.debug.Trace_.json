{"2":{"1":[{"1":"goog.debug.Trace_","5":{"1":"closure/goog/debug/tracer.js","2":39,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L39"},"6":{"1":[{"1":"Trace_.Event_","2":"goog.debug.Trace_.Event_.html","3":{"1":[{"2":"<p>Private class used to encapsulate a single event, either the start or stop\nof a tracer.</p>\n"}]}},{"1":"Trace_.Stat_","2":"goog.debug.Trace_.Stat_.html","3":{"1":[{"2":"<p>Class to keep track of a stat of a single tracer type.</p>\n"}]}}],"2":[{"1":"Trace_.EventType","2":"goog.debug.Trace_.EventType.html","3":{"1":[{"2":"<p>Event type supported by tracer</p>\n"}]}}]},"7":{"1":[{"2":"<p>Class used for singleton goog.debug.Trace.  Used for timing slow points in\nthe code. Based on the java Tracer class but optimized for javascript.\nSee com.google.common.tracing.Tracer.</p>\n"}]},"8":{},"12":[{"1":{"1":"Trace_.now","2":{"1":"closure/goog/debug/tracer.js","2":715,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L715"},"3":{"1":[{"2":"<p>Returns the current time. Done through a wrapper function so it can be\noverridden by application code. Gmail has an ActiveX extension that provides\nhigher precision timing info.</p>\n"}]}},"5":{"2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>The current time in milliseconds.</p>\n"}]}}}],"14":{"1":{"1":"Trace_","2":{"1":"closure/goog/debug/tracer.js","2":39,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L39"},"3":{"1":[{"2":"<p>Class used for singleton goog.debug.Trace.  Used for timing slow points in\nthe code. Based on the java Tracer class but optimized for javascript.\nSee com.google.common.tracing.Tracer.</p>\n"}]},"5":2},"3":true},"15":[{"1":{"1":"addComment","2":{"1":"closure/goog/debug/tracer.js","2":551,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L551"},"3":{"1":[{"2":"<p>Adds a comment to the trace. Makes it possible to see when a specific event\nhappened in relation to the traces.</p>\n"}]}},"4":[{"1":"comment","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>A comment that is inserted into the trace.</p>\n"}]}},{"1":"opt_type","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Type used to identify the tracer. If a comment is\ngiven a type and multiple comments are done on that type then a &#34;TOTAL\nline will be produced showing the total number of comments of that type.</p>\n"}]}},{"1":"opt_timeStamp","2":{"1":true,"6":{"1":[{"4":{"1":"number","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The timestamp to insert the comment. If not\nspecified, the current time wil be used.</p>\n"}]}}]},{"1":{"1":"clearCurrentTrace","2":{"1":"closure/goog/debug/tracer.js","2":334,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L334"},"3":{"1":[{"2":"<p>Clears the current trace</p>\n"}]}}},{"1":{"1":"getFormattedTrace","2":{"1":"closure/goog/debug/tracer.js","2":616,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L616"},"3":{"1":[{"2":"<p>Returns a formatted string for the current trace</p>\n"}]}},"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>A formatted string that shows the timings of the current\ntrace.</p>\n"}]}}},{"1":{"1":"getTotalVarAlloc","2":{"1":"closure/goog/debug/tracer.js","2":531,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L531"},"3":{"1":[{"2":"<p>Returns the total number of allocations since the GC stats were reset. Only\nworks in IE.</p>\n"}]}},"5":{"2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>The number of allocaitons or -1 if not supported.</p>\n"}]}}},{"1":{"1":"initCurrentTrace","2":{"1":"closure/goog/debug/tracer.js","2":326,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L326"},"3":{"1":[{"2":"<p>Initializes and resets the current trace</p>\n"}]}},"4":[{"1":"defaultThreshold","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>The default threshold below which the\ntracer output will be suppressed. Can be overridden on a per-Tracer basis.</p>\n"}]}}]},{"1":{"1":"reset","2":{"1":"closure/goog/debug/tracer.js","2":344,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L344"},"3":{"1":[{"2":"<p>Resets the trace.</p>\n"}]}},"4":[{"1":"defaultThreshold","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>The default threshold below which the\ntracer output will be suppressed. Can be overridden on a per-Tracer basis.</p>\n"}]}}]},{"1":{"1":"setGcTracer","2":{"1":"closure/goog/debug/tracer.js","2":521,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L521"},"3":{"1":[{"2":"<p>Sets the ActiveX object that can be used to get GC tracing in IE6.</p>\n"}]}},"4":[{"1":"gcTracer","2":{"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>GCTracer ActiveX object.</p>\n"}]}}]},{"1":{"1":"setStartTime","2":{"1":"closure/goog/debug/tracer.js","2":316,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L316"},"3":{"1":[{"2":"<p>Add the ability to explicitly set the start time. This is useful for example\nfor measuring initial load time where you can set a variable as soon as the\nmain page of the app is loaded and then later call this function when the\nTracer code has been loaded.</p>\n"}]}},"4":[{"1":"startTime","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>The start time to set.</p>\n"}]}}]},{"1":{"1":"startTracer","2":{"1":"closure/goog/debug/tracer.js","2":398,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L398"},"3":{"1":[{"2":"<p>Starts a tracer</p>\n"}]}},"4":[{"1":"comment","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>A comment used to identify the tracer. Does not\nneed to be unique.</p>\n"}]}},{"1":"opt_type","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Type used to identify the tracer. If a Trace is\ngiven a type (the first argument to the constructor) and multiple Traces\nare done on that type then a &#34;TOTAL line will be produced showing the\ntotal number of traces and the sum of the time\n(&#34;TOTAL Database 2 (37 ms)&#34; in our example). These traces should be\nmutually exclusive or else the sum won&#39;t make sense (the time will\nbe double counted if the second starts before the first ends).</p>\n"}]}}],"5":{"2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>The identifier for the tracer that should be passed to the\nthe stopTracer method.</p>\n"}]}}},{"1":{"1":"stopTracer","2":{"1":"closure/goog/debug/tracer.js","2":448,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L448"},"3":{"1":[{"2":"<p>Stops a tracer</p>\n"}]}},"4":[{"1":"id","2":{"6":{"1":[{"4":{"1":"number","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The id of the tracer that is ending.</p>\n"}]}},{"1":"opt_silenceThreshold","2":{"1":true,"6":{"1":[{"4":{"1":"number","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Threshold below which the tracer is\nsilenced.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"number","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>The elapsed time for the tracer or null if the tracer\nidentitifer was not recognized.</p>\n"}]}}},{"1":{"1":"toString","2":{"1":"closure/goog/debug/tracer.js","2":626,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L626"},"3":{"1":[{"2":"<p>Returns a formatted string that describes the thread trace.</p>\n"}]}},"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>A formatted string.</p>\n"}]}}}],"16":[{"1":{"1":"MAX_TRACE_SIZE","2":{"1":"closure/goog/debug/tracer.js","2":165,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L165"},"3":{"1":[{"2":"<p>Maximum size of the trace before we discard events</p>\n"}]}},"2":{"4":{"1":"number","4":true}}}],"21":{"1":{"1":"goog.debug","3":{"1":"goog.debug.html"}},"2":4},"23":"goog.debug.Trace_.html","24":"goog.debug.Trace_"}]}}