{"2":{"1":[{"1":"goog.math.interpolator.Interpolator1","5":{"1":"closure/goog/math/interpolator/interpolator1.js","2":28,"3":"https://github.com/google/closure-library/blob/master/closure/goog/math/interpolator/interpolator1.js#L28"},"7":{"1":[{"2":"<p>An interface for one dimensional data interpolation.</p>\n"}]},"8":{"5":true},"14":{"1":{"1":"Interpolator1","2":{"1":"closure/goog/math/interpolator/interpolator1.js","2":28,"3":"https://github.com/google/closure-library/blob/master/closure/goog/math/interpolator/interpolator1.js#L28"},"3":{"1":[{"2":"<p>An interface for one dimensional data interpolation.</p>\n"}]}}},"15":[{"1":{"1":"getInverse","2":{"1":"closure/goog/math/interpolator/interpolator1.js","2":63,"3":"https://github.com/google/closure-library/blob/master/closure/goog/math/interpolator/interpolator1.js#L63"},"3":{"1":[{"2":"<p>Computes the inverse interpolator. That is, it returns invInterp s.t.\nthis.interpolate(invInterp.interpolate(t))) &#61; t. Note that the inverse\ninterpolator is only well defined if the data being interpolated is\n&#39;invertible&#39;, i.e. it represents a bijective function.\nIn addition, the returned interpolator is only guaranteed to give the exact\ninverse at the input data passed in getData.\nIf &#39;this&#39; has no data, the returned Interpolator will be empty as well.</p>\n"}]}},"5":{"2":{"4":{"1":"goog.math.interpolator.Interpolator1","3":{"1":"goog.math.interpolator.Interpolator1.html"}}},"3":{"1":[{"2":"<p>The inverse interpolator.</p>\n"}]}}},{"1":{"1":"interpolate","2":{"1":"closure/goog/math/interpolator/interpolator1.js","2":50,"3":"https://github.com/google/closure-library/blob/master/closure/goog/math/interpolator/interpolator1.js#L50"},"3":{"1":[{"2":"<p>Computes the interpolated value at abscissa x. If x is outside the range\nof the data points passed in setData, the value is extrapolated.</p>\n"}]}},"4":[{"1":"x","2":{"4":{"1":"number","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"4":true}},"3":{"1":[{"2":"<p>The abscissa to sample at.</p>\n"}]}}],"5":{"2":{"4":{"1":"number","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"4":true}},"3":{"1":[{"2":"<p>The interpolated value at abscissa x.</p>\n"}]}}},{"1":{"1":"setData","2":{"1":"closure/goog/math/interpolator/interpolator1.js","2":41,"3":"https://github.com/google/closure-library/blob/master/closure/goog/math/interpolator/interpolator1.js#L41"},"3":{"1":[{"2":"<p>Sets the data to be interpolated. Note that the data points are expected\nto be sorted according to their abscissa values and not have duplicate\nvalues. E.g. calling setData([0, 0, 1], [1, 1, 3]) may give undefined\nresults, the correct call should be setData([0, 1], [1, 3]).\nCalling setData multiple times does not merge the data samples. The last\ncall to setData is the one used when computing the interpolation.</p>\n"}]}},"4":[{"1":"x","2":{"4":{"1":"Array","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"},"4":true,"5":[{"4":{"1":"number","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"4":true}}]}},"3":{"1":[{"2":"<p>The abscissa of the data points.</p>\n"}]}},{"1":"y","2":{"4":{"1":"Array","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"},"4":true,"5":[{"4":{"1":"number","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"4":true}}]}},"3":{"1":[{"2":"<p>The ordinate of the data points.</p>\n"}]}}]}],"27":[{"1":"goog.math.interpolator.Linear1","3":{"1":"goog.math.interpolator.Linear1.html"}},{"1":"goog.math.interpolator.Pchip1","3":{"1":"goog.math.interpolator.Pchip1.html"}},{"1":"goog.math.interpolator.Spline1","3":{"1":"goog.math.interpolator.Spline1.html"}}],"21":{"1":{"1":"goog.math.interpolator","3":{"1":"goog.math.interpolator.html"}}},"23":"goog.math.interpolator.Interpolator1.html","24":"goog.math.interpolator.Interpolator1"}]}}