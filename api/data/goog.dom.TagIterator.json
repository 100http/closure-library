{"2":{"1":[{"1":"goog.dom.TagIterator","5":{"1":"closure/goog/dom/tagiterator.js","2":100,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L100"},"7":{"1":[{"2":"<p>A DOM tree traversal iterator.</p>\n<p>Starting with the given node, the iterator walks the DOM in order, reporting\nevents for the start and end of Elements, and the presence of text nodes. For\nexample:</p>\n <pre>\n &lt;div&gt;1&lt;span&gt;2&lt;/span&gt;3&lt;/div&gt;\n </pre>\n<p>Will return the following nodes:</p>\n<p><code>[div, 1, span, 2, span, 3, div]</code></p>\n<p>With the following states:</p>\n<p><code>[START, OTHER, START, OTHER, END, OTHER, END]</code></p>\n<p>And the following depths</p>\n<p><code>[1, 1, 2, 2, 1, 1, 0]</code></p>\n<p>Imagining <code>|</code> represents iterator position, the traversal stops at\neach of the following locations:</p>\n <pre>\n &lt;div&gt;|1|&lt;span&gt;|2|&lt;/span&gt;|3|&lt;/div&gt;|\n </pre>\n<p>The iterator can also be used in reverse mode, which will return the nodes\nand states in the opposite order.  The depths will be slightly different\nsince, like in normal mode, the depth is computed <em>after</em> the given node.</p>\n<p>Lastly, it is possible to create an iterator that is unconstrained, meaning\nthat it will continue iterating until the end of the document instead of\nuntil exiting the start node.</p>\n"}]},"8":{},"14":{"1":{"1":"TagIterator","2":{"1":"closure/goog/dom/tagiterator.js","2":100,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L100"},"3":{"1":[{"2":"<p>A DOM tree traversal iterator.</p>\n<p>Starting with the given node, the iterator walks the DOM in order, reporting\nevents for the start and end of Elements, and the presence of text nodes. For\nexample:</p>\n <pre>\n &lt;div&gt;1&lt;span&gt;2&lt;/span&gt;3&lt;/div&gt;\n </pre>\n<p>Will return the following nodes:</p>\n<p><code>[div, 1, span, 2, span, 3, div]</code></p>\n<p>With the following states:</p>\n<p><code>[START, OTHER, START, OTHER, END, OTHER, END]</code></p>\n<p>And the following depths</p>\n<p><code>[1, 1, 2, 2, 1, 1, 0]</code></p>\n<p>Imagining <code>|</code> represents iterator position, the traversal stops at\neach of the following locations:</p>\n <pre>\n &lt;div&gt;|1|&lt;span&gt;|2|&lt;/span&gt;|3|&lt;/div&gt;|\n </pre>\n<p>The iterator can also be used in reverse mode, which will return the nodes\nand states in the opposite order.  The depths will be slightly different\nsince, like in normal mode, the depth is computed <em>after</em> the given node.</p>\n<p>Lastly, it is possible to create an iterator that is unconstrained, meaning\nthat it will continue iterating until the end of the document instead of\nuntil exiting the start node.</p>\n"}]}},"3":true,"4":[{"1":"opt_node","2":{"1":true,"6":{"1":[{"4":{"1":"Node"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The start node.  If unspecified or null, defaults to\nan empty iterator.</p>\n"}]}},{"1":"opt_reversed","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"},"4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Whether to traverse the tree in reverse.</p>\n"}]}},{"1":"opt_unconstrained","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"},"4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Whether the iterator is not constrained\nto the starting node and its children.</p>\n"}]}},{"1":"opt_tagType","2":{"1":true,"6":{"1":[{"4":{"1":"goog.dom.TagWalkType","3":{"1":"goog.dom.TagWalkType.html"}}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The type of the position.\nDefaults to the start of the given node for forward iterators, and\nthe end of the node for reverse iterators.</p>\n"}]}},{"1":"opt_depth","2":{"1":true,"6":{"1":[{"4":{"1":"number","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>The starting tree depth.</p>\n"}]}}]},"15":[{"1":{"1":"__iterator__","2":{"1":"closure/goog/iter/iter.js","2":81,"3":"https://github.com/google/closure-library/blob/master/closure/goog/iter/iter.js#L81"},"3":{"1":[{"2":"<p>Returns the <code>Iterator</code> object itself.  This is used to implement\nthe iterator protocol in JavaScript 1.7</p>\n"}]},"7":{"1":"goog.iter.Iterator","3":{"1":"goog.iter.Iterator.html#__iterator__"}}},"4":[{"1":"opt_keys","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"},"4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Whether to return the keys or values. Default is\nto only return the values.  This is being used by the for-in loop (true)\nand the for-each-in loop (false).  Even though the param gives a hint\nabout what the iterator will return there is no guarantee that it will\nreturn the keys when true is passed.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.iter.Iterator","3":{"1":"goog.iter.Iterator.html"},"5":[{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>The object itself.</p>\n"}]}}},{"1":{"1":"clone","2":{"1":"closure/goog/dom/tagiterator.js","2":204,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L204"},"3":{}},"5":{"2":{"4":{"1":"goog.dom.TagIterator","3":{"1":"goog.dom.TagIterator.html"}}},"3":{"1":[{"2":"<p>A copy of this iterator.</p>\n"}]}}},{"1":{"1":"copyFrom","2":{"1":"closure/goog/dom/tagiterator.js","2":192,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L192"},"3":{"1":[{"2":"<p>Replace this iterator&#39;s values with values from another. The two iterators\nmust be of the same type.</p>\n"}]},"5":1},"4":[{"1":"other","2":{"6":{"1":[{"4":{"1":"goog.dom.TagIterator","3":{"1":"goog.dom.TagIterator.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>The iterator to copy.</p>\n"}]}}]},{"1":{"1":"equals","2":{"1":"closure/goog/dom/tagiterator.js","2":332,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L332"},"3":{"1":[{"2":"<p>Test if two iterators are at the same position - i.e. if the node and tagType\nis the same.  This will still return true if the two iterators are moving in\nopposite directions or have different constraints.</p>\n"}]}},"4":[{"1":"other","2":{"6":{"1":[{"4":{"1":"goog.dom.TagIterator","3":{"1":"goog.dom.TagIterator.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>The iterator to compare to.</p>\n"}]}}],"5":{"2":{"4":{"1":"boolean","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"},"4":true}},"3":{"1":[{"2":"<p>Whether the two iterators are at the same position.</p>\n"}]}}},{"1":{"1":"isEndTag","2":{"1":"closure/goog/dom/tagiterator.js","2":312,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L312"},"3":{}},"5":{"2":{"4":{"1":"boolean","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"},"4":true}},"3":{"1":[{"2":"<p>Whether this iterator&#39;s position is an end tag position.</p>\n"}]}}},{"1":{"1":"isNonElement","2":{"1":"closure/goog/dom/tagiterator.js","2":320,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L320"},"3":{}},"5":{"2":{"4":{"1":"boolean","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"},"4":true}},"3":{"1":[{"2":"<p>Whether this iterator&#39;s position is not at an element node.</p>\n"}]}}},{"1":{"1":"isStartTag","2":{"1":"closure/goog/dom/tagiterator.js","2":304,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L304"},"3":{}},"5":{"2":{"4":{"1":"boolean","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"},"4":true}},"3":{"1":[{"2":"<p>Whether this iterator&#39;s position is a start tag position.</p>\n"}]}}},{"1":{"1":"isStarted","2":{"1":"closure/goog/dom/tagiterator.js","2":296,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L296"},"3":{},"5":1},"5":{"2":{"4":{"1":"boolean","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"},"4":true}},"3":{"1":[{"2":"<p>Whether next has ever been called on this iterator.</p>\n"}]}}},{"1":{"1":"next","2":{"1":"closure/goog/dom/tagiterator.js","2":242,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L242"},"3":{"1":[{"2":"<p>Move to the next position in the DOM tree.</p>\n"}]},"8":{"1":"goog.iter.Iterator","3":{"1":"goog.iter.Iterator.html#next"}}},"5":{"2":{"6":{"1":[{"4":{"1":"Node"}},{"10":true}]}},"3":{"1":[{"2":"<p>Returns the next node, or throws a goog.iter.StopIteration\nexception if the end of the iterator&#39;s range has been reached.</p>\n"}]}}},{"1":{"1":"restartTag","2":{"1":"closure/goog/dom/tagiterator.js","2":226,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L226"},"3":{"1":[{"2":"<p>Restart the current tag.</p>\n"}]}}},{"1":{"1":"setPosition","2":{"1":"closure/goog/dom/tagiterator.js","2":164,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L164"},"3":{"1":[{"2":"<p>Set the position of the iterator.  Overwrite the tree node and the position\ntype which can be one of the <a href=\"goog.dom.TagWalkType.html\"><code>goog.dom.TagWalkType</code></a> token types.\nOnly overwrites the tree depth when the parameter is specified.</p>\n"}]}},"4":[{"1":"node","2":{"6":{"1":[{"4":{"1":"Node"}},{"10":true}]}},"3":{"1":[{"2":"<p>The node to set the position to.</p>\n"}]}},{"1":"opt_tagType","2":{"1":true,"6":{"1":[{"4":{"1":"goog.dom.TagWalkType","3":{"1":"goog.dom.TagWalkType.html"}}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The type of the position\nDefaults to the start of the given node.</p>\n"}]}},{"1":"opt_depth","2":{"1":true,"6":{"1":[{"4":{"1":"number","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>The tree depth.</p>\n"}]}}]},{"1":{"1":"skipTag","2":{"1":"closure/goog/dom/tagiterator.js","2":213,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L213"},"3":{"1":[{"2":"<p>Skip the current tag.</p>\n"}]}}},{"1":{"1":"splice","2":{"1":"closure/goog/dom/tagiterator.js","2":347,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L347"},"3":{"1":[{"2":"<p>Replace the current node with the list of nodes. Reset the iterator so that\nit visits the first of the nodes next.</p>\n"}]}},"4":[{"1":"var_args","2":{"2":true,"6":{"1":[{"4":{"1":"Object","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object"},"4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>A list of nodes to replace the current node with.\nIf the first argument is array-like, it will be used, otherwise all the\narguments are assumed to be nodes.</p>\n"}]}}]}],"16":[{"1":{"1":"constrained","2":{"1":"closure/goog/dom/tagiterator.js","2":142,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L142"},"3":{"1":[{"2":"<p>Whether the iterator is constrained to the starting node and its children.</p>\n"}]}},"2":{"4":{"1":"boolean","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"},"4":true}}},{"1":{"1":"depth","2":{"1":"closure/goog/dom/tagiterator.js","2":130,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L130"},"3":{"1":[{"2":"<p>The tree depth of this position relative to where the iterator started.\nThe depth is considered to be the tree depth just past the current node,\nso if an iterator is at position</p>\n <pre>\n     </pre><div>|</div>\n \n<p>(i.e. the node is the div and the type is START_TAG) its depth will be 1.</p>\n"}]}},"2":{"4":{"1":"number","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"4":true}}},{"1":{"1":"node","2":{"1":"closure/goog/dom/tagiterator.js","2":112,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L112"},"3":{"1":[{"2":"<p>The node this position is located on.</p>\n"}]}},"2":{"6":{"1":[{"4":{"1":"Node"}},{"10":true}]}}},{"1":{"1":"reversed","2":{"1":"closure/goog/dom/tagiterator.js","2":106,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L106"},"3":{"1":[{"2":"<p>Whether the node iterator is moving in reverse.</p>\n"}]}},"2":{"4":{"1":"boolean","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"},"4":true}}},{"1":{"1":"tagType","2":{"1":"closure/goog/dom/tagiterator.js","2":118,"3":"https://github.com/google/closure-library/blob/master/closure/goog/dom/tagiterator.js#L118"},"3":{"1":[{"2":"<p>The type of this position.</p>\n"}]}},"2":{"4":{"1":"goog.dom.TagWalkType","3":{"1":"goog.dom.TagWalkType.html"}}}}],"18":[{"1":"goog.iter.Iterator","3":{"1":"goog.iter.Iterator.html"},"5":[{"6":{"1":[{"4":{"1":"Node"}},{"10":true}]}}]}],"26":[{"1":"goog.dom.NodeIterator","3":{"1":"goog.dom.NodeIterator.html"}},{"1":"goog.dom.RangeIterator","3":{"1":"goog.dom.RangeIterator.html"}}],"21":{"1":{"1":"goog.dom","3":{"1":"goog.dom.html"}}},"23":"goog.dom.TagIterator.html","24":"goog.dom.TagIterator"}]}}