{"2":{"1":[{"1":"goog.debug","5":{"1":"closure/goog/debug/error.js","2":24,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/error.js#L24"},"6":{"1":[{"1":"Console","2":"goog.debug.Console.html","3":{"1":[{"2":"<p>Create and install a log handler that logs to window.console if available</p>\n"}]}},{"1":"DebugWindow","2":"goog.debug.DebugWindow.html","3":{"1":[{"2":"<p>Provides a debug DebugWindow that is bound to the goog.debug.Logger.</p>\n"}]}},{"1":"DevCss","2":"goog.debug.DevCss.html","3":{"1":[{"2":"<p>A class for solving development CSS issues/emulating the CSS Compiler.</p>\n"}]}},{"1":"DivConsole","2":"goog.debug.DivConsole.html","3":{"1":[{"2":"<p>A class for visualising logger calls in a div element.</p>\n"}]}},{"1":"Error","2":"goog.debug.Error.html","3":{"1":[{"2":"<p>Base class for custom error objects.</p>\n"}]}},{"1":"ErrorHandler","2":"goog.debug.ErrorHandler.html","3":{"1":[{"2":"<p>The ErrorHandler can be used to to wrap functions with a try/catch\nstatement.</p>\n"}]}},{"1":"ErrorReporter","2":"goog.debug.ErrorReporter.html","3":{"1":[{"2":"<p>Constructs an error reporter.</p>\n"}]}},{"1":"FancyWindow","2":"goog.debug.FancyWindow.html","3":{"1":[{"2":"<p>Provides a Fancy extension to the DebugWindow class.</p>\n"}]}},{"1":"Formatter","2":"goog.debug.Formatter.html","3":{"1":[{"2":"<p>Base class for Formatters.</p>\n"}]}},{"1":"FpsDisplay","2":"goog.debug.FpsDisplay.html","3":{"1":[{"2":"<p>Displays frames per seconds that the window this component is\nrendered in is animating at.</p>\n"}]}},{"1":"HtmlFormatter","2":"goog.debug.HtmlFormatter.html","3":{"1":[{"2":"<p>Formatter that returns formatted html.</p>\n"}]}},{"1":"LogBuffer","2":"goog.debug.LogBuffer.html","3":{"1":[{"2":"<p>Creates the log buffer.</p>\n"}]}},{"1":"LogRecord","2":"goog.debug.LogRecord.html","3":{"1":[{"2":"<p>LogRecord objects are used to pass logging requests between\nthe logging framework and individual log Handlers.</p>\n"}]}},{"1":"Logger","2":"goog.debug.Logger.html","3":{"1":[{"2":"<p>The Logger is an object used for logging debug messages.</p>\n"}]}},{"1":"RelativeTimeProvider","2":"goog.debug.RelativeTimeProvider.html","3":{"1":[{"2":"<p>A simple object to keep track of a timestamp considered the start of\nsomething.</p>\n"}]}},{"1":"TextFormatter","2":"goog.debug.TextFormatter.html","3":{"1":[{"2":"<p>Formatter that returns formatted plain text</p>\n"}]}},{"1":"Trace_","2":"goog.debug.Trace_.html","3":{"1":[{"2":"<p>Class used for singleton goog.debug.Trace.</p>\n"}]}}],"3":[{"1":"EntryPointMonitor","2":"goog.debug.EntryPointMonitor.html","3":{},"4":{"5":true}}]},"7":{},"8":{},"10":[{"1":{"1":"Loggable","2":{"1":"closure/goog/debug/logger.js","2":44,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/logger.js#L44"},"3":{"1":[{"2":"<p>A message value that can be handled by a Logger.</p>\n<p>Functions are treated like callbacks, but are only called when the event&#39;s\nlog level is enabled. This is useful for logging messages that are expensive\nto construct.</p>\n"}]}},"2":{"6":{"1":[{"4":{"1":"string","4":true}},{"3":{"4":{"4":{"1":"string","4":true}}}}]}}}],"12":[{"1":{"1":"catchErrors","2":{"1":"closure/goog/debug/debug.js","2":48,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L48"},"3":{"1":[{"2":"<p>Catches onerror events fired by windows and similar objects.</p>\n"}]}},"4":[{"1":"logFunc","2":{"3":{"3":[{"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true}]}}],"4":{"8":true}}},"3":{"1":[{"2":"<p>The function to call with the error\ninformation.</p>\n"}]}},{"1":"opt_cancel","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Whether to stop the error from reaching the\nbrowser.</p>\n"}]}},{"1":"opt_target","2":{"1":true,"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Object that fires onerror events.</p>\n"}]}}]},{"1":{"1":"deepExpose","2":{"1":"closure/goog/debug/debug.js","2":149,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L149"},"3":{"1":[{"2":"<p>Creates a string representing a given primitive or object, and for an\nobject, all its properties and nested objects.  WARNING: If an object is\ngiven, it and all its nested objects will be modified.  To detect reference\ncycles, this method identifies objects using goog.getUid() which mutates the\nobject.</p>\n"}]}},"4":[{"1":"obj","2":{"7":true},"3":{"1":[{"2":"<p>Object to expose.</p>\n"}]}},{"1":"opt_showFn","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Also show properties that are functions (by\ndefault, functions are omitted).</p>\n"}]}}],"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>A string representation of <code>obj</code>.</p>\n"}]}}},{"1":{"1":"enhanceError","2":{"1":"closure/goog/debug/debug.js","2":359,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L359"},"3":{"1":[{"2":"<p>Converts an object to an Error using the object&#39;s toString if it&#39;s not\nalready an Error, adds a stacktrace if there isn&#39;t one, and optionally adds\nan extra message.</p>\n"}]}},"4":[{"1":"err","2":{"7":true},"3":{"1":[{"2":"<p>The original thrown error, object, or string.</p>\n"}]}},{"1":"opt_message","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>optional additional message to add to the\nerror.</p>\n"}]}}],"5":{"2":{"4":{"1":"Error","4":true}},"3":{"1":[{"2":"<p>If err is an Error, it is enhanced and returned. Otherwise,\nit is converted to an Error which is enhanced and returned.</p>\n"}]}}},{"1":{"1":"expose","2":{"1":"closure/goog/debug/debug.js","2":112,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L112"},"3":{"1":[{"2":"<p>Creates a string representing an object and all its properties.</p>\n"}]}},"4":[{"1":"obj","2":{"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Object to expose.</p>\n"}]}},{"1":"opt_showFn","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Show the functions as well as the properties,\ndefault is false.</p>\n"}]}}],"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The string representation of <code>obj</code>.</p>\n"}]}}},{"1":{"1":"exposeArray","2":{"1":"closure/goog/debug/debug.js","2":205,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L205"},"3":{"1":[{"2":"<p>Recursively outputs a nested array as a string.</p>\n"}]}},"4":[{"1":"arr","2":{"6":{"1":[{"4":{"1":"Array","4":true,"5":[{"8":true}]}},{"10":true}]}},"3":{"1":[{"2":"<p>The array.</p>\n"}]}}],"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>String representing nested array.</p>\n"}]}}},{"1":{"1":"exposeException","2":{"1":"closure/goog/debug/debug.js","2":225,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L225"},"3":{"1":[{"2":"<p>Exposes an exception that has been caught by a try...catch and outputs the\nerror as HTML with a stack trace.</p>\n"}]}},"4":[{"1":"err","2":{"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>Error object or string.</p>\n"}]}},{"1":"opt_fn","2":{"1":true,"6":{"1":[{"4":{"1":"Function"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Optional function to start stack trace from.</p>\n"}]}}],"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>Details of exception, as HTML.</p>\n"}]}}},{"1":{"1":"exposeExceptionAsHtml","2":{"1":"closure/goog/debug/debug.js","2":238,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L238"},"3":{"1":[{"2":"<p>Exposes an exception that has been caught by a try...catch and outputs the\nerror with a stack trace.</p>\n"}]}},"4":[{"1":"err","2":{"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>Error object or string.</p>\n"}]}},{"1":"opt_fn","2":{"1":true,"6":{"1":[{"4":{"1":"Function"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Optional function to start stack trace from.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.html.SafeHtml","3":{"1":"goog.html.SafeHtml.html"}}},"3":{"1":[{"2":"<p>Details of exception.</p>\n"}]}}},{"1":{"1":"getFunctionName","2":{"1":"closure/goog/debug/debug.js","2":585,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L585"},"3":{"1":[{"2":"<p>Gets a function name</p>\n"}]}},"4":[{"1":"fn","2":{"6":{"1":[{"4":{"1":"Function"}},{"10":true}]}},"3":{"1":[{"2":"<p>Function to get name of.</p>\n"}]}}],"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>Function&#39;s name.</p>\n"}]}}},{"1":{"1":"getStacktrace","2":{"1":"closure/goog/debug/debug.js","2":475,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L475"},"3":{"1":[{"2":"<p>Gets the current stack trace, either starting from the caller or starting\nfrom a specified function that&#39;s currently on the call stack.</p>\n"}]}},"4":[{"1":"opt_fn","2":{"1":true,"6":{"1":[{"4":{"1":"Function"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Optional function to start getting the trace from.\nIf not provided, defaults to the function that called this.</p>\n"}]}}],"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>Stack trace.</p>\n"}]}}},{"1":{"1":"getStacktraceSimple","2":{"1":"closure/goog/debug/debug.js","2":394,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L394"},"3":{"1":[{"2":"<p>Gets the current stack trace. Simple and iterative - doesn&#39;t worry about\ncatching circular references or getting the args.</p>\n"}]}},"4":[{"1":"opt_depth","2":{"1":true,"6":{"1":[{"4":{"1":"number","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Optional maximum depth to trace back to.</p>\n"}]}}],"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>A string with the function names of all functions in the\nstack, separated by \\n.</p>\n"}]}}},{"1":{"1":"makeWhitespaceVisible","2":{"1":"closure/goog/debug/debug.js","2":620,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L620"},"3":{"1":[{"2":"<p>Makes whitespace visible by replacing it with printable characters.\nThis is useful in finding diffrences between the expected and the actual\noutput strings of a testcase.</p>\n"}]}},"4":[{"1":"string","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>whose whitespace needs to be made visible.</p>\n"}]}}],"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>string whose whitespace is made visible.</p>\n"}]}}},{"1":{"1":"normalizeErrorObject","2":{"1":"closure/goog/debug/debug.js","2":295,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L295"},"3":{"1":[{"2":"<p>Normalizes the error/exception object between browsers.</p>\n"}]}},"4":[{"1":"err","2":{"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>Raw error object.</p>\n"}]}}],"5":{"2":{"5":{"1":[{"1":"fileName","2":{"6":{"1":[{"8":true},{"9":true}]}}},{"1":"lineNumber","2":{"6":{"1":[{"8":true},{"9":true}]}}},{"1":"message","2":{"6":{"1":[{"8":true},{"9":true}]}}},{"1":"name","2":{"6":{"1":[{"8":true},{"9":true}]}}},{"1":"stack","2":{"6":{"1":[{"8":true},{"9":true}]}}}]}},"3":{"1":[{"2":"<p>Normalized error object.</p>\n"}]}}},{"1":{"1":"runtimeType","2":{"1":"closure/goog/debug/debug.js","2":638,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L638"},"3":{"1":[{"2":"<p>Returns the type of a value. If a constructor is passed, and a suitable\nstring cannot be found, &#39;unknown type name&#39; will be returned.</p>\n <p>Forked rather than moved from <a href=\"goog.asserts.html#getType_\"><code>goog.asserts.getType_</code></a>\n to avoid adding a dependency to goog.asserts.\n</p>"}]}},"4":[{"1":"value","2":{"7":true},"3":{"1":[{"2":"<p>A constructor, object, or primitive.</p>\n"}]}}],"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The best display name for the value, or &#39;unknown type name&#39;.</p>\n"}]}}},{"1":{"1":"setFunctionResolver","2":{"1":"closure/goog/debug/debug.js","2":575,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L575"},"3":{"1":[{"2":"<p>Set a custom function name resolver.</p>\n"}]}},"4":[{"1":"resolver","2":{"3":{"3":[{"6":{"1":[{"4":{"1":"Function"}},{"10":true}]}}],"4":{"4":{"1":"string","4":true}}}},"3":{"1":[{"2":"<p>Resolves functions to their\nnames.</p>\n"}]}}]}],"13":[{"1":{"1":"MAX_STACK_DEPTH","2":{"1":"closure/goog/debug/debug.js","2":438,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L438"},"3":{"1":[{"2":"<p>Max length of stack to try and output</p>\n"}]}},"2":{"4":{"1":"number","4":true}}},{"1":{"1":"Trace","2":{"1":"closure/goog/debug/tracer.js","2":724,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/tracer.js#L724"},"3":{"1":[{"2":"<p>Singleton trace object</p>\n"}]}},"2":{"6":{"1":[{"4":{"1":"goog.debug.Trace_","3":{"1":"goog.debug.Trace_.html"}}},{"10":true}]}}},{"1":{"1":"errorHandlerWeakDep","2":{"1":"closure/goog/debug/errorhandlerweakdep.js","2":29,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/errorhandlerweakdep.js#L29"},"3":{"1":[{"2":"<p>Dummy object to work around undefined properties compiler warning.</p>\n"}]}},"2":{"4":{"1":"Object","4":true,"5":[{"4":{"1":"string","4":true}},{"6":{"1":[{"4":{"1":"Function"}},{"10":true}]}}]}}}],"20":[{"1":{"1":"goog.debug.FORCE_SLOPPY_STACKS","2":{"1":"closure/goog/debug/debug.js","2":37,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L37"},"3":{"1":[{"2":"<p>Whether to force &#34;sloppy&#34; stack building.</p>\n"}]},"6":{"1":true}},"2":{"4":{"1":"boolean","4":true}}},{"1":{"1":"goog.debug.LOGGING_ENABLED","2":{"1":"closure/goog/debug/debug.js","2":33,"3":"https://github.com/google/closure-library/blob/master/closure/goog/debug/debug.js#L33"},"3":{"1":[{"2":"<p>Whether logging should be enabled.</p>\n"}]},"6":{"1":true}},"2":{"4":{"1":"boolean","4":true}}}],"21":{"1":{"1":"goog.debug","3":{"1":"goog.debug.html"}},"2":4},"23":"goog.debug.html","24":"goog.debug"}]}}