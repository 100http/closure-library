{"2":{"1":[{"1":"goog.messaging.DeferredChannel","5":{"1":"closure/goog/messaging/deferredchannel.js","2":39,"3":"https://github.com/google/closure-library/blob/master/closure/goog/messaging/deferredchannel.js#L39"},"7":{"1":[{"2":"<p>Creates a new DeferredChannel, which wraps a deferred MessageChannel and\nenqueues messages to be sent once the wrapped channel is resolved.</p>\n"}]},"8":{"4":true},"14":{"1":{"1":"DeferredChannel","2":{"1":"closure/goog/messaging/deferredchannel.js","2":39,"3":"https://github.com/google/closure-library/blob/master/closure/goog/messaging/deferredchannel.js#L39"},"3":{"1":[{"2":"<p>Creates a new DeferredChannel, which wraps a deferred MessageChannel and\nenqueues messages to be sent once the wrapped channel is resolved.</p>\n"}]}},"3":true,"4":[{"1":"deferredChannel","2":{"4":{"1":"goog.async.Deferred","3":{"1":"goog.async.Deferred.html"},"5":[{"4":{"1":"goog.messaging.MessageChannel","3":{"1":"goog.messaging.MessageChannel.html"}}}]}},"3":{"1":[{"2":"<p>The underlying deferred MessageChannel.</p>\n"}]}}]},"15":[{"1":{"1":"addOnDisposeCallback","2":{"1":"closure/goog/disposable/disposable.js","2":213,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L213"},"3":{"1":[{"2":"<p>Invokes a callback function when this object is disposed. Callbacks are\ninvoked in the order in which they were added. If a callback is added to\nan already disposed Disposable, it will be called immediately.</p>\n"}]},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#addOnDisposeCallback"}}},"2":["T"],"4":[{"1":"callback","2":{"3":{"2":{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}},"4":{"8":true}}},"3":{"1":[{"2":"<p>The callback function.</p>\n"}]}},{"1":"opt_scope","2":{"1":true,"6":{"1":[{"4":{"1":"T"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>An optional scope to call the callback in.</p>\n"}]}}]},{"1":{"1":"cancel","2":{"1":"closure/goog/messaging/deferredchannel.js","2":49,"3":"https://github.com/google/closure-library/blob/master/closure/goog/messaging/deferredchannel.js#L49"},"3":{"1":[{"2":"<p>Cancels the wrapped Deferred.</p>\n"}]}}},{"1":{"1":"connect","2":{"1":"closure/goog/messaging/deferredchannel.js","2":55,"3":"https://github.com/google/closure-library/blob/master/closure/goog/messaging/deferredchannel.js#L55"},"3":{"1":[{"2":"<p>Initiates the channel connection. When this method is called, all the\ninformation needed to connect the channel has to be available.</p>\n<p>Implementers should only require this method to be called if the channel\nneeds to be configured in some way between when it&#39;s created and when it\nbecomes active. Otherwise, the channel should be immediately active and this\nmethod should do nothing but immediately call opt_connectCb.</p>\n"}]},"9":[{"1":"goog.messaging.MessageChannel","3":{"1":"goog.messaging.MessageChannel.html#connect"}}]},"4":[{"1":"opt_connectCb","2":{"1":true,"6":{"1":[{"4":{"1":"Function"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Called when the channel has been connected\nand is ready to use.</p>\n"}]}}]},{"1":{"1":"dispose","2":{"1":"closure/goog/disposable/idisposable.js","2":39,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/idisposable.js#L39"},"3":{"1":[{"2":"<p>Disposes of the object and its resources.</p>\n"}]},"8":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#dispose"}}},"5":{"3":{"1":[{"2":"<p>Nothing.</p>\n"}]}}},{"1":{"1":"disposeInternal","2":{"1":"closure/goog/messaging/deferredchannel.js","2":95,"3":"https://github.com/google/closure-library/blob/master/closure/goog/messaging/deferredchannel.js#L95"},"3":{"1":[{"2":"<p>Deletes or nulls out any references to COM objects, DOM nodes, or other\ndisposable objects. Classes that extend <code>goog.Disposable</code> should\noverride this method.\nNot reentrant. To avoid calling it twice, it must only be called from the\nsubclass&#39; <code>disposeInternal</code> method. Everywhere else the public\n<code>dispose</code> method must be used.\nFor example:</p>\n <pre>\n   mypackage.MyClass &#61; function() {\n     mypackage.MyClass.base(this, &#39;constructor&#39;);\n     // Constructor logic specific to MyClass.\n     ...\n   };\n   goog.inherits(mypackage.MyClass, goog.Disposable);\n\n   mypackage.MyClass.prototype.disposeInternal &#61; function() {\n     // Dispose logic specific to MyClass.\n     ...\n     // Call superclass&#39;s disposeInternal at the end of the subclass&#39;s, like\n     // in C&#43;&#43;, to avoid hard-to-catch issues.\n     mypackage.MyClass.base(this, &#39;disposeInternal&#39;);\n   };\n </pre>\n"}]},"5":1,"8":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#disposeInternal"}}}},{"1":{"1":"getDisposed","2":{"1":"closure/goog/disposable/disposable.js","2":160,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L160"},"3":{},"4":{"1":[{"2":"<p>Use <a href=\"goog.messaging.DeferredChannel.html#isDisposed\"><code>#isDisposed</code></a> instead.</p>\n"}]},"6":{"2":true},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#getDisposed"}}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the object has been disposed of.</p>\n"}]}}},{"1":{"1":"isConnected","2":{"1":"closure/goog/messaging/deferredchannel.js","2":63,"3":"https://github.com/google/closure-library/blob/master/closure/goog/messaging/deferredchannel.js#L63"},"3":{"1":[{"2":"<p>Gets whether the channel is connected.</p>\n<p>If <a href=\"goog.messaging.DeferredChannel.html#connect\"><code>#connect</code></a> is not required for this class, this should always return\ntrue. Otherwise, this should return true by the time the callback passed to\n<a href=\"goog.messaging.DeferredChannel.html#connect\"><code>#connect</code></a> has been called and always after that.</p>\n"}]},"9":[{"1":"goog.messaging.MessageChannel","3":{"1":"goog.messaging.MessageChannel.html#isConnected"}}]},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the channel is connected.</p>\n"}]}}},{"1":{"1":"isDisposed","2":{"1":"closure/goog/disposable/idisposable.js","2":45,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/idisposable.js#L45"},"3":{},"8":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#isDisposed"}}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the object has been disposed of.</p>\n"}]}}},{"1":{"1":"registerDefaultService","2":{"1":"closure/goog/messaging/deferredchannel.js","2":78,"3":"https://github.com/google/closure-library/blob/master/closure/goog/messaging/deferredchannel.js#L78"},"3":{"1":[{"2":"<p>Registers a service to be called when a message is received that doesn&#39;t\nmatch any other services.</p>\n"}]},"9":[{"1":"goog.messaging.MessageChannel","3":{"1":"goog.messaging.MessageChannel.html#registerDefaultService"}}]},"4":[{"1":"callback","2":{"3":{"3":[{"4":{"1":"string","4":true}},{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"Object","4":true}}]}}],"4":{"8":true}}},"3":{"1":[{"2":"<p>The callback to process\nthe incoming messages. Passed the service name and the payload. Since\nsome channels can pass objects natively, the payload may be either an\nobject or a string.</p>\n"}]}}]},{"1":{"1":"registerDisposable","2":{"1":"closure/goog/disposable/disposable.js","2":200,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L200"},"3":{"1":[{"2":"<p>Associates a disposable object with this object so that they will be disposed\ntogether.</p>\n"}]},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#registerDisposable"}}},"4":[{"1":"disposable","2":{"6":{"1":[{"4":{"1":"goog.disposable.IDisposable","3":{"1":"goog.disposable.IDisposable.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>that will be disposed when\nthis object is disposed.</p>\n"}]}}]},{"1":{"1":"registerService","2":{"1":"closure/goog/messaging/deferredchannel.js","2":69,"3":"https://github.com/google/closure-library/blob/master/closure/goog/messaging/deferredchannel.js#L69"},"3":{"1":[{"2":"<p>Registers a service to be called when a message is received.</p>\n<p>Implementers shouldn&#39;t impose any restrictions on the service names that may\nbe registered. If some services are needed as control codes,\n<a href=\"goog.messaging.html\"><code>goog.messaging.MultiMessageChannel</code></a> can be used to safely split the\nchannel into &#34;public&#34; and &#34;control&#34; virtual channels.</p>\n"}]},"9":[{"1":"goog.messaging.MessageChannel","3":{"1":"goog.messaging.MessageChannel.html#registerService"}}]},"4":[{"1":"serviceName","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The name of the service.</p>\n"}]}},{"1":"callback","2":{"3":{"3":[{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"Object","4":true}}]}}],"4":{"8":true}}},"3":{"1":[{"2":"<p>The callback to process the\nincoming messages. Passed the payload. If opt_objectPayload is set, the\npayload is decoded and passed as an object.</p>\n"}]}},{"1":"opt_objectPayload","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>If true, incoming messages for this\nservice are expected to contain an object, and will be deserialized from\na string automatically if necessary. It&#39;s the responsibility of\nimplementors of this class to perform the deserialization.</p>\n"}]}}]},{"1":{"1":"send","2":{"1":"closure/goog/messaging/deferredchannel.js","2":87,"3":"https://github.com/google/closure-library/blob/master/closure/goog/messaging/deferredchannel.js#L87"},"3":{"1":[{"2":"<p>Sends a message over the channel.</p>\n"}]},"9":[{"1":"goog.messaging.MessageChannel","3":{"1":"goog.messaging.MessageChannel.html#send"}}]},"4":[{"1":"serviceName","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The name of the service this message should be\ndelivered to.</p>\n"}]}},{"1":"payload","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"Object","4":true}}]}},"3":{"1":[{"2":"<p>The value of the message. If this is an\nObject, it is serialized to a string before sending if necessary. It&#39;s\nthe responsibility of implementors of this class to perform the\nserialization.</p>\n"}]}}]}],"16":[{"1":{"1":"creationStack","2":{"1":"closure/goog/disposable/disposable.js","2":44,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L44"},"3":{"1":[{"2":"<p>If monitoring the goog.Disposable instances is enabled, stores the creation\nstack trace of the Disposable instance.</p>\n"}]},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#creationStack"}}},"2":{"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}}},{"1":{"1":"deferred_","2":{"1":"closure/goog/messaging/deferredchannel.js","2":41,"3":"https://github.com/google/closure-library/blob/master/closure/goog/messaging/deferredchannel.js#L41"},"3":{}},"2":{"4":{"1":"goog.async.Deferred","3":{"1":"goog.async.Deferred.html"},"5":[{"4":{"1":"goog.messaging.MessageChannel","3":{"1":"goog.messaging.MessageChannel.html"}}}]}}}],"18":[{"1":"goog.Disposable","3":{"1":"goog.Disposable.html"}}],"19":[{"1":"goog.disposable.IDisposable","3":{"1":"goog.disposable.IDisposable.html"}},{"1":"goog.messaging.MessageChannel","3":{"1":"goog.messaging.MessageChannel.html"}}],"21":{"1":{"1":"goog.messaging.DeferredChannel","3":{"1":"goog.messaging.DeferredChannel.html"}},"2":4},"23":"goog.messaging.DeferredChannel.html","24":"goog.messaging.DeferredChannel"}]}}