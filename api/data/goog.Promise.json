[null,[[["goog.Promise",null,null,null,[null,84,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L84"]],[[["Promise.CallbackEntry_",null,[[[null,"<p>Entries in the callback chain.</p>\n"]]],null,[null,null,"goog.Promise.CallbackEntry_.html"]],["Promise.CancellationError",null,[[[null,"<p>Error used as a rejection reason for canceled Promises.</p>\n"]]],null,[null,null,"goog.Promise.CancellationError.html"]],["Promise.Resolver_",null,[[[null,"<p>Internal implementation of the resolver interface.</p>\n"]]],null,[null,null,"goog.Promise.Resolver_.html"]]],[["Promise.State_",null,[[[null,"<p>The possible internal states for a Promise.</p>\n"]]],null,[null,null,"goog.Promise.State_.html"]]],[]],[[[null,"<p>NOTE: This class was created in anticipation of the built-in Promise type\nbeing standardized and implemented across browsers. Now that Promise is\navailable in modern browsers, and is automatically polyfilled by the Closure\nCompiler, by default, most new code should use native <code>Promise</code>\ninstead of <code>goog.Promise</code>. However, <code>goog.Promise</code> has the\nconcept of cancellation which native Promises do not yet have. So code\nneeding cancellation may still want to use <code>goog.Promise</code>.</p>\n<p>Promises provide a result that may be resolved asynchronously. A Promise may\nbe resolved by being fulfilled with a fulfillment value, rejected with a\nrejection reason, or blocked by another Promise. A Promise is said to be\nsettled if it is either fulfilled or rejected. Once settled, the Promise\nresult is immutable.</p>\n<p>Promises may represent results of any type, including undefined. Rejection\nreasons are typically Errors, but may also be of any type. Closure Promises\nallow for optional type annotations that enforce that fulfillment values are\nof the appropriate types at compile time.</p>\n<p>The result of a Promise is accessible by calling <code>then</code> and registering\n<code>onFulfilled</code> and <code>onRejected</code> callbacks. Once the Promise\nis settled, the relevant callbacks are invoked with the fulfillment value or\nrejection reason as argument. Callbacks are always invoked in the order they\nwere registered, even when additional <code>then</code> calls are made from inside\nanother callback. A callback is always run asynchronously sometime after the\nscope containing the registering <code>then</code> invocation has returned.</p>\n<p>If a Promise is resolved with another Promise, the first Promise will block\nuntil the second is settled, and then assumes the same result as the second\nPromise. This allows Promises to depend on the results of other Promises,\nlinking together multiple asynchronous operations.</p>\n<p>This implementation is compatible with the Promises/A&#43; specification and\npasses that specification&#39;s conformance test suite. A Closure Promise may be\nresolved with a Promise instance (or sufficiently compatible Promise-like\nobject) created by other Promise implementations. From the specification,\nPromise-like objects are known as &#34;Thenables&#34;.</p>\n"]]],[null,null,null,1,null,null,1],null,[],null,[[["Promise.all",[null,417,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L417"]],[[]],null,null,null,null,null,[],[]],["TYPE"],null,[["promises",[null,null,null,["Array",null,null,1,[[null,null,null,null,null,null,1]]]]]],[null,[null,null,null,["goog.Promise",null,[null,null,[null,null,"goog.Promise.html"]],null,[[null,null,null,["Array",null,null,1,[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]],[null,null,null,null,null,null,null,1]]]],[[[null,"<p>A Promise that receives a list of\nevery fulfilled value once every input Promise (or Promise-like) is\nsuccessfully fulfilled, or is rejected with the first rejection reason\nimmediately after it is rejected.</p>\n"]]]],[]],[["Promise.allSettled",[null,460,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L460"]],[[]],null,null,null,null,null,[],[]],["TYPE"],null,[["promises",[null,null,null,["Array",null,null,1,[[null,null,null,null,null,null,1]]]]]],[null,[null,null,null,["goog.Promise",null,[null,null,[null,null,"goog.Promise.html"]],null,[[null,null,null,["Array",null,null,1,[[null,null,null,null,[[["fulfilled",[null,null,null,["boolean",null,null,1,[]]]],["reason",[null,null,null,null,null,[[[null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,1]]]]],["value",[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]]]]]]]]],[null,null,null,null,null,null,null,1]]]],[[[null,"<p>A Promise that resolves with a list of\nresult objects once all input Promises (or Promise-like) have\nsettled. Each result object contains a &#39;fulfilled&#39; boolean indicating\nwhether an input Promise was fulfilled or rejected. For fulfilled\nPromises, the resulting value is stored in the &#39;value&#39; field. For\nrejected Promises, the rejection reason is stored in the &#39;reason&#39;\nfield.</p>\n"]]]],[]],[["Promise.firstFulfilled",[null,497,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L497"]],[[]],null,null,null,null,null,[],[]],["TYPE"],null,[["promises",[null,null,null,["Array",null,null,1,[[null,null,null,null,null,null,1]]]]]],[null,[null,null,null,["goog.Promise",null,[null,null,[null,null,"goog.Promise.html"]],null,[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[null,null,null,null,null,null,null,1]]]],[[[null,"<p>A Promise that receives the value of the first\ninput to be fulfilled, or is rejected with a list of every rejection\nreason if all inputs are rejected.</p>\n"]]]],[]],[["Promise.race",[null,395,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L395"]],[[]],null,null,null,null,null,[],[]],["TYPE"],null,[["promises",[null,null,null,["Array",null,null,1,[[null,null,null,null,null,null,1]]]]]],[null,[null,null,null,["goog.Promise",null,[null,null,[null,null,"goog.Promise.html"]],null,[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[null,null,null,null,null,null,null,1]]]],[[[null,"<p>A Promise that receives the result of the\nfirst Promise (or Promise-like) input to settle immediately after it\nsettles.</p>\n"]]]],[]],[["Promise.reject",[null,361,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L361"]],[[]],null,null,null,null,null,[],[]],[],null,[["opt_reason",[1,null,null,null,null,null,1]]],[null,[null,null,null,["goog.Promise",null,[null,null,[null,null,"goog.Promise.html"]],null,[]]],[[[null,"<p>A new Promise that is immediately rejected with the\ngiven reason.</p>\n"]]]],[]],[["Promise.resolve",[null,341,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L341"]],[[]],null,null,null,null,null,[],[]],["VALUE"],null,[["opt_value",[1,null,null,null,null,[[[null,null,null,["VALUE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]]]],[null,[null,null,null,["RESULT",null,null,null,[]]],[[[null,"<p>A new Promise that is immediately resolved\nwith the given value. If the input value is already a goog.Promise, it\nwill be returned immediately without creating a new instance.</p>\n"]]]],[]],[["Promise.setUnhandledRejectionHandler",[null,1299,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L1299"]],[[[null,"<p>Sets a handler that will be called with reasons from unhandled rejected\nPromises. If the rejected Promise (or one of its descendants) has an\n<code>onRejected</code> callback registered, the rejection will be considered\nhandled, and the rejection handler will not be called.</p>\n<p>By default, unhandled rejections are rethrown so that the error may be\ncaptured by the developer console or a <code>window.onerror</code> handler.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["handler",[null,null,[null,null,[[null,null,null,null,null,null,1]],[null,null,null,null,null,null,null,1]]],[[[null,"<p>A function that will be called with reasons from\nrejected Promises. Defaults to <code>goog.async.throwException</code>.</p>\n"]]]]],null,[]],[["Promise.withResolver",[null,531,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L531"]],[[]],null,null,null,null,null,[],[]],["TYPE"],null,[],[null,[null,null,null,["goog.promise.Resolver",null,[null,null,[null,null,"goog.promise.Resolver.html"]],null,[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]],[[[null,"<p>Resolver wrapping the promise and its\nresolve / reject functions. Resolving or rejecting the resolver\nresolves or rejects the promise.</p>\n"]]]],[]]],[],[["Promise",[null,84,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L84"]],[[[null,"<p>NOTE: This class was created in anticipation of the built-in Promise type\nbeing standardized and implemented across browsers. Now that Promise is\navailable in modern browsers, and is automatically polyfilled by the Closure\nCompiler, by default, most new code should use native <code>Promise</code>\ninstead of <code>goog.Promise</code>. However, <code>goog.Promise</code> has the\nconcept of cancellation which native Promises do not yet have. So code\nneeding cancellation may still want to use <code>goog.Promise</code>.</p>\n<p>Promises provide a result that may be resolved asynchronously. A Promise may\nbe resolved by being fulfilled with a fulfillment value, rejected with a\nrejection reason, or blocked by another Promise. A Promise is said to be\nsettled if it is either fulfilled or rejected. Once settled, the Promise\nresult is immutable.</p>\n<p>Promises may represent results of any type, including undefined. Rejection\nreasons are typically Errors, but may also be of any type. Closure Promises\nallow for optional type annotations that enforce that fulfillment values are\nof the appropriate types at compile time.</p>\n<p>The result of a Promise is accessible by calling <code>then</code> and registering\n<code>onFulfilled</code> and <code>onRejected</code> callbacks. Once the Promise\nis settled, the relevant callbacks are invoked with the fulfillment value or\nrejection reason as argument. Callbacks are always invoked in the order they\nwere registered, even when additional <code>then</code> calls are made from inside\nanother callback. A callback is always run asynchronously sometime after the\nscope containing the registering <code>then</code> invocation has returned.</p>\n<p>If a Promise is resolved with another Promise, the first Promise will block\nuntil the second is settled, and then assumes the same result as the second\nPromise. This allows Promises to depend on the results of other Promises,\nlinking together multiple asynchronous operations.</p>\n<p>This implementation is compatible with the Promises/A&#43; specification and\npasses that specification&#39;s conformance test suite. A Closure Promise may be\nresolved with a Promise instance (or sufficiently compatible Promise-like\nobject) created by other Promise implementations. From the specification,\nPromise-like objects are known as &#34;Thenables&#34;.</p>\n"]]],null,null,null,null,null,[],[[[[null,"<p><a href=\"http://promisesaplus.com/\">http://promisesaplus.com/</a></p>\n"]]]]],["TYPE","RESOLVER_CONTEXT"],1,[["resolver",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["RESOLVER_CONTEXT",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,[null,null,[[1,null,null,null,null,[[]]]],[null,null,null,null,null,null,null,1]]],[null,null,[null,null,[[1,null,null,null,null,null,1]],[null,null,null,null,null,null,null,1]]]],[null,null,null,null,null,null,null,null,1]]],[[[null,"<p>Initialization function that is invoked immediately with <code>resolve</code>\nand <code>reject</code> functions as arguments. The Promise is resolved or\nrejected with the first argument passed to either function.</p>\n"]]]],["opt_context",[1,null,null,null,null,[[[null,null,null,["RESOLVER_CONTEXT",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>An optional context for executing the\nresolver function. If unspecified, the resolver function will be executed\nin the default scope.</p>\n"]]]]],null,[]],[[["cancel",[null,698,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L698"]],[[[null,"<p>Cancels the Promise if it is still pending by rejecting it with a cancel\nError. No action is performed if the Promise is already resolved.</p>\n<p>All child Promises of the canceled Promise will be rejected with the same\ncancel error, as with normal Promise rejection. If the Promise to be canceled\nis the only child of a pending Promise, the parent Promise will also be\ncanceled. Cancellation may propagate upward through multiple generations.</p>\n"]]],null,null,null,null,["goog.Promise",null,[null,null,[null,null,"goog.Promise.html#cancel"]],null,[]],[],[]],[],null,[["opt_message",[1,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>An optional debugging message for describing the\ncancellation reason.</p>\n"]]]]],null,[]],[["then",[null,556,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L556"]],[[[null,"<p>Adds callbacks that will operate on the result of the Promise, returning a\nnew child Promise.</p>\n<p>If the Promise is fulfilled, the <code>onFulfilled</code> callback will be invoked\nwith the fulfillment value as argument, and the child Promise will be\nfulfilled with the return value of the callback. If the callback throws an\nexception, the child Promise will be rejected with the thrown value instead.</p>\n<p>If the Promise is rejected, the <code>onRejected</code> callback will be invoked\nwith the rejection reason as argument, and the child Promise will be resolved\nwith the return value or rejected with the thrown value of the callback.</p>\n"]]],null,null,null,null,["goog.Promise",null,[null,null,[null,null,"goog.Promise.html#then"]],null,[]],[["goog.Thenable",null,[null,null,[null,null,"goog.Thenable.html#then"]],null,[]],["IThenable",null,null,1,[]],["IThenable",null,null,1,[]]],[]],[],null,[["opt_onFulfilled",[1,null,null,null,null,[[[null,null,[null,[null,null,null,null,null,[[[null,null,null,["THIS",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[null,null,null,null,null,[[[null,null,null,["VALUE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>A\nfunction that will be invoked with the fulfillment value if the Promise\nis fulfilled.</p>\n"]]]],["opt_onRejected",[1,null,null,null,null,[[[null,null,[null,[null,null,null,null,null,[[[null,null,null,["THIS",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,null,1]],[null,null,null,null,null,null,1]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>A function that will\nbe invoked with the rejection reason if the Promise is rejected.</p>\n"]]]],["opt_context",[1,null,null,null,null,[[[null,null,null,["THIS",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>An optional context object that will be the\nexecution context for the callbacks. By default, functions are executed\nwith the default this.</p>\n"]]]]],[null,[null,null,null,["RESULT",null,null,null,[]]],[[[null,"<p>A new Promise that will receive the result\nof the fulfillment or rejection callback.</p>\n"]]]],[]],[["thenAlways",[null,652,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L652"]],[[[null,"<p>Adds a callback that will be invoked when the Promise is settled (fulfilled\nor rejected). The callback receives no argument, and no new child Promise is\ncreated. This is useful for ensuring that cleanup takes place after certain\nasynchronous operations. Callbacks added with <code>thenAlways</code> will be\nexecuted in the same order with other calls to <code>then</code>,\n<code>thenAlways</code>, or <code>thenCatch</code>.</p>\n<p>Since it does not produce a new child Promise, cancellation propagation is\nnot prevented by adding callbacks with <code>thenAlways</code>. A Promise that has\na cleanup handler added with <code>thenAlways</code> will be canceled if all of\nits children created by <code>then</code> (or <code>thenCatch</code>) are canceled.\nAdditionally, since any rejections are not passed to the callback, it does\nnot stop the unhandled rejection handler from running.</p>\n"]]],null,null,null,null,["goog.Promise",null,[null,null,[null,null,"goog.Promise.html#thenAlways"]],null,[]],[],[]],["THIS"],null,[["onSettled",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["THIS",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[],[null,null,null,null,null,null,null,null,1]]],[[[null,"<p>A function that will be invoked\nwhen the Promise is settled (fulfilled or rejected).</p>\n"]]]],["opt_context",[1,null,null,null,null,[[[null,null,null,["THIS",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>An optional context object that will be the\nexecution context for the callbacks. By default, functions are executed\nin the global scope.</p>\n"]]]]],[null,[null,null,null,["goog.Promise",null,[null,null,[null,null,"goog.Promise.html"]],null,[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[null,null,null,null,null,null,null,1]]]],[[[null,"<p>This Promise, for chaining additional calls.</p>\n"]]]],[]],[["thenCatch",[null,678,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L678"]],[[[null,"<p>Adds a callback that will be invoked only if the Promise is rejected. This\nis equivalent to <code>then(null, onRejected)</code>.</p>\n"]]],null,null,null,null,["goog.Promise",null,[null,null,[null,null,"goog.Promise.html#thenCatch"]],null,[]],[],[]],["THIS"],null,[["onRejected",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["THIS",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,null,1]],[null,null,null,null,null,null,1]]],[[[null,"<p>A function that will be\ninvoked with the rejection reason if this Promise is rejected.</p>\n"]]]],["opt_context",[1,null,null,null,null,[[[null,null,null,["THIS",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>An optional context object that will be the\nexecution context for the callbacks. By default, functions are executed\nin the global scope.</p>\n"]]]]],[null,[null,null,null,["goog.Promise",null,[null,null,[null,null,"goog.Promise.html"]],null,[]]],[[[null,"<p>A new Promise that will resolve either to the\nvalue of this promise, or if this promise is rejected, the result of\n<code>onRejected</code>. The returned Promise will reject if <code>onRejected</code> throws.</p>\n"]]]],[]],[["thenVoid",[null,602,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L602"]],[[[null,"<p>Adds callbacks that will operate on the result of the Promise without\nreturning a child Promise (unlike &#34;then&#34;).</p>\n<p>If the Promise is fulfilled, the <code>onFulfilled</code> callback will be invoked\nwith the fulfillment value as argument.</p>\n<p>If the Promise is rejected, the <code>onRejected</code> callback will be invoked\nwith the rejection reason as argument.</p>\n"]]],null,null,null,null,["goog.Promise",null,[null,null,[null,null,"goog.Promise.html#thenVoid"]],null,[]],[],[],[null,null,null,1]],["THIS"],null,[["opt_onFulfilled",[1,null,null,null,null,[[[null,null,[null,[null,null,null,null,null,[[[null,null,null,["THIS",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["TYPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[null,null,null,null,null,null,null,1]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>A\nfunction that will be invoked with the fulfillment value if the Promise\nis fulfilled.</p>\n"]]]],["opt_onRejected",[1,null,null,null,null,[[[null,null,[null,[null,null,null,null,null,[[[null,null,null,["THIS",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,null,1]],[null,null,null,null,null,null,1]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>A function that will\nbe invoked with the rejection reason if the Promise is rejected.</p>\n"]]]],["opt_context",[1,null,null,null,null,[[[null,null,null,["THIS",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>An optional context object that will be the\nexecution context for the callbacks. By default, functions are executed\nwith the default this.</p>\n"]]]]],null,[]]],[],null,[],[["IThenable",null,null,1,[[null,null,null,["TYPE",null,null,null,[]]]]],["goog.Thenable",null,[null,null,[null,null,"goog.Thenable.html"]],null,[[null,null,null,["TYPE",null,null,null,[]]]]]],[[["goog.Promise.DEFAULT_MAX_UNUSED",[null,287,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L287"]],[[[null,"<p>The number of currently unused objects to keep around for\nreuse.</p>\n"]]],null,null,[1],null,null,[],[]],[null,null,null,["number",null,null,1,[]]]],[["goog.Promise.LONG_STACK_TRACES",[null,206,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L206"]],[[[null,"<p>Whether traces of <code>then</code> calls should be included in\nexceptions thrown</p>\n"]]],null,null,[1],null,null,[],[]],[null,null,null,["boolean",null,null,1,[]]]],[["goog.Promise.UNHANDLED_REJECTION_DELAY",[null,218,null,[null,null,"closure/goog/promise/promise.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/promise/promise.js#L218"]],[[[null,"<p>The delay in milliseconds before a rejected Promise&#39;s reason\nis passed to the rejection handler. By default, the rejection handler\nrethrows the rejection reason so that it appears in the developer console or\n<code>window.onerror</code> handler.</p>\n<p>Rejections are rethrown as quickly as possible by default. A negative value\ndisables rejection handling entirely.</p>\n"]]],null,null,[1],null,null,[],[]],[null,null,null,["number",null,null,1,[]]]]],[["goog.Promise",null,[null,null,[null,null,"goog.Promise.html"]],null,[]],null,null,1],null,"goog.Promise.html","goog.Promise",[],[],[],[]]]]]