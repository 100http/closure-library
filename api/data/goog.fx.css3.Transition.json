[null,[[["goog.fx.css3.Transition",null,null,null,[null,74,null,[null,null,"closure/goog/fx/css3/transition.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/css3/transition.js#L74"]],null,[[[null,"<p>A class to handle targeted CSS3 transition. This class\nhandles common features required for targeted CSS3 transition.</p>\n<p>Browser that does not support CSS3 transition will still receive all\nthe events fired by the transition object, but will not have any transition\nplayed. If the browser supports the final state as set in setFinalState\nmethod, the element will ends in the final state.</p>\n<p>Transitioning multiple properties with the same setting is possible\nby setting Css3Property&#39;s property to &#39;all&#39;. Performing multiple\ntransitions can be done via setting multiple initialStyle,\nfinalStyle and transitions. Css3Property&#39;s delay can be used to\ndelay one of the transition. Here is an example for a transition\nthat expands on the width and then followed by the height:</p>\n <pre>\n   var animation &#61; new goog.fx.css3.Transition(\n     element,\n     duration,\n     {width: 10px, height: 10px},\n     {width: 100px, height: 100px},\n     [\n       {property: width, duration: 1, timing: &#39;ease-in&#39;, delay: 0},\n       {property: height, duration: 1, timing: &#39;ease-in&#39;, delay: 1}\n     ]\n   );\n </pre>\n"]]],[null,null,null,null,null,null,1],null,[],null,[],[],[["Transition",[null,74,null,[null,null,"closure/goog/fx/css3/transition.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/css3/transition.js#L74"]],[[[null,"<p>A class to handle targeted CSS3 transition. This class\nhandles common features required for targeted CSS3 transition.</p>\n<p>Browser that does not support CSS3 transition will still receive all\nthe events fired by the transition object, but will not have any transition\nplayed. If the browser supports the final state as set in setFinalState\nmethod, the element will ends in the final state.</p>\n<p>Transitioning multiple properties with the same setting is possible\nby setting Css3Property&#39;s property to &#39;all&#39;. Performing multiple\ntransitions can be done via setting multiple initialStyle,\nfinalStyle and transitions. Css3Property&#39;s delay can be used to\ndelay one of the transition. Here is an example for a transition\nthat expands on the width and then followed by the height:</p>\n <pre>\n   var animation &#61; new goog.fx.css3.Transition(\n     element,\n     duration,\n     {width: 10px, height: 10px},\n     {width: 100px, height: 100px},\n     [\n       {property: width, duration: 1, timing: &#39;ease-in&#39;, delay: 0},\n       {property: height, duration: 1, timing: &#39;ease-in&#39;, delay: 1}\n     ]\n   );\n </pre>\n"]]],null,null,null,null,null,[],[]],[],1,[["element",[null,null,null,null,null,[[[null,null,null,["Element",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The element to be transitioned.</p>\n"]]]],["duration",[null,null,null,["number",null,null,1,[]]],[[[null,"<p>The duration of the transition in seconds.\nThis should be the longest of all transitions, including any delay.</p>\n"]]]],["initialStyle",[null,null,null,null,null,[[[null,null,null,["Object",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Initial style properties of the element before\nanimating. Set using <code>goog.style.setStyle</code>.</p>\n"]]]],["finalStyle",[null,null,null,null,null,[[[null,null,null,["Object",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Final style properties of the element after\nanimating. Set using <code>goog.style.setStyle</code>.</p>\n"]]]],["transitions",[null,null,null,null,null,[[[null,null,null,null,[[["delay",[null,null,null,["number",null,null,1,[]]]],["duration",[null,null,null,["number",null,null,1,[]]]],["property",[null,null,null,["string",null,null,1,[]]]],["timing",[null,null,null,["string",null,null,1,[]]]]]]],[null,null,null,["string",null,null,1,[]]],[null,null,null,["Array",null,null,1,[[null,null,null,null,null,[[[null,null,null,null,[[["delay",[null,null,null,["number",null,null,1,[]]]],["duration",[null,null,null,["number",null,null,1,[]]]],["property",[null,null,null,["string",null,null,1,[]]]],["timing",[null,null,null,["string",null,null,1,[]]]]]]],[null,null,null,["string",null,null,1,[]]]]]]]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>A single CSS3\ntransition property or an array of it.</p>\n"]]]]],null,[]],[[["addEventListener",[null,150,null,[null,null,"closure/goog/events/eventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/eventtarget.js#L150"]],[[[null,"<p>Adds an event listener to the event target. The same handler can only be\nadded once per the type. Even if you add the same handler multiple times\nusing the same type then it will only be called once when the event is\ndispatched.</p>\n"]]],[[[null,"<p>Use <code>#listen</code> instead, when possible. Otherwise, use\n<code>goog.events.listen</code> if you are passing Object\n(instead of Function) as handler.</p>\n"]]],null,[null,1],["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#addEventListener"]],null,[]],null,[],[]],[],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[]]]]]],[[[null,"<p>The type of the event to listen for</p>\n"]]]],["handler",[null,null,null,null,null,[[[null,null,[null,null,[[null,null,null,null,null,null,null,1]],[null,null,null,null,null,null,null,1]]],[null,null,null,null,[[["handleEvent",[null,null,[null,null,[[null,null,null,null,null,null,null,1]],[null,null,null,null,null,null,null,1]]]]]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The function\nto handle the event. The handler can also be an object that implements\nthe handleEvent method which takes the event object as argument.</p>\n"]]]],["opt_capture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>In DOM-compliant browsers, this determines\nwhether the listener is fired during the capture or bubble phase\nof the event.</p>\n"]]]],["opt_handlerScope",[1,null,null,null,null,[[[null,null,null,["Object",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call\nthe listener.</p>\n"]]]]],null,[]],[["addOnDisposeCallback",[null,221,null,[null,null,"closure/goog/disposable/disposable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L221"]],[[[null,"<p>Invokes a callback function when this object is disposed. Callbacks are\ninvoked in the order in which they were added. If a callback is added to\nan already disposed Disposable, it will be called immediately.</p>\n"]]],null,null,null,["goog.Disposable",null,[null,null,[null,null,"goog.Disposable.html#addOnDisposeCallback"]],null,[]],null,[],[]],["T"],null,[["callback",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["T",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[],[null,null,null,null,null,null,null,1]]],[[[null,"<p>The callback function.</p>\n"]]]],["opt_scope",[1,null,null,null,null,[[[null,null,null,["T",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>An optional scope to call the callback in.</p>\n"]]]]],null,[]],[["dispatchAnimationEvent",[null,235,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L235"]],[[[null,"<p>Dispatches an event object for the current animation.</p>\n"]]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#dispatchAnimationEvent"]],null,[]],null,[],[],[null,1]],[],null,[["type",[null,null,null,["string",null,null,1,[]]],[[[null,"<p>Event type that will be dispatched.</p>\n"]]]]],null,[]],[["dispatchEvent",[null,180,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L180"]],[[[null,"<p>Dispatches an event (or event like object) and calls all listeners\nlistening for events of this type. The type of the event is decided by the\ntype property on the event object.</p>\n<p>If any of the listeners returns false OR calls preventDefault then this\nfunction will return false.  If one of the capture listeners calls\nstopPropagation, then the bubble listeners won&#39;t fire.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#dispatchEvent"]],null,[]],[],[]],[],null,[["e",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["Object",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Event object.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>If anyone called preventDefault on the event object (or\nif any of the listeners returns false) this will also return false.</p>\n"]]]],[]],[["dispose",[null,39,null,[null,null,"closure/goog/disposable/idisposable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/disposable/idisposable.js#L39"]],[[[null,"<p>Disposes of the object and its resources.</p>\n"]]],null,null,null,null,["goog.Disposable",null,[null,null,[null,null,"goog.Disposable.html#dispose"]],null,[]],[],[]],[],null,[],[null,null,[[[null,"<p>Nothing.</p>\n"]]]],[]],[["disposeInternal",[null,192,null,[null,null,"closure/goog/fx/css3/transition.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/css3/transition.js#L192"]],[[[null,"<p>Removes listeners from this object.  Classes that extend EventTarget may\nneed to override this method in order to remove references to DOM Elements\nand additional listeners.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#disposeInternal"]],null,[]],[],[],[null,1]],[],null,[],null,[]],[["fireListeners",[null,225,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L225"]],[[[null,"<p>Fires all registered listeners in this listenable for the given\ntype and capture mode, passing them the given eventObject. This\ndoes not perform actual capture/bubble. Only implementors of the\ninterface should be using this.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#fireListeners"]],null,[]],[],[]],["EVENTOBJ"],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The type of the\nlisteners to fire.</p>\n"]]]],["capture",[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>The capture mode of the listeners to fire.</p>\n"]]]],["eventObject",[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The event object to fire.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether all listeners succeeded without\nattempting to prevent default behavior. If any listener returns\nfalse or called goog.events.Event#preventDefault, this returns\nfalse.</p>\n"]]]],[]],[["getDisposed",[null,160,null,[null,null,"closure/goog/disposable/disposable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L160"]],[[]],[[[null,"<p>Use <a href=\"goog.fx.css3.Transition.html#isDisposed\"><code>#isDisposed</code></a> instead.</p>\n"]]],null,[null,1],["goog.Disposable",null,[null,null,[null,null,"goog.Disposable.html#getDisposed"]],null,[]],null,[],[]],[],null,[],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether the object has been disposed of.</p>\n"]]]],[]],[["getListener",[null,255,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L255"]],[[[null,"<p>Gets the goog.events.ListenableKey for the event or null if no such\nlistener is in use.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#getListener"]],null,[]],[],[]],["SCOPE","EVENTOBJ"],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The name of the event\nwithout the &#39;on&#39; prefix.</p>\n"]]]],["listener",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[null,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>The\nlistener function to get.</p>\n"]]]],["capture",[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether the listener is a capturing listener.</p>\n"]]]],["opt_listenerScope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call the\nlistener.</p>\n"]]]]],[null,[null,null,null,null,null,[[[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>the found listener or null if not found.</p>\n"]]]],[]],[["getListeners",[null,238,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L238"]],[[[null,"<p>Gets all listeners in this listenable for the given type and\ncapture mode.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#getListeners"]],null,[]],[],[]],["EVENTOBJ"],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[]]]]]],[[[null,"<p>The type of the listeners to fire.</p>\n"]]]],["capture",[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>The capture mode of the listeners to fire.</p>\n"]]]]],[null,[null,null,null,["Array",null,null,1,[[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]]]]],[[[null,"<p>An array of registered\nlisteners.</p>\n"]]]],[]],[["getParentEventTarget",[null,206,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L206"]],[[[null,"<p>Returns the parent of this event target to use for capture/bubble\nmechanism.</p>\n<p>NOTE(chrishenry): The name reflects the original implementation of\ncustom event target (<code>goog.events.EventTarget</code>). We decided\nthat changing the name is not worth it.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#getParentEventTarget"]],null,[]],[],[]],[],null,[],[null,[null,null,null,null,null,[[[null,null,null,["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The parent EventTarget or null if\nthere is no parent.</p>\n"]]]],[]],[["getStateInternal",[null,104,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L104"]],[[[null,"<p>Returns the current state of the animation.</p>\n"]]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#getStateInternal"]],null,[]],null,[],[]],[],null,[],[null,[null,null,null,["goog.fx.Animation.State",null,[null,null,[null,null,"goog.fx.Animation.State.html"]],null,[]]],[[[null,"<p>State of the animation.</p>\n"]]]],[]],[["hasListener",[null,270,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L270"]],[[[null,"<p>Whether there is any active listeners matching the specified\nsignature. If either the type or capture parameters are\nunspecified, the function will match on the remaining criteria.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#hasListener"]],null,[]],[],[]],["EVENTOBJ"],null,[["opt_type",[1,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Event type.</p>\n"]]]],["opt_capture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Whether to check for capture or bubble\nlisteners.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether there is any active listeners matching\nthe requested type and/or capture phase.</p>\n"]]]],[]],[["isDisposed",[null,45,null,[null,null,"closure/goog/disposable/idisposable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/disposable/idisposable.js#L45"]],[[]],null,null,null,null,["goog.Disposable",null,[null,null,[null,null,"goog.Disposable.html#isDisposed"]],null,[]],[],[]],[],null,[],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether the object has been disposed of.</p>\n"]]]],[]],[["isPaused",[null,147,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L147"]],[[]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#isPaused"]],null,[]],null,[],[]],[],null,[],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>True iff the current state of the animation is paused.</p>\n"]]]],[]],[["isPlaying",[null,139,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L139"]],[[]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#isPlaying"]],null,[]],null,[],[]],[],null,[],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>True iff the current state of the animation is playing.</p>\n"]]]],[]],[["isStopped",[null,155,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L155"]],[[]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#isStopped"]],null,[]],null,[],[]],[],null,[],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>True iff the current state of the animation is stopped.</p>\n"]]]],[]],[["listen",[null,113,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L113"]],[[[null,"<p>Adds an event listener. A listener can only be added once to an\nobject and if it is added again the key for the listener is\nreturned. Note that if the existing listener is a one-off listener\n(registered via listenOnce), it will no longer be a one-off\nlistener after a call to listen().</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#listen"]],null,[]],[],[]],["SCOPE","EVENTOBJ"],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The event type id.</p>\n"]]]],["listener",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[null,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>Callback\nmethod.</p>\n"]]]],["opt_useCapture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Whether to fire in capture phase\n(defaults to false).</p>\n"]]]],["opt_listenerScope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call the\nlistener.</p>\n"]]]]],[null,[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]],[[[null,"<p>Unique key for the listener.</p>\n"]]]],[]],[["listenOnce",[null,137,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L137"]],[[[null,"<p>Adds an event listener that is removed automatically after the\nlistener fired once.</p>\n<p>If an existing listener already exists, listenOnce will do\nnothing. In particular, if the listener was previously registered\nvia listen(), listenOnce() will not turn the listener into a\none-off listener. Similarly, if there is already an existing\none-off listener, listenOnce does not modify the listeners (it is\nstill a once listener).</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#listenOnce"]],null,[]],[],[]],["SCOPE","EVENTOBJ"],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The event type id.</p>\n"]]]],["listener",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[null,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>Callback\nmethod.</p>\n"]]]],["opt_useCapture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Whether to fire in capture phase\n(defaults to false).</p>\n"]]]],["opt_listenerScope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call the\nlistener.</p>\n"]]]]],[null,[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]],[[[null,"<p>Unique key for the listener.</p>\n"]]]],[]],[["onBegin",[null,165,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L165"]],[[[null,"<p>Dispatches the BEGIN event. Sub classes should override this instead\nof listening to the event, and call this instead of dispatching the event.</p>\n"]]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#onBegin"]],null,[]],null,[],[],[null,1]],[],null,[],null,[]],[["onEnd",[null,175,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L175"]],[[[null,"<p>Dispatches the END event. Sub classes should override this instead\nof listening to the event, and call this instead of dispatching the event.</p>\n"]]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#onEnd"]],null,[]],null,[],[],[null,1]],[],null,[],null,[]],[["onFinish",[null,185,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L185"]],[[[null,"<p>Dispatches the FINISH event. Sub classes should override this instead\nof listening to the event, and call this instead of dispatching the event.</p>\n"]]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#onFinish"]],null,[]],null,[],[],[null,1]],[],null,[],null,[]],[["onPause",[null,195,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L195"]],[[[null,"<p>Dispatches the PAUSE event. Sub classes should override this instead\nof listening to the event, and call this instead of dispatching the event.</p>\n"]]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#onPause"]],null,[]],null,[],[],[null,1]],[],null,[],null,[]],[["onPlay",[null,205,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L205"]],[[[null,"<p>Dispatches the PLAY event. Sub classes should override this instead\nof listening to the event, and call this instead of dispatching the event.</p>\n"]]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#onPlay"]],null,[]],null,[],[],[null,1]],[],null,[],null,[]],[["onResume",[null,215,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L215"]],[[[null,"<p>Dispatches the RESUME event. Sub classes should override this instead\nof listening to the event, and call this instead of dispatching the event.</p>\n"]]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#onResume"]],null,[]],null,[],[],[null,1]],[],null,[],null,[]],[["onStop",[null,225,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L225"]],[[[null,"<p>Dispatches the STOP event. Sub classes should override this instead\nof listening to the event, and call this instead of dispatching the event.</p>\n"]]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#onStop"]],null,[]],null,[],[],[null,1]],[],null,[],null,[]],[["pause",[null,202,null,[null,null,"closure/goog/fx/css3/transition.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/css3/transition.js#L202"]],[[[null,"<p>Pausing CSS3 Transitions in not supported.</p>\n"]]],null,null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#pause"]],null,[]],[],[]],[],null,[],null,[]],[["play",[null,118,null,[null,null,"closure/goog/fx/css3/transition.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/css3/transition.js#L118"]],[[[null,"<p>Plays the animation.</p>\n"]]],null,null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#play"]],null,[]],[["goog.fx.Transition",null,[null,null,[null,null,"goog.fx.Transition.html#play"]],null,[]]],[]],[],null,[["opt_restart",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Optional parameter to restart the animation.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>True iff the animation was started.</p>\n"]]]],[]],[["registerDisposable",[null,208,null,[null,null,"closure/goog/disposable/disposable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L208"]],[[[null,"<p>Associates a disposable object with this object so that they will be disposed\ntogether.</p>\n"]]],null,null,null,["goog.Disposable",null,[null,null,[null,null,"goog.Disposable.html#registerDisposable"]],null,[]],null,[],[]],[],null,[["disposable",[null,null,null,null,null,[[[null,null,null,["goog.disposable.IDisposable",null,[null,null,[null,null,"goog.disposable.IDisposable.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>that will be disposed when\nthis object is disposed.</p>\n"]]]]],null,[]],[["removeAllListeners",[null,192,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L192"]],[[[null,"<p>Removes all listeners from this listenable. If type is specified,\nit will only remove listeners of the particular type. otherwise all\nregistered listeners will be removed.</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#removeAllListeners"]],null,[]],[],[]],[],null,[["opt_type",[1,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Type of event to remove, default is to\nremove all types.</p>\n"]]]]],[null,[null,null,null,["number",null,null,1,[]]],[[[null,"<p>Number of listeners removed.</p>\n"]]]],[]],[["removeEventListener",[null,174,null,[null,null,"closure/goog/events/eventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/eventtarget.js#L174"]],[[[null,"<p>Removes an event listener from the event target. The handler must be the\nsame object as the one added. If the handler has not been added then\nnothing is done.</p>\n"]]],[[[null,"<p>Use <code>#unlisten</code> instead, when possible. Otherwise, use\n<code>goog.events.unlisten</code> if you are passing Object\n(instead of Function) as handler.</p>\n"]]],null,[null,1],["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#removeEventListener"]],null,[]],null,[],[]],[],null,[["type",[null,null,null,["string",null,null,1,[]]],[[[null,"<p>The type of the event to listen for.</p>\n"]]]],["handler",[null,null,null,null,null,[[[null,null,[null,null,[[null,null,null,null,null,null,null,1]],[null,null,null,null,null,null,null,1]]],[null,null,null,null,[[["handleEvent",[null,null,[null,null,[[null,null,null,null,null,null,null,1]],[null,null,null,null,null,null,null,1]]]]]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The function\nto handle the event. The handler can also be an object that implements\nthe handleEvent method which takes the event object as argument.</p>\n"]]]],["opt_capture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>In DOM-compliant browsers, this determines\nwhether the listener is fired during the capture or bubble phase\nof the event.</p>\n"]]]],["opt_handlerScope",[1,null,null,null,null,[[[null,null,null,["Object",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call\nthe listener.</p>\n"]]]]],null,[]],[["setParentEventTarget",[null,126,null,[null,null,"closure/goog/events/eventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/eventtarget.js#L126"]],[[[null,"<p>Sets the parent of this event target to use for capture/bubble\nmechanism.</p>\n"]]],null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#setParentEventTarget"]],null,[]],null,[],[]],[],null,[["parent",[null,null,null,null,null,[[[null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Parent listenable (null if none).</p>\n"]]]]],null,[]],[["setStatePaused",[null,122,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L122"]],[[[null,"<p>Sets the current state of the animation to paused.</p>\n"]]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#setStatePaused"]],null,[]],null,[],[],[null,1]],[],null,[],null,[]],[["setStatePlaying",[null,113,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L113"]],[[[null,"<p>Sets the current state of the animation to playing.</p>\n"]]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#setStatePlaying"]],null,[]],null,[],[],[null,1]],[],null,[],null,[]],[["setStateStopped",[null,131,null,[null,null,"closure/goog/fx/transitionbase.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/transitionbase.js#L131"]],[[[null,"<p>Sets the current state of the animation to stopped.</p>\n"]]],null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#setStateStopped"]],null,[]],null,[],[],[null,1]],[],null,[],null,[]],[["setTargetForTesting",[null,321,null,[null,null,"closure/goog/events/eventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/eventtarget.js#L321"]],[[[null,"<p>Sets the target to be used for <code>event.target</code> when firing\nevent. Mainly used for testing. For example, see\n<code>goog.testing.events.mixinListenable</code>.</p>\n"]]],null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#setTargetForTesting"]],null,[]],null,[],[]],[],null,[["target",[null,null,null,["Object",null,null,1,[]]],[[[null,"<p>The target.</p>\n"]]]]],null,[]],[["stop",[null,158,null,[null,null,"closure/goog/fx/css3/transition.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/css3/transition.js#L158"]],[[[null,"<p>Stops the animation.</p>\n"]]],null,null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#stop"]],null,[]],[["goog.fx.Transition",null,[null,null,[null,null,"goog.fx.Transition.html#stop"]],null,[]]],[]],[],null,[["opt_gotoEnd",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Optional boolean parameter to go the the end of\nthe animation.</p>\n"]]]]],null,[]],[["unlisten",[null,153,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L153"]],[[[null,"<p>Removes an event listener which was added with listen() or listenOnce().</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#unlisten"]],null,[]],[],[]],["SCOPE","EVENTOBJ"],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The event type id.</p>\n"]]]],["listener",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[null,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>Callback\nmethod.</p>\n"]]]],["opt_useCapture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Whether to fire in capture phase\n(defaults to false).</p>\n"]]]],["opt_listenerScope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call\nthe listener.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether any listener was removed.</p>\n"]]]],[]],[["unlistenByKey",[null,164,null,[null,null,"closure/goog/events/listenable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L164"]],[[[null,"<p>Removes an event listener which was added with listen() by the key\nreturned by listen().</p>\n"]]],null,null,null,null,["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html#unlistenByKey"]],null,[]],[],[]],[],null,[["key",[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]],[[[null,"<p>The key returned by\nlisten() or listenOnce().</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether any listener was removed.</p>\n"]]]],[]]],[[["creationStack",[null,44,null,[null,null,"closure/goog/disposable/disposable.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L44"]],[[[null,"<p>If monitoring the goog.Disposable instances is enabled, stores the creation\nstack trace of the Disposable instance.</p>\n"]]],null,null,null,["goog.Disposable",null,[null,null,[null,null,"goog.Disposable.html#creationStack"]],null,[]],null,[],[]],[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]]],[["endTime",[null,179,null,[null,null,"closure/goog/fx/css3/transition.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/css3/transition.js#L179"]],[[[null,"<p>Timestamp for when the animation finished or was stopped.</p>\n"]]],null,null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#endTime"]],null,[]],[],[],[null,1]],[null,null,null,null,null,[[[null,null,null,["number",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[["startTime",[null,126,null,[null,null,"closure/goog/fx/css3/transition.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/fx/css3/transition.js#L126"]],[[[null,"<p>Timestamp for when the animation was started.</p>\n"]]],null,null,null,null,["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html#startTime"]],null,[]],[],[],[null,1]],[null,null,null,null,null,[[[null,null,null,["number",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]],null,[["goog.fx.TransitionBase",null,[null,null,[null,null,"goog.fx.TransitionBase.html"]],null,[]],["goog.events.EventTarget",null,[null,null,[null,null,"goog.events.EventTarget.html"]],null,[]],["goog.Disposable",null,[null,null,[null,null,"goog.Disposable.html"]],null,[]]],[["goog.disposable.IDisposable",null,[null,null,[null,null,"goog.disposable.IDisposable.html"]],null,[]],["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html"]],null,[]],["goog.fx.Transition",null,[null,null,[null,null,"goog.fx.Transition.html"]],null,[]]],[],[["goog.fx.css3.Transition",null,[null,null,[null,null,"goog.fx.css3.Transition.html"]],null,[]],null,null,1],null,"goog.fx.css3.Transition.html","goog.fx.css3.Transition",[],[],[],[]]]]]