{"2":{"1":[{"1":"goog.testing.MockRange","5":{"1":"closure/goog/testing/mockrange.js","2":37,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mockrange.js#L37"},"6":{"1":[{"1":"MockRange.ConcreteRange_","2":"goog.testing.MockRange.ConcreteRange_.html","3":{"1":[{"2":"<p>Concrete subclass of goog.dom.AbstractRange that simply sets the abstract\nmethod <strong>iterator</strong> to undefined so that javascript defaults to iterating\nthrough all of the object&#39;s properties.</p>\n"}]}}]},"7":{"1":[{"2":"<p>LooseMock of goog.dom.AbstractRange. Useful because the mock framework cannot\nsimply create a mock out of an abstract class, and cannot create a mock out\nof classes that implements <strong>iterator</strong> because it relies on the default\nbehavior of iterating through all of an object&#39;s properties.</p>\n"}]},"8":{"4":true},"14":{"1":{"1":"MockRange","2":{"1":"closure/goog/testing/mockrange.js","2":37,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mockrange.js#L37"},"3":{"1":[{"2":"<p>LooseMock of goog.dom.AbstractRange. Useful because the mock framework cannot\nsimply create a mock out of an abstract class, and cannot create a mock out\nof classes that implements <strong>iterator</strong> because it relies on the default\nbehavior of iterating through all of an object&#39;s properties.</p>\n"}]}},"3":true},"15":[{"1":{"1":"$anyTimes","2":{"1":"closure/goog/testing/mock.js","2":509,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L509"},"3":{"1":[{"2":"<p>Allows the expectation to be called any number of times.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$anyTimes"}}},"5":{"2":{"4":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html"}}},"3":{"1":[{"2":"<p>This mock object.</p>\n"}]}}},{"1":{"1":"$argumentsAsString","2":{"1":"closure/goog/testing/mock.js","2":625,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L625"},"3":{"1":[{"2":"<p>Render the provided argument array to a string to help\nclients with debugging tests.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$argumentsAsString"}}},"4":[{"1":"args","2":{"6":{"1":[{"4":{"1":"Array","4":true,"5":[{"7":true}]}},{"10":true}]}},"3":{"1":[{"2":"<p>The arguments passed to the mock.</p>\n"}]}}],"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>Human-readable string.</p>\n"}]}}},{"1":{"1":"$atLeastOnce","2":{"1":"closure/goog/testing/mock.js","2":477,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L477"},"3":{"1":[{"2":"<p>Allows the expectation to be called any number of times, as long as it&#39;s\ncalled once.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$atLeastOnce"}}},"5":{"2":{"4":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html"}}},"3":{"1":[{"2":"<p>This mock object.</p>\n"}]}}},{"1":{"1":"$atMostOnce","2":{"1":"closure/goog/testing/mock.js","2":465,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L465"},"3":{"1":[{"2":"<p>Allows the expectation to be called 0 or 1 times.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$atMostOnce"}}},"5":{"2":{"4":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html"}}},"3":{"1":[{"2":"<p>This mock object.</p>\n"}]}}},{"1":{"1":"$do","2":{"1":"closure/goog/testing/mock.js","2":416,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L416"},"3":{"1":[{"2":"<p>If this expectation defines a function to be called,\nit will be called and its result will be returned.\nOtherwise, if the expectation expects to throw, it will throw.\nOtherwise, this method will return defined value.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$do"}}},"4":[{"1":"expectation","2":{"6":{"1":[{"4":{"1":"goog.testing.MockExpectation","3":{"1":"goog.testing.MockExpectation.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>The expectation.</p>\n"}]}},{"1":"args","2":{"6":{"1":[{"4":{"1":"Array","4":true,"5":[{"8":true}]}},{"10":true}]}},"3":{"1":[{"2":"<p>The arguments to the method.</p>\n"}]}}],"5":{"2":{"7":true},"3":{"1":[{"2":"<p>The return value expected by the mock.</p>\n"}]}}},{"1":{"1":"$does","2":{"1":"closure/goog/testing/mock.js","2":455,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L455"},"3":{"1":[{"2":"<p>Specifies a function to call for currently pending expectation.\nNote, that using this method overrides declarations made\nusing $returns() and $throws() methods.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$does"}}},"4":[{"1":"func","2":{"6":{"1":[{"4":{"1":"Function"}},{"10":true}]}},"3":{"1":[{"2":"<p>The function to call.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html"}}},"3":{"1":[{"2":"<p>This mock object.</p>\n"}]}}},{"1":{"1":"$maybeThrow","2":{"1":"closure/goog/testing/mock.js","2":400,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L400"},"3":{"1":[{"2":"<p>If the expectation expects to throw, this method will throw.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$maybeThrow"}}},"4":[{"1":"expectation","2":{"6":{"1":[{"4":{"1":"goog.testing.MockExpectation","3":{"1":"goog.testing.MockExpectation.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>The expectation.</p>\n"}]}}]},{"1":{"1":"$mockMethod","2":{"1":"closure/goog/testing/mock.js","2":355,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L355"},"3":{"1":[{"2":"<p>The function that replaces all methods on the mock object.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$mockMethod"}}},"4":[{"1":"name","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The name of the method being mocked.</p>\n"}]}}],"5":{"2":{"7":true},"3":{"1":[{"2":"<p>In record mode, returns the mock object. In replay mode, returns\nwhatever the creator of the mock set as the return value.</p>\n"}]}}},{"1":{"1":"$never","2":{"1":"closure/goog/testing/mock.js","2":498,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L498"},"3":{"1":[{"2":"<p>Disallows the expectation from being called.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$never"}}},"5":{"2":{"4":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html"}}},"3":{"1":[{"2":"<p>This mock object.</p>\n"}]}}},{"1":{"1":"$once","2":{"1":"closure/goog/testing/mock.js","2":487,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L487"},"3":{"1":[{"2":"<p>Allows the expectation to be called exactly once.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$once"}}},"5":{"2":{"4":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html"}}},"3":{"1":[{"2":"<p>This mock object.</p>\n"}]}}},{"1":{"1":"$recordAndThrow","2":{"1":"closure/goog/testing/mock.js","2":567,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L567"},"3":{"1":[{"2":"<p>Throws an exception and records that an exception was thrown.</p>\n"}]},"5":1,"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$recordAndThrow"}}},"4":[{"1":"ex","2":{"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>Exception.</p>\n"}]}}],"6":[{"2":{"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>#ex.</p>\n"}]}}]},{"1":{"1":"$recordCall","2":{"1":"closure/goog/testing/loosemock.js","2":141,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/loosemock.js#L141"},"3":{"1":[{"2":"<p>Records an actual method call, intended to be overridden by a\nsubclass. The subclass must find the pending expectation and return the\ncorrect value.</p>\n"}]},"5":1,"7":{"1":"goog.testing.LooseMock","3":{"1":"goog.testing.LooseMock.html#$recordCall"}},"8":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$recordCall"}}},"4":[{"1":"name","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The name of the method being called.</p>\n"}]}},{"1":"args","2":{"6":{"1":[{"4":{"1":"Array","4":true,"5":[{"8":true}]}},{"10":true}]}},"3":{"1":[{"2":"<p>The arguments to the method.</p>\n"}]}}],"5":{"2":{"7":true},"3":{"1":[{"2":"<p>The return expected by the mock.</p>\n"}]}}},{"1":{"1":"$recordExpectation","2":{"1":"closure/goog/testing/loosemock.js","2":128,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/loosemock.js#L128"},"3":{"1":[{"2":"<p>Records the currently pending expectation, intended to be overridden by a\nsubclass.</p>\n"}]},"5":1,"7":{"1":"goog.testing.LooseMock","3":{"1":"goog.testing.LooseMock.html#$recordExpectation"}},"8":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$recordExpectation"}}}},{"1":{"1":"$registerArgumentListVerifier","2":{"1":"closure/goog/testing/mock.js","2":342,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L342"},"3":{"1":[{"2":"<p>Registers a verifier function to use when verifying method argument lists.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$registerArgumentListVerifier"}}},"4":[{"1":"methodName","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The name of the method for which the verifierFn\nshould be used.</p>\n"}]}},{"1":"fn","2":{"6":{"1":[{"4":{"1":"Function"}},{"10":true}]}},"3":{"1":[{"2":"<p>Argument list verifier function.  Should take 2 argument\narrays as arguments, and return true if they are considered equivalent.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html"}}},"3":{"1":[{"2":"<p>This mock object.</p>\n"}]}}},{"1":{"1":"$replay","2":{"1":"closure/goog/testing/mockinterface.js","2":34,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mockinterface.js#L34"},"3":{"1":[{"2":"<p>Write down all the expected functions that have been called on the\nmock so far. From here on out, future function calls will be\ncompared against this list.</p>\n"}]},"8":{"1":"goog.testing.LooseMock","3":{"1":"goog.testing.LooseMock.html#$replay"}}}},{"1":{"1":"$reset","2":{"1":"closure/goog/testing/mockinterface.js","2":40,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mockinterface.js#L40"},"3":{"1":[{"2":"<p>Reset the mock.</p>\n"}]},"8":{"1":"goog.testing.LooseMock","3":{"1":"goog.testing.LooseMock.html#$reset"}}}},{"1":{"1":"$returns","2":{"1":"closure/goog/testing/mock.js","2":431,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L431"},"3":{"1":[{"2":"<p>Specifies a return value for the currently pending expectation.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$returns"}}},"4":[{"1":"val","2":{"7":true},"3":{"1":[{"2":"<p>The return value.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html"}}},"3":{"1":[{"2":"<p>This mock object.</p>\n"}]}}},{"1":{"1":"$setIgnoreUnexpectedCalls","2":{"1":"closure/goog/testing/loosemock.js","2":120,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/loosemock.js#L120"},"3":{"1":[{"2":"<p>A setter for the ignoreUnexpectedCalls field.</p>\n"}]},"7":{"1":"goog.testing.LooseMock","3":{"1":"goog.testing.LooseMock.html#$setIgnoreUnexpectedCalls"}}},"4":[{"1":"ignoreUnexpectedCalls","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether to ignore unexpected calls.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.testing.LooseMock","3":{"1":"goog.testing.LooseMock.html"}}},"3":{"1":[{"2":"<p>This mock object.</p>\n"}]}}},{"1":{"1":"$throwCallException","2":{"1":"closure/goog/testing/mock.js","2":645,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L645"},"3":{"1":[{"2":"<p>Throw an exception based on an incorrect method call.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$throwCallException"}}},"4":[{"1":"name","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>Name of method called.</p>\n"}]}},{"1":"args","2":{"6":{"1":[{"4":{"1":"Array","4":true,"5":[{"7":true}]}},{"10":true}]}},"3":{"1":[{"2":"<p>Arguments passed to the mock.</p>\n"}]}},{"1":"opt_expectation","2":{"1":true,"6":{"1":[{"4":{"1":"goog.testing.MockExpectation","3":{"1":"goog.testing.MockExpectation.html"}}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Expected next call,\nif any.</p>\n"}]}}]},{"1":{"1":"$throwException","2":{"1":"closure/goog/testing/mock.js","2":556,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L556"},"3":{"1":[{"2":"<p>Throws an exception and records that an exception was thrown.</p>\n"}]},"5":1,"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$throwException"}}},"4":[{"1":"comment","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>A short comment about the exception.</p>\n"}]}},{"1":"opt_message","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>A longer message about the exception.</p>\n"}]}}],"6":[{"2":{"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>JsUnitException object.</p>\n"}]}}]},{"1":{"1":"$throws","2":{"1":"closure/goog/testing/mock.js","2":442,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L442"},"3":{"1":[{"2":"<p>Specifies a value for the currently pending expectation to throw.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$throws"}}},"4":[{"1":"val","2":{"7":true},"3":{"1":[{"2":"<p>The value to throw.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html"}}},"3":{"1":[{"2":"<p>This mock object.</p>\n"}]}}},{"1":{"1":"$times","2":{"1":"closure/goog/testing/mock.js","2":521,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L521"},"3":{"1":[{"2":"<p>Specifies the number of times the expectation should be called.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$times"}}},"4":[{"1":"times","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>The number of times this method will be called.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html"}}},"3":{"1":[{"2":"<p>This mock object.</p>\n"}]}}},{"1":{"1":"$verify","2":{"1":"closure/goog/testing/mockinterface.js","2":46,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mockinterface.js#L46"},"3":{"1":[{"2":"<p>Assert that the expected function calls match the actual calls.</p>\n"}]},"8":{"1":"goog.testing.LooseMock","3":{"1":"goog.testing.LooseMock.html#$verify"}}}},{"1":{"1":"$verifyCall","2":{"1":"closure/goog/testing/mock.js","2":606,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L606"},"3":{"1":[{"2":"<p>Verifies that a method call matches an expectation.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$verifyCall"}}},"4":[{"1":"expectation","2":{"6":{"1":[{"4":{"1":"goog.testing.MockExpectation","3":{"1":"goog.testing.MockExpectation.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>The expectation to check.</p>\n"}]}},{"1":"name","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The name of the called method.</p>\n"}]}},{"1":"args","2":{"6":{"1":[{"4":{"1":"Array","4":true,"5":[{"7":true}]}},{"10":true}]}},"3":{"1":[{"2":"<p>The arguments passed to the mock.</p>\n"}]}}],"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the call matches the expectation.</p>\n"}]}}}],"16":[{"1":{"1":"$argumentListVerifiers_","2":{"1":"closure/goog/testing/mock.js","2":256,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L256"},"3":{"1":[{"2":"<p>Map of argument name to optional argument list verifier function.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$argumentListVerifiers_"}}},"2":{"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true}]}}},{"1":{"1":"$pendingExpectation","2":{"1":"closure/goog/testing/mock.js","2":274,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L274"},"3":{"1":[{"2":"<p>The expectation currently being created. All methods that modify the\ncurrent expectation return the Mock object for easy chaining, so this is\nwhere we keep track of the expectation that&#39;s currently being modified.</p>\n"}]},"5":1,"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$pendingExpectation"}}},"2":{"6":{"1":[{"4":{"1":"goog.testing.MockExpectation","3":{"1":"goog.testing.MockExpectation.html"}}},{"10":true}]}}},{"1":{"1":"$proxy","2":{"1":"closure/goog/testing/mock.js","2":249,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/mock.js#L249"},"3":{"1":[{"2":"<p>A proxy for the mock.  This can be used for dependency injection in lieu of\nthe mock if the test requires a strict instanceof check.</p>\n"}]},"7":{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html#$proxy"}}},"2":{"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true}]}}}],"18":[{"1":"goog.testing.LooseMock","3":{"1":"goog.testing.LooseMock.html"}},{"1":"goog.testing.Mock","3":{"1":"goog.testing.Mock.html"}}],"19":[{"1":"goog.testing.MockInterface","3":{"1":"goog.testing.MockInterface.html"}}],"21":{"1":{"1":"goog.testing.MockRange","3":{"1":"goog.testing.MockRange.html"}},"2":4},"23":"goog.testing.MockRange.html","24":"goog.testing.MockRange"}]}}