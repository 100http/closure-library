{"2":{"1":[{"1":"goog.messaging.PortCaller","5":{"1":"closure/goog/messaging/portcaller.js","2":45,"3":"https://github.com/google/closure-library/blob/master/closure/goog/messaging/portcaller.js#L45"},"7":{"1":[{"2":"<p>The leaf node of a network.</p>\n"}]},"8":{"4":true},"14":{"1":{"1":"PortCaller","2":{"1":"closure/goog/messaging/portcaller.js","2":45,"3":"https://github.com/google/closure-library/blob/master/closure/goog/messaging/portcaller.js#L45"},"3":{"1":[{"2":"<p>The leaf node of a network.</p>\n"}]}},"3":true,"4":[{"1":"operatorPort","2":{"4":{"1":"goog.messaging.MessageChannel","3":{"1":"goog.messaging.MessageChannel.html"}}},"3":{"1":[{"2":"<p>The channel for\ncommunicating with the operator. The other side of this channel should be\npassed to <a href=\"goog.messaging.PortOperator.html#addPort\"><code>goog.messaging.PortOperator#addPort</code></a>. Must be either a\n<a href=\"goog.messaging.PortChannel.html\"><code>goog.messaging.PortChannel</code></a> or a decorator wrapping a PortChannel;\nin particular, it must be able to send and receive <code>MessagePort</code>s.</p>\n"}]}}]},"15":[{"1":{"1":"addOnDisposeCallback","2":{"1":"closure/goog/disposable/disposable.js","2":213,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L213"},"3":{"1":[{"2":"<p>Invokes a callback function when this object is disposed. Callbacks are\ninvoked in the order in which they were added. If a callback is added to\nan already disposed Disposable, it will be called immediately.</p>\n"}]},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#addOnDisposeCallback"}}},"2":["T"],"4":[{"1":"callback","2":{"3":{"2":{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}},"4":{"8":true}}},"3":{"1":[{"2":"<p>The callback function.</p>\n"}]}},{"1":"opt_scope","2":{"1":true,"6":{"1":[{"4":{"1":"T"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>An optional scope to call the callback in.</p>\n"}]}}]},{"1":{"1":"dial","2":{"1":"closure/goog/messaging/portcaller.js","2":90,"3":"https://github.com/google/closure-library/blob/master/closure/goog/messaging/portcaller.js#L90"},"3":{"1":[{"2":"<p>Returns a message channel that communicates with the named context. If no\nsuch port exists, an error will either be thrown immediately or after a round\ntrip with the operator, depending on whether this pool is the operator or a\ncaller.</p>\n<p>If context A calls dial(&#39;B&#39;) and context B calls dial(&#39;A&#39;), the two\nports returned will be connected to one another.</p>\n"}]},"9":[{"1":"goog.messaging.PortNetwork","3":{"1":"goog.messaging.PortNetwork.html#dial"}}]},"4":[{"1":"name","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The name of the context to get.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"goog.messaging.MessageChannel","3":{"1":"goog.messaging.MessageChannel.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>The channel communicating with the\ngiven context. This is either a <a href=\"goog.messaging.PortChannel.html\"><code>goog.messaging.PortChannel</code></a> or a\ndecorator around a PortChannel, so it&#39;s safe to send <code>MessagePorts</code>\nacross it. This will be disposed along with the PortNetwork.</p>\n"}]}}},{"1":{"1":"dispose","2":{"1":"closure/goog/disposable/idisposable.js","2":39,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/idisposable.js#L39"},"3":{"1":[{"2":"<p>Disposes of the object and its resources.</p>\n"}]},"8":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#dispose"}}},"5":{"3":{"1":[{"2":"<p>Nothing.</p>\n"}]}}},{"1":{"1":"disposeInternal","2":{"1":"closure/goog/messaging/portcaller.js","2":145,"3":"https://github.com/google/closure-library/blob/master/closure/goog/messaging/portcaller.js#L145"},"3":{"1":[{"2":"<p>Deletes or nulls out any references to COM objects, DOM nodes, or other\ndisposable objects. Classes that extend <code>goog.Disposable</code> should\noverride this method.\nNot reentrant. To avoid calling it twice, it must only be called from the\nsubclass&#39; <code>disposeInternal</code> method. Everywhere else the public\n<code>dispose</code> method must be used.\nFor example:</p>\n <pre>\n   mypackage.MyClass &#61; function() {\n     mypackage.MyClass.base(this, &#39;constructor&#39;);\n     // Constructor logic specific to MyClass.\n     ...\n   };\n   goog.inherits(mypackage.MyClass, goog.Disposable);\n\n   mypackage.MyClass.prototype.disposeInternal &#61; function() {\n     // Dispose logic specific to MyClass.\n     ...\n     // Call superclass&#39;s disposeInternal at the end of the subclass&#39;s, like\n     // in C&#43;&#43;, to avoid hard-to-catch issues.\n     mypackage.MyClass.base(this, &#39;disposeInternal&#39;);\n   };\n </pre>\n"}]},"5":1,"8":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#disposeInternal"}}}},{"1":{"1":"getDisposed","2":{"1":"closure/goog/disposable/disposable.js","2":160,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L160"},"3":{},"4":{"1":[{"2":"<p>Use <a href=\"goog.messaging.PortCaller.html#isDisposed\"><code>#isDisposed</code></a> instead.</p>\n"}]},"6":{"2":true},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#getDisposed"}}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the object has been disposed of.</p>\n"}]}}},{"1":{"1":"isDisposed","2":{"1":"closure/goog/disposable/idisposable.js","2":45,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/idisposable.js#L45"},"3":{},"8":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#isDisposed"}}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the object has been disposed of.</p>\n"}]}}},{"1":{"1":"registerDisposable","2":{"1":"closure/goog/disposable/disposable.js","2":200,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L200"},"3":{"1":[{"2":"<p>Associates a disposable object with this object so that they will be disposed\ntogether.</p>\n"}]},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#registerDisposable"}}},"4":[{"1":"disposable","2":{"6":{"1":[{"4":{"1":"goog.disposable.IDisposable","3":{"1":"goog.disposable.IDisposable.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>that will be disposed when\nthis object is disposed.</p>\n"}]}}]}],"16":[{"1":{"1":"creationStack","2":{"1":"closure/goog/disposable/disposable.js","2":44,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L44"},"3":{"1":[{"2":"<p>If monitoring the goog.Disposable instances is enabled, stores the creation\nstack trace of the Disposable instance.</p>\n"}]},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#creationStack"}}},"2":{"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}}}],"18":[{"1":"goog.Disposable","3":{"1":"goog.Disposable.html"}}],"19":[{"1":"goog.disposable.IDisposable","3":{"1":"goog.disposable.IDisposable.html"}},{"1":"goog.messaging.PortNetwork","3":{"1":"goog.messaging.PortNetwork.html"}}],"21":{"1":{"1":"goog.messaging.PortCaller","3":{"1":"goog.messaging.PortCaller.html"}},"2":4},"23":"goog.messaging.PortCaller.html","24":"goog.messaging.PortCaller"}]}}