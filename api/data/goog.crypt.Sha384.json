{"2":{"1":[{"1":"goog.crypt.Sha384","5":{"1":"closure/goog/crypt/sha384.js","2":40,"3":"https://github.com/google/closure-library/blob/master/closure/goog/crypt/sha384.js#L40"},"7":{"1":[{"2":"<p>Constructs a SHA-384 cryptographic hash.</p>\n"}]},"8":{"4":true,"7":true},"14":{"1":{"1":"Sha384","2":{"1":"closure/goog/crypt/sha384.js","2":40,"3":"https://github.com/google/closure-library/blob/master/closure/goog/crypt/sha384.js#L40"},"3":{"1":[{"2":"<p>Constructs a SHA-384 cryptographic hash.</p>\n"}]}},"3":true},"15":[{"1":{"1":"digest","2":{"1":"closure/goog/crypt/sha2_64bit.js","2":203,"3":"https://github.com/google/closure-library/blob/master/closure/goog/crypt/sha2_64bit.js#L203"},"3":{},"7":{"1":"goog.crypt.Sha2_64bit","3":{"1":"goog.crypt.Sha2_64bit.html#digest"}},"8":{"1":"goog.crypt.Hash","3":{"1":"goog.crypt.Hash.html#digest"}}},"5":{"2":{"4":{"1":"Array","4":true,"5":[{"4":{"1":"number","4":true}}]}},"3":{"1":[{"2":"<p>The finalized hash computed\nfrom the internal accumulator.</p>\n"}]}}},{"1":{"1":"reset","2":{"1":"closure/goog/crypt/sha2_64bit.js","2":139,"3":"https://github.com/google/closure-library/blob/master/closure/goog/crypt/sha2_64bit.js#L139"},"3":{"1":[{"2":"<p>Resets this hash function.</p>\n"}]},"7":{"1":"goog.crypt.Sha2_64bit","3":{"1":"goog.crypt.Sha2_64bit.html#reset"}},"8":{"1":"goog.crypt.Hash","3":{"1":"goog.crypt.Hash.html#reset"}}}},{"1":{"1":"update","2":{"1":"closure/goog/crypt/sha2_64bit.js","2":148,"3":"https://github.com/google/closure-library/blob/master/closure/goog/crypt/sha2_64bit.js#L148"},"3":{"1":[{"2":"<p>Adds a byte array (array with values in [0-255] range) or a string (might\nonly contain 8-bit, i.e., Latin1 characters) to the internal accumulator.</p>\n<p>Many hash functions operate on blocks of data and implement optimizations\nwhen a full chunk of data is readily available. Hence it is often preferable\nto provide large chunks of data (a kilobyte or more) than to repeatedly\ncall the update method with few tens of bytes. If this is not possible, or\nnot feasible, it might be good to provide data in multiplies of hash block\nsize (often 64 bytes). Please see the implementation and performance tests\nof your favourite hash.</p>\n"}]},"7":{"1":"goog.crypt.Sha2_64bit","3":{"1":"goog.crypt.Sha2_64bit.html#update"}},"8":{"1":"goog.crypt.Hash","3":{"1":"goog.crypt.Hash.html#update"}}},"4":[{"1":"bytes","2":{"6":{"1":[{"4":{"1":"Array","4":true,"5":[{"4":{"1":"number","4":true}}]}},{"4":{"1":"Uint8Array"}},{"4":{"1":"string","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>Data used for the update.</p>\n"}]}},{"1":"opt_length","2":{"1":true,"6":{"1":[{"4":{"1":"number","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Number of bytes to use.</p>\n"}]}}]}],"16":[{"1":{"1":"blockSize","2":{"1":"closure/goog/crypt/sha2_64bit.js","2":54,"3":"https://github.com/google/closure-library/blob/master/closure/goog/crypt/sha2_64bit.js#L54"},"3":{"1":[{"2":"<p>The number of bytes that are digested in each pass of this hasher.</p>\n"}]},"6":{"1":true},"7":{"1":"goog.crypt.Sha2_64bit","3":{"1":"goog.crypt.Sha2_64bit.html#blockSize"}},"8":{"1":"goog.crypt.Hash","3":{"1":"goog.crypt.Hash.html#blockSize"}}},"2":{"4":{"1":"number","4":true}}}],"18":[{"1":"goog.crypt.Sha2_64bit","3":{"1":"goog.crypt.Sha2_64bit.html"}},{"1":"goog.crypt.Hash","3":{"1":"goog.crypt.Hash.html"}}],"21":{"1":{"1":"goog.crypt.Sha384","3":{"1":"goog.crypt.Sha384.html"}},"2":4},"23":"goog.crypt.Sha384.html","24":"goog.crypt.Sha384"}]}}