{"2":{"1":[{"1":"goog.asserts","5":{"1":"closure/goog/asserts/asserts.js","2":37,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L37"},"6":{"1":[{"1":"AssertionError","2":"goog.asserts.AssertionError.html","3":{"1":[{"2":"<p>Error object for failed assertions.</p>\n"}]}}]},"7":{},"8":{},"12":[{"1":{"1":"DEFAULT_ERROR_HANDLER","2":{"1":"closure/goog/asserts/asserts.js","2":85,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L85"},"3":{"1":[{"2":"<p>The default error handler.</p>\n"}]}},"4":[{"1":"e","2":{"4":{"1":"goog.asserts.AssertionError","3":{"1":"goog.asserts.AssertionError.html"}}},"3":{"1":[{"2":"<p>The exception to be handled.</p>\n"}]}}]},{"1":{"1":"assert","2":{"1":"closure/goog/asserts/asserts.js","2":149,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L149"},"3":{"1":[{"2":"<p>Checks if the condition evaluates to true if goog.asserts.ENABLE_ASSERTS is\ntrue.</p>\n"}]}},"2":["T"],"4":[{"1":"condition","2":{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}},"3":{"1":[{"2":"<p>The condition to check.</p>\n"}]}},{"1":"opt_message","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Error message in case of failure.</p>\n"}]}},{"1":"var_args","2":{"2":true,"7":true},"3":{"1":[{"2":"<p>The items to substitute into the failure message.</p>\n"}]}}],"5":{"2":{"4":{"1":"T"}},"3":{"1":[{"2":"<p>The value of the condition.</p>\n"}]}},"6":[{"2":{"6":{"1":[{"4":{"1":"goog.asserts.AssertionError","3":{"1":"goog.asserts.AssertionError.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>When the condition evaluates to false.</p>\n"}]}}]},{"1":{"1":"assertArray","2":{"1":"closure/goog/asserts/asserts.js","2":267,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L267"},"3":{"1":[{"2":"<p>Checks if the value is an Array if goog.asserts.ENABLE_ASSERTS is true.</p>\n"}]}},"4":[{"1":"value","2":{"7":true},"3":{"1":[{"2":"<p>The value to check.</p>\n"}]}},{"1":"opt_message","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Error message in case of failure.</p>\n"}]}},{"1":"var_args","2":{"2":true,"7":true},"3":{"1":[{"2":"<p>The items to substitute into the failure message.</p>\n"}]}}],"5":{"2":{"4":{"1":"Array","4":true,"5":[{"8":true}]}},"3":{"1":[{"2":"<p>The value, guaranteed to be a non-null array.</p>\n"}]}},"6":[{"2":{"6":{"1":[{"4":{"1":"goog.asserts.AssertionError","3":{"1":"goog.asserts.AssertionError.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>When the value is not an array.</p>\n"}]}}]},{"1":{"1":"assertBoolean","2":{"1":"closure/goog/asserts/asserts.js","2":286,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L286"},"3":{"1":[{"2":"<p>Checks if the value is a boolean if goog.asserts.ENABLE_ASSERTS is true.</p>\n"}]}},"4":[{"1":"value","2":{"7":true},"3":{"1":[{"2":"<p>The value to check.</p>\n"}]}},{"1":"opt_message","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Error message in case of failure.</p>\n"}]}},{"1":"var_args","2":{"2":true,"7":true},"3":{"1":[{"2":"<p>The items to substitute into the failure message.</p>\n"}]}}],"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>The value, guaranteed to be a boolean when asserts are\nenabled.</p>\n"}]}},"6":[{"2":{"6":{"1":[{"4":{"1":"goog.asserts.AssertionError","3":{"1":"goog.asserts.AssertionError.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>When the value is not a boolean.</p>\n"}]}}]},{"1":{"1":"assertElement","2":{"1":"closure/goog/asserts/asserts.js","2":305,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L305"},"3":{"1":[{"2":"<p>Checks if the value is a DOM Element if goog.asserts.ENABLE_ASSERTS is true.</p>\n"}]}},"4":[{"1":"value","2":{"7":true},"3":{"1":[{"2":"<p>The value to check.</p>\n"}]}},{"1":"opt_message","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Error message in case of failure.</p>\n"}]}},{"1":"var_args","2":{"2":true,"7":true},"3":{"1":[{"2":"<p>The items to substitute into the failure message.</p>\n"}]}}],"5":{"2":{"4":{"1":"Element"}},"3":{"1":[{"2":"<p>The value, likely to be a DOM Element when asserts are\nenabled.</p>\n"}]}},"6":[{"2":{"6":{"1":[{"4":{"1":"goog.asserts.AssertionError","3":{"1":"goog.asserts.AssertionError.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>When the value is not an Element.</p>\n"}]}}]},{"1":{"1":"assertFunction","2":{"1":"closure/goog/asserts/asserts.js","2":231,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L231"},"3":{"1":[{"2":"<p>Checks if the value is a function if goog.asserts.ENABLE_ASSERTS is true.</p>\n"}]}},"4":[{"1":"value","2":{"7":true},"3":{"1":[{"2":"<p>The value to check.</p>\n"}]}},{"1":"opt_message","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Error message in case of failure.</p>\n"}]}},{"1":"var_args","2":{"2":true,"7":true},"3":{"1":[{"2":"<p>The items to substitute into the failure message.</p>\n"}]}}],"5":{"2":{"4":{"1":"Function"}},"3":{"1":[{"2":"<p>The value, guaranteed to be a function when asserts\nenabled.</p>\n"}]}},"6":[{"2":{"6":{"1":[{"4":{"1":"goog.asserts.AssertionError","3":{"1":"goog.asserts.AssertionError.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>When the value is not a function.</p>\n"}]}}]},{"1":{"1":"assertInstanceof","2":{"1":"closure/goog/asserts/asserts.js","2":331,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L331"},"3":{"1":[{"2":"<p>Checks if the value is an instance of the user-defined type if\ngoog.asserts.ENABLE_ASSERTS is true.</p>\n<p>The compiler may tighten the type returned by this function.</p>\n"}]}},"2":["T"],"4":[{"1":"value","2":{"8":true},"3":{"1":[{"2":"<p>The value to check.</p>\n"}]}},{"1":"type","2":{"3":{"1":true,"2":{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}},"3":[{"2":true,"8":true}]}},"3":{"1":[{"2":"<p>A user-defined constructor.</p>\n"}]}},{"1":"opt_message","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Error message in case of failure.</p>\n"}]}},{"1":"var_args","2":{"2":true,"7":true},"3":{"1":[{"2":"<p>The items to substitute into the failure message.</p>\n"}]}}],"5":{"2":{"4":{"1":"T"}}},"6":[{"2":{"6":{"1":[{"4":{"1":"goog.asserts.AssertionError","3":{"1":"goog.asserts.AssertionError.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>When the value is not an instance of\ntype.</p>\n"}]}}]},{"1":{"1":"assertNumber","2":{"1":"closure/goog/asserts/asserts.js","2":194,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L194"},"3":{"1":[{"2":"<p>Checks if the value is a number if goog.asserts.ENABLE_ASSERTS is true.</p>\n"}]}},"4":[{"1":"value","2":{"7":true},"3":{"1":[{"2":"<p>The value to check.</p>\n"}]}},{"1":"opt_message","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Error message in case of failure.</p>\n"}]}},{"1":"var_args","2":{"2":true,"7":true},"3":{"1":[{"2":"<p>The items to substitute into the failure message.</p>\n"}]}}],"5":{"2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>The value, guaranteed to be a number when asserts enabled.</p>\n"}]}},"6":[{"2":{"6":{"1":[{"4":{"1":"goog.asserts.AssertionError","3":{"1":"goog.asserts.AssertionError.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>When the value is not a number.</p>\n"}]}}]},{"1":{"1":"assertObject","2":{"1":"closure/goog/asserts/asserts.js","2":249,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L249"},"3":{"1":[{"2":"<p>Checks if the value is an Object if goog.asserts.ENABLE_ASSERTS is true.</p>\n"}]}},"4":[{"1":"value","2":{"7":true},"3":{"1":[{"2":"<p>The value to check.</p>\n"}]}},{"1":"opt_message","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Error message in case of failure.</p>\n"}]}},{"1":"var_args","2":{"2":true,"7":true},"3":{"1":[{"2":"<p>The items to substitute into the failure message.</p>\n"}]}}],"5":{"2":{"4":{"1":"Object","4":true}},"3":{"1":[{"2":"<p>The value, guaranteed to be a non-null object.</p>\n"}]}},"6":[{"2":{"6":{"1":[{"4":{"1":"goog.asserts.AssertionError","3":{"1":"goog.asserts.AssertionError.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>When the value is not an object.</p>\n"}]}}]},{"1":{"1":"assertObjectPrototypeIsIntact","2":{"1":"closure/goog/asserts/asserts.js","2":346,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L346"},"3":{"1":[{"2":"<p>Checks that no enumerable keys are present in Object.prototype. Such keys\nwould break most code that use <code>for (var ... in ...)</code> loops.</p>\n"}]}}},{"1":{"1":"assertString","2":{"1":"closure/goog/asserts/asserts.js","2":212,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L212"},"3":{"1":[{"2":"<p>Checks if the value is a string if goog.asserts.ENABLE_ASSERTS is true.</p>\n"}]}},"4":[{"1":"value","2":{"7":true},"3":{"1":[{"2":"<p>The value to check.</p>\n"}]}},{"1":"opt_message","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Error message in case of failure.</p>\n"}]}},{"1":"var_args","2":{"2":true,"7":true},"3":{"1":[{"2":"<p>The items to substitute into the failure message.</p>\n"}]}}],"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The value, guaranteed to be a string when asserts enabled.</p>\n"}]}},"6":[{"2":{"6":{"1":[{"4":{"1":"goog.asserts.AssertionError","3":{"1":"goog.asserts.AssertionError.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>When the value is not a string.</p>\n"}]}}]},{"1":{"1":"fail","2":{"1":"closure/goog/asserts/asserts.js","2":176,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L176"},"3":{"1":[{"2":"<p>Fails if goog.asserts.ENABLE_ASSERTS is true. This function is useful in case\nwhen we want to add a check in the unreachable area like switch-case\nstatement:</p>\n <pre>\n  switch(type) {\n    case FOO: doSomething(); break;\n    case BAR: doSomethingElse(); break;\n    default: goog.asserts.fail(&#39;Unrecognized type: &#39; &#43; type);\n      // We have only 2 types - &#34;default:&#34; section is unreachable code.\n  }\n </pre>\n"}]}},"4":[{"1":"opt_message","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Error message in case of failure.</p>\n"}]}},{"1":"var_args","2":{"2":true,"7":true},"3":{"1":[{"2":"<p>The items to substitute into the failure message.</p>\n"}]}}],"6":[{"2":{"6":{"1":[{"4":{"1":"goog.asserts.AssertionError","3":{"1":"goog.asserts.AssertionError.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>Failure.</p>\n"}]}}]},{"1":{"1":"setErrorHandler","2":{"1":"closure/goog/asserts/asserts.js","2":132,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L132"},"3":{"1":[{"2":"<p>Sets a custom error handler that can be used to customize the behavior of\nassertion failures, for example by turning all assertion failures into log\nmessages.</p>\n"}]}},"4":[{"1":"errorHandler","2":{"3":{"3":[{"4":{"1":"goog.asserts.AssertionError","3":{"1":"goog.asserts.AssertionError.html"}}}],"4":{"8":true}}}}]}],"20":[{"1":{"1":"goog.asserts.ENABLE_ASSERTS","2":{"1":"closure/goog/asserts/asserts.js","2":48,"3":"https://github.com/google/closure-library/blob/master/closure/goog/asserts/asserts.js#L48"},"3":{"1":[{"2":"<p>Whether to strip out asserts or to leave them in.</p>\n"}]},"6":{"1":true}},"2":{"4":{"1":"boolean","4":true}}}],"21":{"1":{"1":"goog.asserts","3":{"1":"goog.asserts.html"}},"2":4},"23":"goog.asserts.html","24":"goog.asserts"}]}}