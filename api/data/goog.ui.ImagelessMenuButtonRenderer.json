{"2":{"1":[{"1":"goog.ui.ImagelessMenuButtonRenderer","5":{"1":"closure/goog/ui/imagelessmenubuttonrenderer.js","2":51,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/imagelessmenubuttonrenderer.js#L51"},"7":{"1":[{"2":"<p>Custom renderer for <a href=\"goog.ui.MenuButton.html\"><code>goog.ui.MenuButton</code></a>s. Imageless buttons can\ncontain almost arbitrary HTML content, will flow like inline elements, but\ncan be styled like block-level elements.</p>\n"}]},"8":{"2":true,"4":true},"9":{"1":[{"2":"<p>These contain a lot of unnecessary DOM for modern user agents.\nPlease use a simpler button renderer like css3buttonrenderer.</p>\n"}]},"12":[{"1":{"1":"ImagelessMenuButtonRenderer.getInstance","2":{"1":"closure/goog/ui/imagelessmenubuttonrenderer.js","2":51,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/imagelessmenubuttonrenderer.js#L51"},"3":{}},"5":{"2":{"4":{"1":"goog.ui.ImagelessMenuButtonRenderer","3":{"1":"goog.ui.ImagelessMenuButtonRenderer.html"}}}}}],"13":[{"1":{"1":"ImagelessMenuButtonRenderer.CSS_CLASS","2":{"1":"closure/goog/ui/imagelessmenubuttonrenderer.js","2":63,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/imagelessmenubuttonrenderer.js#L63"},"3":{"1":[{"2":"<p>Default CSS class to be applied to the root element of components rendered\nby this renderer.</p>\n"}]}},"2":{"4":{"1":"string","4":true}}},{"1":{"1":"ImagelessMenuButtonRenderer.instance_","2":{"1":"closure/goog/ui/imagelessmenubuttonrenderer.js","2":51,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/imagelessmenubuttonrenderer.js#L51"},"3":{}},"2":{"4":{"1":"goog.ui.ImagelessMenuButtonRenderer","3":{"1":"goog.ui.ImagelessMenuButtonRenderer.html"}}}}],"14":{"1":{"1":"ImagelessMenuButtonRenderer","2":{"1":"closure/goog/ui/imagelessmenubuttonrenderer.js","2":51,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/imagelessmenubuttonrenderer.js#L51"},"3":{"1":[{"2":"<p>Custom renderer for <a href=\"goog.ui.MenuButton.html\"><code>goog.ui.MenuButton</code></a>s. Imageless buttons can\ncontain almost arbitrary HTML content, will flow like inline elements, but\ncan be styled like block-level elements.</p>\n"}]},"4":{"1":[{"2":"<p>These contain a lot of unnecessary DOM for modern user agents.\nPlease use a simpler button renderer like css3buttonrenderer.</p>\n"}]},"6":{"2":true}},"3":true},"15":[{"1":{"1":"canDecorate","2":{"1":"closure/goog/ui/imagelessmenubuttonrenderer.js","2":87,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/imagelessmenubuttonrenderer.js#L87"},"3":{"1":[{"2":"<p>Returns true if this renderer can decorate the element.  Overrides\n<a href=\"goog.ui.MenuButtonRenderer.html#canDecorate\"><code>goog.ui.MenuButtonRenderer#canDecorate</code></a> by returning true if the\nelement is a DIV, false otherwise.</p>\n"}]},"8":{"1":"goog.ui.CustomButtonRenderer","3":{"1":"goog.ui.CustomButtonRenderer.html#canDecorate"}}},"4":[{"1":"element","2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>Element to decorate.</p>\n"}]}}],"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the renderer can decorate the element.</p>\n"}]}}},{"1":{"1":"createButton","2":{"1":"closure/goog/ui/imagelessmenubuttonrenderer.js","2":118,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/imagelessmenubuttonrenderer.js#L118"},"3":{"1":[{"2":"<p>Takes a text caption or existing DOM structure, and returns the content\nwrapped in a pseudo-rounded-corner box.  Creates the following DOM structure:</p>\n<pre><code>&lt;div class&#61;&#34;goog-inline-block goog-imageless-button&#34;&gt;\n  &lt;div class&#61;&#34;goog-inline-block goog-imageless-button-outer-box&#34;&gt;\n    &lt;div class&#61;&#34;goog-imageless-button-inner-box&#34;&gt;\n      &lt;div class&#61;&#34;goog-imageless-button-pos-box&#34;&gt;\n        &lt;div class&#61;&#34;goog-imageless-button-top-shadow&#34;&gt;&amp;nbsp;&lt;/div&gt;\n        &lt;div class&#61;&#34;goog-imageless-button-content\n                    goog-imageless-menubutton-caption&#34;&gt;Contents...\n        &lt;/div&gt;\n        &lt;div class&#61;&#34;goog-imageless-menubutton-dropdown&#34;&gt;&lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n<p>Used by both <a href=\"goog.ui.ImagelessMenuButtonRenderer.html#createDom\"><code>#createDom</code></a> and <a href=\"goog.ui.ImagelessMenuButtonRenderer.html#decorate\"><code>#decorate</code></a>.  To be overridden\nby subclasses.</p>\n"}]},"8":{"1":"goog.ui.MenuButtonRenderer","3":{"1":"goog.ui.MenuButtonRenderer.html#createButton"}}},"4":[{"1":"content","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"Node"}},{"4":{"1":"Array","4":true,"5":[{"4":{"1":"Node"}}]}},{"4":{"1":"NodeList","5":[{"4":{"1":"Node"}}]}},{"10":true}]}},"3":{"1":[{"2":"<p>Text caption or DOM structure to wrap\nin a box.</p>\n"}]}},{"1":"dom","2":{"6":{"1":[{"4":{"1":"goog.dom.DomHelper","3":{"1":"goog.dom.DomHelper.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>DOM helper, used for document interaction.</p>\n"}]}}],"5":{"2":{"4":{"1":"Element"}},"3":{"1":[{"2":"<p>Pseudo-rounded-corner box containing the content.</p>\n"}]}}},{"1":{"1":"createCaption","2":{"1":"closure/goog/ui/menubuttonrenderer.js","2":145,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/menubuttonrenderer.js#L145"},"3":{"1":[{"2":"<p>Takes a text caption or existing DOM structure, and returns it wrapped in\nan appropriately-styled DIV.  Creates the following DOM structure:</p>\n<pre><code>&lt;div class&#61;&#34;goog-inline-block goog-menu-button-caption&#34;&gt;\n  Contents...\n&lt;/div&gt;\n</code></pre>\n"}]},"7":{"1":"goog.ui.MenuButtonRenderer","3":{"1":"goog.ui.MenuButtonRenderer.html#createCaption"}}},"4":[{"1":"content","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"Node"}},{"4":{"1":"Array","4":true,"5":[{"4":{"1":"Node"}}]}},{"4":{"1":"NodeList","5":[{"4":{"1":"Node"}}]}},{"10":true}]}},"3":{"1":[{"2":"<p>Text caption or DOM structure\nto wrap in a box.</p>\n"}]}},{"1":"dom","2":{"6":{"1":[{"4":{"1":"goog.dom.DomHelper","3":{"1":"goog.dom.DomHelper.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>DOM helper, used for document interaction.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>Caption element.</p>\n"}]}}},{"1":{"1":"createDom","2":{"1":"closure/goog/ui/custombuttonrenderer.js","2":74,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/custombuttonrenderer.js#L74"},"3":{"1":[{"2":"<p>Returns the button&#39;s contents wrapped in the following DOM structure:</p>\n<pre><code>&lt;div class&#61;&#34;goog-inline-block goog-custom-button&#34;&gt;\n  &lt;div class&#61;&#34;goog-inline-block goog-custom-button-outer-box&#34;&gt;\n    &lt;div class&#61;&#34;goog-inline-block goog-custom-button-inner-box&#34;&gt;\n      Contents...\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n<p>Overrides <a href=\"goog.ui.ButtonRenderer.html#createDom\"><code>goog.ui.ButtonRenderer#createDom</code></a>.</p>\n"}]},"7":{"1":"goog.ui.CustomButtonRenderer","3":{"1":"goog.ui.CustomButtonRenderer.html#createDom"}},"8":{"1":"goog.ui.ButtonRenderer","3":{"1":"goog.ui.ButtonRenderer.html#createDom"}}},"4":[{"1":"control","2":{"6":{"1":[{"4":{"1":"goog.ui.Control","3":{"1":"goog.ui.Control.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>goog.ui.Button to render.</p>\n"}]}}],"5":{"2":{"4":{"1":"Element"}},"3":{"1":[{"2":"<p>Root element for the button.</p>\n"}]}}},{"1":{"1":"createDropdown","2":{"1":"closure/goog/ui/menubuttonrenderer.js","2":184,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/menubuttonrenderer.js#L184"},"3":{"1":[{"2":"<p>Returns an appropriately-styled DIV containing a dropdown arrow element.\nCreates the following DOM structure:</p>\n<pre><code>&lt;div class&#61;&#34;goog-inline-block goog-menu-button-dropdown&#34;&gt;\n  &amp;nbsp;\n&lt;/div&gt;\n</code></pre>\n"}]},"7":{"1":"goog.ui.MenuButtonRenderer","3":{"1":"goog.ui.MenuButtonRenderer.html#createDropdown"}}},"4":[{"1":"dom","2":{"6":{"1":[{"4":{"1":"goog.dom.DomHelper","3":{"1":"goog.dom.DomHelper.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>DOM helper, used for document interaction.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>Dropdown element.</p>\n"}]}}},{"1":{"1":"decorate","2":{"1":"closure/goog/ui/menubuttonrenderer.js","2":81,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/menubuttonrenderer.js#L81"},"3":{"1":[{"2":"<p>Takes an element, decorates it with the menu button control, and returns\nthe element.  Overrides <a href=\"goog.ui.CustomButtonRenderer.html#decorate\"><code>goog.ui.CustomButtonRenderer#decorate</code></a> by\nlooking for a child element that can be decorated by a menu, and if it\nfinds one, decorates it and attaches it to the menu button.</p>\n"}]},"7":{"1":"goog.ui.MenuButtonRenderer","3":{"1":"goog.ui.MenuButtonRenderer.html#decorate"}},"8":{"1":"goog.ui.CustomButtonRenderer","3":{"1":"goog.ui.CustomButtonRenderer.html#decorate"}}},"4":[{"1":"control","2":{"6":{"1":[{"4":{"1":"goog.ui.Control","3":{"1":"goog.ui.Control.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>goog.ui.MenuButton to decorate the element.</p>\n"}]}},{"1":"element","2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>Element to decorate.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>Decorated element.</p>\n"}]}}},{"1":{"1":"enableClassName","2":{"1":"closure/goog/ui/controlrenderer.js","2":232,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L232"},"3":{"1":[{"2":"<p>Updates the control&#39;s DOM by adding or removing the specified class name\nto/from its root element. May add additional combined classes as needed in\nIE6 and lower. Because of this, subclasses should use this method when\nmodifying class names on the control&#39;s root element.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#enableClassName"}}},"4":[{"1":"control","2":{"6":{"1":[{"4":{"1":"goog.ui.Control","3":{"1":"goog.ui.Control.html"}}},{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>Control instance (or root element)\nto be updated.</p>\n"}]}},{"1":"className","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>CSS class name to add or remove.</p>\n"}]}},{"1":"enable","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether to add or remove the class name.</p>\n"}]}}]},{"1":{"1":"enableExtraClassName","2":{"1":"closure/goog/ui/controlrenderer.js","2":260,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L260"},"3":{"1":[{"2":"<p>Updates the control&#39;s DOM by adding or removing the specified extra class\nname to/from its element.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#enableExtraClassName"}}},"4":[{"1":"control","2":{"6":{"1":[{"4":{"1":"goog.ui.Control","3":{"1":"goog.ui.Control.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>Control to be updated.</p>\n"}]}},{"1":"className","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>CSS class name to add or remove.</p>\n"}]}},{"1":"enable","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether to add or remove the class name.</p>\n"}]}}]},{"1":{"1":"getAriaRole","2":{"1":"closure/goog/ui/custombuttonrenderer.js","2":94,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/custombuttonrenderer.js#L94"},"3":{"1":[{"2":"<p>Returns the ARIA role to be applied to custom buttons.</p>\n"}]},"7":{"1":"goog.ui.CustomButtonRenderer","3":{"1":"goog.ui.CustomButtonRenderer.html#getAriaRole"}},"8":{"1":"goog.ui.ButtonRenderer","3":{"1":"goog.ui.ButtonRenderer.html#getAriaRole"}}},"5":{"2":{"6":{"1":[{"4":{"1":"goog.a11y.aria.Role","3":{"1":"goog.a11y.aria.Role.html"}}},{"9":true}]}},"3":{"1":[{"2":"<p>ARIA role.</p>\n"}]}}},{"1":{"1":"getClassForState","2":{"1":"closure/goog/ui/controlrenderer.js","2":875,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L875"},"3":{"1":[{"2":"<p>Takes a single <a href=\"goog.ui.Component.State.html\"><code>goog.ui.Component.State</code></a>, and returns the\ncorresponding CSS class name (null if none).</p>\n"}]},"5":1,"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#getClassForState"}}},"4":[{"1":"state","2":{"4":{"1":"goog.ui.Component.State","3":{"1":"goog.ui.Component.State.html"}}},"3":{"1":[{"2":"<p>Component state.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>CSS class representing the given state (undefined\nif none).</p>\n"}]}}},{"1":{"1":"getClassNames","2":{"1":"closure/goog/ui/controlrenderer.js","2":774,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L774"},"3":{"1":[{"2":"<p>Returns all CSS class names applicable to the given control, based on its\nstate.  The return value is an array of strings containing</p>\n <ol><li>the renderer-specific CSS class returned by <a href=\"goog.ui.ImagelessMenuButtonRenderer.html#getCssClass\"><code>#getCssClass</code></a>,\n       followed by\n   </li><li>the structural CSS class returned by <code>getStructuralCssClass</code> (if\n       different from the renderer-specific CSS class), followed by\n   </li><li>any state-specific classes returned by <a href=\"goog.ui.ImagelessMenuButtonRenderer.html#getClassNamesForState\"><code>#getClassNamesForState</code></a>,\n       followed by\n   </li><li>any extra classes returned by the control&#39;s <code>getExtraClassNames</code>\n       method and\n   </li><li>for IE6 and lower, additional combined classes from\n       <code>getAppliedCombinedClassNames_</code>.\n </li></ol>\n Since all controls have at least one renderer-specific CSS class name, this\n method is guaranteed to return an array of at least one element.\n"}]},"5":1,"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#getClassNames"}}},"4":[{"1":"control","2":{"6":{"1":[{"4":{"1":"goog.ui.Control","3":{"1":"goog.ui.Control.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>Control whose CSS classes are to be\nreturned.</p>\n"}]}}],"5":{"2":{"4":{"1":"Array","4":true,"5":[{"4":{"1":"string","4":true}}]}},"3":{"1":[{"2":"<p>Array of CSS class names applicable to the control.</p>\n"}]}}},{"1":{"1":"getClassNamesForState","2":{"1":"closure/goog/ui/controlrenderer.js","2":852,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L852"},"3":{"1":[{"2":"<p>Takes a bit mask of <a href=\"goog.ui.Component.State.html\"><code>goog.ui.Component.State</code></a>s, and returns an array\nof the appropriate class names representing the given state, suitable to be\napplied to the root element of a component rendered using this renderer, or\nnull if no state-specific classes need to be applied.  This default\nimplementation uses the renderer&#39;s <code>getClassForState</code> method to\ngenerate each state-specific class.</p>\n"}]},"5":1,"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#getClassNamesForState"}}},"4":[{"1":"state","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>Bit mask of component states.</p>\n"}]}}],"5":{"2":{"4":{"1":"Array","4":true,"5":[{"4":{"1":"string","4":true}}]}},"3":{"1":[{"2":"<p>Array of CSS class names representing the given\nstate.</p>\n"}]}}},{"1":{"1":"getContentElement","2":{"1":"closure/goog/ui/imagelessmenubuttonrenderer.js","2":68,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/imagelessmenubuttonrenderer.js#L68"},"3":{"1":[{"2":"<p>Takes the button&#39;s root element and returns the parent element of the\nbutton&#39;s contents.  Overrides the superclass implementation by taking\nthe nested DIV structure of menu buttons into account.</p>\n"}]},"8":{"1":"goog.ui.MenuButtonRenderer","3":{"1":"goog.ui.MenuButtonRenderer.html#getContentElement"}}},"4":[{"1":"element","2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>Root element of the button whose content element\nis to be returned.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>The button&#39;s content element.</p>\n"}]}}},{"1":{"1":"getCssClass","2":{"1":"closure/goog/ui/imagelessmenubuttonrenderer.js","2":192,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/imagelessmenubuttonrenderer.js#L192"},"3":{"1":[{"2":"<p>Returns the CSS class to be applied to the root element of components\nrendered using this renderer.</p>\n"}]},"8":{"1":"goog.ui.MenuButtonRenderer","3":{"1":"goog.ui.MenuButtonRenderer.html#getCssClass"}}},"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>Renderer-specific CSS class.</p>\n"}]}}},{"1":{"1":"getIe6ClassCombinations","2":{"1":"closure/goog/ui/controlrenderer.js","2":729,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L729"},"3":{"1":[{"2":"<p>Returns an array of combinations of classes to apply combined class names for\nin IE6 and below. See <code>IE6_CLASS_COMBINATIONS</code> for more detail. This\nmethod doesn&#39;t reference <code>IE6_CLASS_COMBINATIONS</code> so that it can be\ncompiled out, but subclasses should return their IE6_CLASS_COMBINATIONS\nstatic constant instead.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#getIe6ClassCombinations"}}},"5":{"2":{"6":{"1":[{"4":{"1":"Array","4":true,"5":[{"6":{"1":[{"4":{"1":"Array","4":true,"5":[{"4":{"1":"string","4":true}}]}},{"10":true}]}}]}},{"10":true}]}},"3":{"1":[{"2":"<p>Array of class name combinations.</p>\n"}]}}},{"1":{"1":"getKeyEventTarget","2":{"1":"closure/goog/ui/controlrenderer.js","2":701,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L701"},"3":{"1":[{"2":"<p>Returns the element within the component&#39;s DOM that should receive keyboard\nfocus (null if none).  The default implementation returns the control&#39;s root\nelement.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#getKeyEventTarget"}}},"4":[{"1":"control","2":{"6":{"1":[{"4":{"1":"goog.ui.Control","3":{"1":"goog.ui.Control.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>Control whose key event target is to be\nreturned.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>The key event target.</p>\n"}]}}},{"1":{"1":"getStateFromClass","2":{"1":"closure/goog/ui/controlrenderer.js","2":892,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L892"},"3":{"1":[{"2":"<p>Takes a single CSS class name which may represent a component state, and\nreturns the corresponding component state (0x00 if none).</p>\n"}]},"5":1,"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#getStateFromClass"}}},"4":[{"1":"className","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>CSS class name, possibly representing a component\nstate.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.ui.Component.State","3":{"1":"goog.ui.Component.State.html"}}},"3":{"1":[{"2":"<p>state Component state corresponding\nto the given CSS class (0x00 if none).</p>\n"}]}}},{"1":{"1":"getStructuralCssClass","2":{"1":"closure/goog/ui/controlrenderer.js","2":747,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L747"},"3":{"1":[{"2":"<p>Returns the name of a DOM structure-specific CSS class to be applied to the\nroot element of all components rendered or decorated using this renderer.\nUnlike the class name returned by <a href=\"goog.ui.ImagelessMenuButtonRenderer.html#getCssClass\"><code>#getCssClass</code></a>, the structural class\nname may be shared among different renderers that generate similar DOM\nstructures.  The structural class name also serves as the basis of derived\nclass names used to identify and style structural elements of the control&#39;s\nDOM, as well as the basis for state-specific class names.  The default\nimplementation returns the same class name as <a href=\"goog.ui.ImagelessMenuButtonRenderer.html#getCssClass\"><code>#getCssClass</code></a>, but\nsubclasses are expected to override this method as needed.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#getStructuralCssClass"}}},"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>DOM structure-specific CSS class name (same as the renderer-\nspecific CSS class name by default).</p>\n"}]}}},{"1":{"1":"getTooltip","2":{"1":"closure/goog/ui/buttonrenderer.js","2":169,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/buttonrenderer.js#L169"},"3":{"1":[{"2":"<p>Takes a button&#39;s root element, and returns its tooltip text.</p>\n"}]},"7":{"1":"goog.ui.ButtonRenderer","3":{"1":"goog.ui.ButtonRenderer.html#getTooltip"}}},"4":[{"1":"element","2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>The button&#39;s root element.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>The tooltip text.</p>\n"}]}}},{"1":{"1":"getValue","2":{"1":"closure/goog/ui/buttonrenderer.js","2":152,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/buttonrenderer.js#L152"},"3":{"1":[{"2":"<p>Takes a button&#39;s root element, and returns the value associated with it.\nNo-op in the base class.</p>\n"}]},"7":{"1":"goog.ui.ButtonRenderer","3":{"1":"goog.ui.ButtonRenderer.html#getValue"}}},"4":[{"1":"element","2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>The button&#39;s root element.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>The button&#39;s value (undefined if none).</p>\n"}]}}},{"1":{"1":"hasBoxStructure","2":{"1":"closure/goog/ui/imagelessmenubuttonrenderer.js","2":157,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/imagelessmenubuttonrenderer.js#L157"},"3":{"1":[{"2":"<p>Check if the button&#39;s element has a box structure.</p>\n"}]},"5":1,"8":{"1":"goog.ui.CustomButtonRenderer","3":{"1":"goog.ui.CustomButtonRenderer.html#hasBoxStructure"}}},"4":[{"1":"button","2":{"6":{"1":[{"4":{"1":"goog.ui.Button","3":{"1":"goog.ui.Button.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>Button instance whose structure is being\nchecked.</p>\n"}]}},{"1":"element","2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>Element of the button.</p>\n"}]}}],"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the element has a box structure.</p>\n"}]}}},{"1":{"1":"initializeDom","2":{"1":"closure/goog/ui/controlrenderer.js","2":378,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L378"},"3":{"1":[{"2":"<p>Initializes the control&#39;s DOM by configuring properties that can only be set\nafter the DOM has entered the document.  This implementation sets up BiDi\nand keyboard focus.  Called from <a href=\"goog.ui.Control.html#enterDocument\"><code>goog.ui.Control#enterDocument</code></a>.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#initializeDom"}}},"4":[{"1":"control","2":{"6":{"1":[{"4":{"1":"goog.ui.Control","3":{"1":"goog.ui.Control.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>Control whose DOM is to be initialized\nas it enters the document.</p>\n"}]}}]},{"1":{"1":"isFocusable","2":{"1":"closure/goog/ui/controlrenderer.js","2":503,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L503"},"3":{"1":[{"2":"<p>Returns true if the control&#39;s key event target supports keyboard focus\n(based on its <code>tabIndex</code> attribute), false otherwise.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#isFocusable"}}},"4":[{"1":"control","2":{"6":{"1":[{"4":{"1":"goog.ui.Control","3":{"1":"goog.ui.Control.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>Control whose key event target is to be\nchecked.</p>\n"}]}}],"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the control&#39;s key event target is focusable.</p>\n"}]}}},{"1":{"1":"setAllowTextSelection","2":{"1":"closure/goog/ui/controlrenderer.js","2":472,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L472"},"3":{"1":[{"2":"<p>Allows or disallows text selection within the control&#39;s DOM.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#setAllowTextSelection"}}},"4":[{"1":"element","2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>The control&#39;s root element.</p>\n"}]}},{"1":"allow","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the element should allow text selection.</p>\n"}]}}]},{"1":{"1":"setAriaLabel","2":{"1":"closure/goog/ui/controlrenderer.js","2":462,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L462"},"3":{"1":[{"2":"<p>Sets the element&#39;s ARIA label. This should be overriden by subclasses that\ndon&#39;t apply the role directly on control.element_.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#setAriaLabel"}}},"4":[{"1":"element","2":{"4":{"1":"Element"}},"3":{"1":[{"2":"<p>Element whose ARIA label is to be updated.</p>\n"}]}},{"1":"ariaLabel","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>Label to add to the element.</p>\n"}]}}]},{"1":{"1":"setAriaRole","2":{"1":"closure/goog/ui/controlrenderer.js","2":401,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L401"},"3":{"1":[{"2":"<p>Sets the element&#39;s ARIA role.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#setAriaRole"}}},"4":[{"1":"element","2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>Element to update.</p>\n"}]}},{"1":"opt_preferredRole","2":{"1":true,"6":{"1":[{"4":{"1":"goog.a11y.aria.Role","3":{"1":"goog.a11y.aria.Role.html"}}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The preferred ARIA role.</p>\n"}]}}]},{"1":{"1":"setAriaStates","2":{"1":"closure/goog/ui/controlrenderer.js","2":424,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L424"},"3":{"1":[{"2":"<p>Sets the element&#39;s ARIA attributes, including distinguishing between\nuniversally supported ARIA properties and ARIA states that are only\nsupported by certain ARIA roles. Only attributes which are initialized to be\ntrue will be set.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#setAriaStates"}}},"4":[{"1":"control","2":{"4":{"1":"goog.ui.Control","3":{"1":"goog.ui.Control.html"}}},"3":{"1":[{"2":"<p>Control whose ARIA state will be updated.</p>\n"}]}},{"1":"element","2":{"4":{"1":"Element"}},"3":{"1":[{"2":"<p>Element whose ARIA state is to be updated.</p>\n"}]}}]},{"1":{"1":"setCollapsed","2":{"1":"closure/goog/ui/buttonrenderer.js","2":203,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/buttonrenderer.js#L203"},"3":{"1":[{"2":"<p>Collapses the border on one or both sides of the button, allowing it to be\ncombined with the adjacent button(s), forming a single UI componenet with\nmultiple targets.</p>\n"}]},"5":1,"7":{"1":"goog.ui.ButtonRenderer","3":{"1":"goog.ui.ButtonRenderer.html#setCollapsed"}}},"4":[{"1":"button","2":{"6":{"1":[{"4":{"1":"goog.ui.Button","3":{"1":"goog.ui.Button.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>Button to update.</p>\n"}]}},{"1":"sides","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>Bitmap of one or more <a href=\"goog.ui.ButtonSide.html\"><code>goog.ui.ButtonSide</code></a>s for\nwhich borders should be collapsed.</p>\n"}]}}]},{"1":{"1":"setContent","2":{"1":"closure/goog/ui/controlrenderer.js","2":658,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L658"},"3":{"1":[{"2":"<p>Takes a control&#39;s root element, and sets its content to the given text\ncaption or DOM structure.  The default implementation replaces the children\nof the given element.  Renderers that create more complex DOM structures\nmust override this method accordingly.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#setContent"}}},"4":[{"1":"element","2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>The control&#39;s root element.</p>\n"}]}},{"1":"content","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"Node"}},{"4":{"1":"Array","4":true,"5":[{"4":{"1":"Node"}}]}},{"4":{"1":"NodeList","5":[{"4":{"1":"Node"}}]}},{"10":true}]}},"3":{"1":[{"2":"<p>Text caption or DOM structure to be\nset as the control&#39;s content. The DOM nodes will not be cloned, they\nwill only moved under the content element of the control.</p>\n"}]}}]},{"1":{"1":"setFocusable","2":{"1":"closure/goog/ui/controlrenderer.js","2":522,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L522"},"3":{"1":[{"2":"<p>Updates the control&#39;s key event target to make it focusable or non-focusable\nvia its <code>tabIndex</code> attribute.  Does nothing if the control doesn&#39;t\nsupport the <code>FOCUSED</code> state, or if it has no key event target.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#setFocusable"}}},"4":[{"1":"control","2":{"6":{"1":[{"4":{"1":"goog.ui.Control","3":{"1":"goog.ui.Control.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>Control whose key event target is to be\nupdated.</p>\n"}]}},{"1":"focusable","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether to enable keyboard focus support on the\ncontrol&#39;s key event target.</p>\n"}]}}]},{"1":{"1":"setRightToLeft","2":{"1":"closure/goog/ui/controlrenderer.js","2":488,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L488"},"3":{"1":[{"2":"<p>Applies special styling to/from the control&#39;s element if it is rendered\nright-to-left, and removes it if it is rendered left-to-right.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#setRightToLeft"}}},"4":[{"1":"element","2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>The control&#39;s root element.</p>\n"}]}},{"1":"rightToLeft","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the component is rendered\nright-to-left.</p>\n"}]}}]},{"1":{"1":"setState","2":{"1":"closure/goog/ui/controlrenderer.js","2":572,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L572"},"3":{"1":[{"2":"<p>Updates the appearance of the control in response to a state change.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#setState"}}},"4":[{"1":"control","2":{"6":{"1":[{"4":{"1":"goog.ui.Control","3":{"1":"goog.ui.Control.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>Control instance to update.</p>\n"}]}},{"1":"state","2":{"4":{"1":"goog.ui.Component.State","3":{"1":"goog.ui.Component.State.html"}}},"3":{"1":[{"2":"<p>State to enable or disable.</p>\n"}]}},{"1":"enable","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the control is entering or exiting the state.</p>\n"}]}}]},{"1":{"1":"setTooltip","2":{"1":"closure/goog/ui/buttonrenderer.js","2":181,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/buttonrenderer.js#L181"},"3":{"1":[{"2":"<p>Takes a button&#39;s root element and a tooltip string, and updates the element\nwith the new tooltip.</p>\n"}]},"5":1,"7":{"1":"goog.ui.ButtonRenderer","3":{"1":"goog.ui.ButtonRenderer.html#setTooltip"}}},"4":[{"1":"element","2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>The button&#39;s root element.</p>\n"}]}},{"1":"tooltip","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>New tooltip text.</p>\n"}]}}]},{"1":{"1":"setValue","2":{"1":"closure/goog/ui/buttonrenderer.js","2":161,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/buttonrenderer.js#L161"},"3":{"1":[{"2":"<p>Takes a button&#39;s root element and a value, and updates the element to reflect\nthe new value.  No-op in the base class.</p>\n"}]},"7":{"1":"goog.ui.ButtonRenderer","3":{"1":"goog.ui.ButtonRenderer.html#setValue"}}},"4":[{"1":"element","2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>The button&#39;s root element.</p>\n"}]}},{"1":"value","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>New value.</p>\n"}]}}]},{"1":{"1":"setVisible","2":{"1":"closure/goog/ui/controlrenderer.js","2":556,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/controlrenderer.js#L556"},"3":{"1":[{"2":"<p>Shows or hides the element.</p>\n"}]},"7":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#setVisible"}}},"4":[{"1":"element","2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>Element to update.</p>\n"}]}},{"1":"visible","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether to show the element.</p>\n"}]}}]},{"1":{"1":"updateAriaState","2":{"1":"closure/goog/ui/buttonrenderer.js","2":87,"3":"https://github.com/google/closure-library/blob/master/closure/goog/ui/buttonrenderer.js#L87"},"3":{"1":[{"2":"<p>Updates the button&#39;s ARIA (accessibility) state if the button is being\ntreated as a checkbox. Also makes sure that attributes which aren&#39;t\nsupported by buttons aren&#39;t being added.</p>\n"}]},"5":1,"7":{"1":"goog.ui.ButtonRenderer","3":{"1":"goog.ui.ButtonRenderer.html#updateAriaState"}},"8":{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html#updateAriaState"}}},"4":[{"1":"element","2":{"6":{"1":[{"4":{"1":"Element"}},{"10":true}]}},"3":{"1":[{"2":"<p>Element whose ARIA state is to be updated.</p>\n"}]}},{"1":"state","2":{"4":{"1":"goog.ui.Component.State","3":{"1":"goog.ui.Component.State.html"}}},"3":{"1":[{"2":"<p>Component state being enabled or\ndisabled.</p>\n"}]}},{"1":"enable","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the state is being enabled or disabled.</p>\n"}]}}]}],"18":[{"1":"goog.ui.MenuButtonRenderer","3":{"1":"goog.ui.MenuButtonRenderer.html"}},{"1":"goog.ui.CustomButtonRenderer","3":{"1":"goog.ui.CustomButtonRenderer.html"}},{"1":"goog.ui.ButtonRenderer","3":{"1":"goog.ui.ButtonRenderer.html"}},{"1":"goog.ui.ControlRenderer","3":{"1":"goog.ui.ControlRenderer.html"}}],"21":{"1":{"1":"goog.ui.ImagelessMenuButtonRenderer","3":{"1":"goog.ui.ImagelessMenuButtonRenderer.html"}},"2":4},"23":"goog.ui.ImagelessMenuButtonRenderer.html","24":"goog.ui.ImagelessMenuButtonRenderer"}]}}