[null,[[["goog.labs.events.NonDisposableEventTarget",null,null,null,[null,69,null,[null,null,"closure/goog/labs/events/nondisposableeventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/labs/events/nondisposableeventtarget.js#L69"]],null,[[[null,"<p>An implementation of <code>goog.events.Listenable</code> with full W3C\nEventTarget-like support (capture/bubble mechanism, stopping event\npropagation, preventing default actions).</p>\n<p>You may subclass this class to turn your class into a Listenable.</p>\n<p>Unlike <a href=\"goog.events.EventTarget.html\"><code>goog.events.EventTarget</code></a>, this class does not implement\n<a href=\"goog.disposable.IDisposable.html\"><code>goog.disposable.IDisposable</code></a>. Instances of this class that have had\nIt is not necessary to call <a href=\"goog.dispose.html\"><code>goog.dispose</code></a>\nor <a href=\"goog.labs.events.NonDisposableEventTarget.html#removeAllListeners\"><code>#removeAllListeners</code></a> in order for an instance of this class\nto be garbage collected.</p>\n<p>Unless propagation is stopped, an event dispatched by an\nEventTarget will bubble to the parent returned by\n<code>getParentEventTarget</code>. To set the parent, call\n<code>setParentEventTarget</code>. Subclasses that don&#39;t support\nchanging the parent can override the setter to throw an error.</p>\n<p>Example usage:</p>\n <pre>\n   var source &#61; new goog.labs.events.NonDisposableEventTarget();\n   function handleEvent(e) {\n     alert(&#39;Type: &#39; &#43; e.type &#43; &#39;; Target: &#39; &#43; e.target);\n   }\n   source.listen(&#39;foo&#39;, handleEvent);\n   source.dispatchEvent(&#39;foo&#39;); // will call handleEvent\n </pre>\n<p>TODO(chrishenry|johnlenz): Consider a more modern, less viral\n(not based on inheritance) replacement of goog.Disposable, which will allow\ngoog.events.EventTarget to not be disposable.</p>\n"]]],[null,null,null,1],null,[],null,[],[],[["NonDisposableEventTarget",[null,69,null,[null,null,"closure/goog/labs/events/nondisposableeventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/labs/events/nondisposableeventtarget.js#L69"]],[[[null,"<p>An implementation of <code>goog.events.Listenable</code> with full W3C\nEventTarget-like support (capture/bubble mechanism, stopping event\npropagation, preventing default actions).</p>\n<p>You may subclass this class to turn your class into a Listenable.</p>\n<p>Unlike <a href=\"goog.events.EventTarget.html\"><code>goog.events.EventTarget</code></a>, this class does not implement\n<a href=\"goog.disposable.IDisposable.html\"><code>goog.disposable.IDisposable</code></a>. Instances of this class that have had\nIt is not necessary to call <a href=\"goog.dispose.html\"><code>goog.dispose</code></a>\nor <a href=\"goog.labs.events.NonDisposableEventTarget.html#removeAllListeners\"><code>#removeAllListeners</code></a> in order for an instance of this class\nto be garbage collected.</p>\n<p>Unless propagation is stopped, an event dispatched by an\nEventTarget will bubble to the parent returned by\n<code>getParentEventTarget</code>. To set the parent, call\n<code>setParentEventTarget</code>. Subclasses that don&#39;t support\nchanging the parent can override the setter to throw an error.</p>\n<p>Example usage:</p>\n <pre>\n   var source &#61; new goog.labs.events.NonDisposableEventTarget();\n   function handleEvent(e) {\n     alert(&#39;Type: &#39; &#43; e.type &#43; &#39;; Target: &#39; &#43; e.target);\n   }\n   source.listen(&#39;foo&#39;, handleEvent);\n   source.dispatchEvent(&#39;foo&#39;); // will call handleEvent\n </pre>\n<p>TODO(chrishenry|johnlenz): Consider a more modern, less viral\n(not based on inheritance) replacement of goog.Disposable, which will allow\ngoog.events.EventTarget to not be disposable.</p>\n"]]],null,null,null,null,null,[],[]],[],1,[],null,[]],[[["dispatchEvent",[null,115,null,[null,null,"closure/goog/labs/events/nondisposableeventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/labs/events/nondisposableeventtarget.js#L115"]],[[[null,"<p>Dispatches an event (or event like object) and calls all listeners\nlistening for events of this type. The type of the event is decided by the\ntype property on the event object.</p>\n<p>If any of the listeners returns false OR calls preventDefault then this\nfunction will return false.  If one of the capture listeners calls\nstopPropagation, then the bubble listeners won&#39;t fire.</p>\n"]]],null,null,null,null,null,[["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html#dispatchEvent"]],null,[]]],[]],[],null,[["e",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["Object",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Event object.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>If anyone called preventDefault on the event object (or\nif any of the listeners returns false) this will also return false.</p>\n"]]]],[]],[["fireListeners",[null,178,null,[null,null,"closure/goog/labs/events/nondisposableeventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/labs/events/nondisposableeventtarget.js#L178"]],[[[null,"<p>Fires all registered listeners in this listenable for the given\ntype and capture mode, passing them the given eventObject. This\ndoes not perform actual capture/bubble. Only implementors of the\ninterface should be using this.</p>\n"]]],null,null,null,null,null,[["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html#fireListeners"]],null,[]]],[]],[],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The type of the\nlisteners to fire.</p>\n"]]]],["capture",[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>The capture mode of the listeners to fire.</p>\n"]]]],["eventObject",[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The event object to fire.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether all listeners succeeded without\nattempting to prevent default behavior. If any listener returns\nfalse or called goog.events.Event#preventDefault, this returns\nfalse.</p>\n"]]]],[]],[["getListener",[null,217,null,[null,null,"closure/goog/labs/events/nondisposableeventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/labs/events/nondisposableeventtarget.js#L217"]],[[[null,"<p>Gets the goog.events.ListenableKey for the event or null if no such\nlistener is in use.</p>\n"]]],null,null,null,null,null,[["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html#getListener"]],null,[]]],[]],[],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The name of the event\nwithout the &#39;on&#39; prefix.</p>\n"]]]],["listener",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[null,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>The\nlistener function to get.</p>\n"]]]],["capture",[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether the listener is a capturing listener.</p>\n"]]]],["opt_listenerScope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call the\nlistener.</p>\n"]]]]],[null,[null,null,null,null,null,[[[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>the found listener or null if not found.</p>\n"]]]],[]],[["getListeners",[null,210,null,[null,null,"closure/goog/labs/events/nondisposableeventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/labs/events/nondisposableeventtarget.js#L210"]],[[[null,"<p>Gets all listeners in this listenable for the given type and\ncapture mode.</p>\n"]]],null,null,null,null,null,[["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html#getListeners"]],null,[]]],[]],[],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[]]]]]],[[[null,"<p>The type of the listeners to fire.</p>\n"]]]],["capture",[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>The capture mode of the listeners to fire.</p>\n"]]]]],[null,[null,null,null,["Array",null,null,1,[[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]]]]],[[[null,"<p>An array of registered\nlisteners.</p>\n"]]]],[]],[["getParentEventTarget",[null,97,null,[null,null,"closure/goog/labs/events/nondisposableeventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/labs/events/nondisposableeventtarget.js#L97"]],[[[null,"<p>Returns the parent of this event target to use for capture/bubble\nmechanism.</p>\n<p>NOTE(chrishenry): The name reflects the original implementation of\ncustom event target (<code>goog.events.EventTarget</code>). We decided\nthat changing the name is not worth it.</p>\n"]]],null,null,null,null,null,[["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html#getParentEventTarget"]],null,[]]],[]],[],null,[],[null,[null,null,null,null,null,[[[null,null,null,["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The parent EventTarget or null if\nthere is no parent.</p>\n"]]]],[]],[["hasListener",[null,225,null,[null,null,"closure/goog/labs/events/nondisposableeventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/labs/events/nondisposableeventtarget.js#L225"]],[[[null,"<p>Whether there is any active listeners matching the specified\nsignature. If either the type or capture parameters are\nunspecified, the function will match on the remaining criteria.</p>\n"]]],null,null,null,null,null,[["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html#hasListener"]],null,[]]],[]],[],null,[["opt_type",[1,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Event type.</p>\n"]]]],["opt_capture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Whether to check for capture or bubble\nlisteners.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether there is any active listeners matching\nthe requested type and/or capture phase.</p>\n"]]]],[]],[["listen",[null,137,null,[null,null,"closure/goog/labs/events/nondisposableeventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/labs/events/nondisposableeventtarget.js#L137"]],[[[null,"<p>Adds an event listener. A listener can only be added once to an\nobject and if it is added again the key for the listener is\nreturned. Note that if the existing listener is a one-off listener\n(registered via listenOnce), it will no longer be a one-off\nlistener after a call to listen().</p>\n"]]],null,null,null,null,null,[["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html#listen"]],null,[]]],[]],[],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The event type id.</p>\n"]]]],["listener",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[null,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>Callback\nmethod.</p>\n"]]]],["opt_useCapture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Whether to fire in capture phase\n(defaults to false).</p>\n"]]]],["opt_listenerScope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call the\nlistener.</p>\n"]]]]],[null,[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]],[[[null,"<p>Unique key for the listener.</p>\n"]]]],[]],[["listenOnce",[null,147,null,[null,null,"closure/goog/labs/events/nondisposableeventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/labs/events/nondisposableeventtarget.js#L147"]],[[[null,"<p>Adds an event listener that is removed automatically after the\nlistener fired once.</p>\n<p>If an existing listener already exists, listenOnce will do\nnothing. In particular, if the listener was previously registered\nvia listen(), listenOnce() will not turn the listener into a\none-off listener. Similarly, if there is already an existing\none-off listener, listenOnce does not modify the listeners (it is\nstill a once listener).</p>\n"]]],null,null,null,null,null,[["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html#listenOnce"]],null,[]]],[]],[],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The event type id.</p>\n"]]]],["listener",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[null,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>Callback\nmethod.</p>\n"]]]],["opt_useCapture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Whether to fire in capture phase\n(defaults to false).</p>\n"]]]],["opt_listenerScope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call the\nlistener.</p>\n"]]]]],[null,[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]],[[[null,"<p>Unique key for the listener.</p>\n"]]]],[]],[["removeAllListeners",[null,171,null,[null,null,"closure/goog/labs/events/nondisposableeventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/labs/events/nondisposableeventtarget.js#L171"]],[[[null,"<p>Removes all listeners from this listenable. If type is specified,\nit will only remove listeners of the particular type. otherwise all\nregistered listeners will be removed.</p>\n"]]],null,null,null,null,null,[["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html#removeAllListeners"]],null,[]]],[]],[],null,[["opt_type",[1,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Type of event to remove, default is to\nremove all types.</p>\n"]]]]],[null,[null,null,null,["number",null,null,1,[]]],[[[null,"<p>Number of listeners removed.</p>\n"]]]],[]],[["setParentEventTarget",[null,108,null,[null,null,"closure/goog/labs/events/nondisposableeventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/labs/events/nondisposableeventtarget.js#L108"]],[[[null,"<p>Sets the parent of this event target to use for capture/bubble\nmechanism.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["parent",[null,null,null,null,null,[[[null,null,null,["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Parent listenable (null if none).</p>\n"]]]]],null,[]],[["unlisten",[null,156,null,[null,null,"closure/goog/labs/events/nondisposableeventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/labs/events/nondisposableeventtarget.js#L156"]],[[[null,"<p>Removes an event listener which was added with listen() or listenOnce().</p>\n"]]],null,null,null,null,null,[["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html#unlisten"]],null,[]]],[]],[],null,[["type",[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.events.EventId",null,[null,null,[null,null,"goog.events.EventId.html"]],null,[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]]]]]],[[[null,"<p>The event type id.</p>\n"]]]],["listener",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,null,null,null,null,[[[null,null,null,["EVENTOBJ",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]],[null,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>Callback\nmethod.</p>\n"]]]],["opt_useCapture",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Whether to fire in capture phase\n(defaults to false).</p>\n"]]]],["opt_listenerScope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call\nthe listener.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether any listener was removed.</p>\n"]]]],[]],[["unlistenByKey",[null,164,null,[null,null,"closure/goog/labs/events/nondisposableeventtarget.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/labs/events/nondisposableeventtarget.js#L164"]],[[[null,"<p>Removes an event listener which was added with listen() by the key\nreturned by listen().</p>\n"]]],null,null,null,null,null,[["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html#unlistenByKey"]],null,[]]],[]],[],null,[["key",[null,null,null,["goog.events.ListenableKey",null,[null,null,[null,null,"goog.events.ListenableKey.html"]],null,[]]],[[[null,"<p>The key returned by\nlisten() or listenOnce().</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether any listener was removed.</p>\n"]]]],[]]],[],null,[],[["goog.events.Listenable",null,[null,null,[null,null,"goog.events.Listenable.html"]],null,[]]],[],[["goog.labs.events.NonDisposableEventTarget",null,[null,null,[null,null,"goog.labs.events.NonDisposableEventTarget.html"]],null,[]],null,null,1],null,"goog.labs.events.NonDisposableEventTarget.html","goog.labs.events.NonDisposableEventTarget",[],[],[],[]]]]]