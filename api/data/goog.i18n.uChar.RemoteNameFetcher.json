{"2":{"1":[{"1":"goog.i18n.uChar.RemoteNameFetcher","5":{"1":"closure/goog/i18n/uchar/remotenamefetcher.js","2":56,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/uchar/remotenamefetcher.js#L56"},"6":{"2":[{"1":"RemoteNameFetcher.RequestType_","2":"goog.i18n.uChar.RemoteNameFetcher.RequestType_.html","3":{"1":[{"2":"<p>Enum for the different request types.</p>\n"}]}}]},"7":{"1":[{"2":"<p>Builds the RemoteNameFetcher object. This object retrieves codepoint names\nfrom a remote data source.</p>\n"}]},"8":{"4":true},"14":{"1":{"1":"RemoteNameFetcher","2":{"1":"closure/goog/i18n/uchar/remotenamefetcher.js","2":56,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/uchar/remotenamefetcher.js#L56"},"3":{"1":[{"2":"<p>Builds the RemoteNameFetcher object. This object retrieves codepoint names\nfrom a remote data source.</p>\n"}]}},"3":true,"4":[{"1":"dataSourceUri","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>URI to the data source.</p>\n"}]}}]},"15":[{"1":{"1":"addOnDisposeCallback","2":{"1":"closure/goog/disposable/disposable.js","2":216,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L216"},"3":{"1":[{"2":"<p>Invokes a callback function when this object is disposed. Callbacks are\ninvoked in the order in which they were added. If a callback is added to\nan already disposed Disposable, it will be called immediately.</p>\n"}]},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#addOnDisposeCallback"}}},"2":["T"],"4":[{"1":"callback","2":{"3":{"2":{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}},"4":{"8":true}}},"3":{"1":[{"2":"<p>The callback function.</p>\n"}]}},{"1":"opt_scope","2":{"1":true,"6":{"1":[{"4":{"1":"T"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>An optional scope to call the callback in.</p>\n"}]}}]},{"1":{"1":"dispose","2":{"1":"closure/goog/disposable/idisposable.js","2":39,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/idisposable.js#L39"},"3":{"1":[{"2":"<p>Disposes of the object and its resources.</p>\n"}]},"8":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#dispose"}}},"5":{"3":{"1":[{"2":"<p>Nothing.</p>\n"}]}}},{"1":{"1":"disposeInternal","2":{"1":"closure/goog/i18n/uchar/remotenamefetcher.js","2":125,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/uchar/remotenamefetcher.js#L125"},"3":{"1":[{"2":"<p>Deletes or nulls out any references to COM objects, DOM nodes, or other\ndisposable objects. Classes that extend <code>goog.Disposable</code> should\noverride this method.\nNot reentrant. To avoid calling it twice, it must only be called from the\nsubclass&#39; <code>disposeInternal</code> method. Everywhere else the public\n<code>dispose</code> method must be used.\nFor example:</p>\n <pre>\n   mypackage.MyClass &#61; function() {\n     mypackage.MyClass.base(this, &#39;constructor&#39;);\n     // Constructor logic specific to MyClass.\n     ...\n   };\n   goog.inherits(mypackage.MyClass, goog.Disposable);\n\n   mypackage.MyClass.prototype.disposeInternal &#61; function() {\n     // Dispose logic specific to MyClass.\n     ...\n     // Call superclass&#39;s disposeInternal at the end of the subclass&#39;s, like\n     // in C&#43;&#43;, to avoid hard-to-catch issues.\n     mypackage.MyClass.base(this, &#39;disposeInternal&#39;);\n   };\n </pre>\n"}]},"5":1,"8":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#disposeInternal"}}}},{"1":{"1":"getDisposed","2":{"1":"closure/goog/disposable/disposable.js","2":163,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L163"},"3":{},"4":{"1":[{"2":"<p>Use <a href=\"goog.i18n.uChar.RemoteNameFetcher.html#isDisposed\"><code>#isDisposed</code></a> instead.</p>\n"}]},"6":{"2":true},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#getDisposed"}}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the object has been disposed of.</p>\n"}]}}},{"1":{"1":"getName","2":{"1":"closure/goog/i18n/uchar/remotenamefetcher.js","2":167,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/uchar/remotenamefetcher.js#L167"},"3":{"1":[{"2":"<p>Retrieves the name of a particular character.</p>\n"}]},"9":[{"1":"goog.i18n.uChar.NameFetcher","3":{"1":"goog.i18n.uChar.NameFetcher.html#getName"}}]},"4":[{"1":"character","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The character to retrieve.</p>\n"}]}},{"1":"callback","2":{"3":{"3":[{"6":{"1":[{"4":{"1":"string","4":true}},{"10":true}]}}],"4":{"8":true}}},"3":{"1":[{"2":"<p>The callback function called when the\nname retrieval is complete, contains a single string parameter with the\ncodepoint name, this parameter will be null if the character name is not\ndefined.</p>\n"}]}}]},{"1":{"1":"isDisposed","2":{"1":"closure/goog/disposable/idisposable.js","2":45,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/idisposable.js#L45"},"3":{},"8":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#isDisposed"}}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the object has been disposed of.</p>\n"}]}}},{"1":{"1":"isNameAvailable","2":{"1":"closure/goog/i18n/uchar/remotenamefetcher.js","2":285,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/uchar/remotenamefetcher.js#L285"},"3":{"1":[{"2":"<p>Tests whether the name of a given character is available to be retrieved by\nthe getName() function.</p>\n"}]},"9":[{"1":"goog.i18n.uChar.NameFetcher","3":{"1":"goog.i18n.uChar.NameFetcher.html#isNameAvailable"}}]},"4":[{"1":"character","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The character to test.</p>\n"}]}}],"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>True if the fetcher can retrieve or has a name available\nfor the given character.</p>\n"}]}}},{"1":{"1":"prefetch","2":{"1":"closure/goog/i18n/uchar/remotenamefetcher.js","2":133,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/uchar/remotenamefetcher.js#L133"},"3":{"1":[{"2":"<p>Retrieves the names of a given set of characters and stores them in a cache\nfor fast retrieval. Offline implementations can simply provide an empty\nimplementation.</p>\n"}]},"9":[{"1":"goog.i18n.uChar.NameFetcher","3":{"1":"goog.i18n.uChar.NameFetcher.html#prefetch"}}]},"4":[{"1":"characters","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The list of characters in base 88 to fetch. These\nlists are stored by category and subcategory in the\ngoog.i18n.charpickerdata class.</p>\n"}]}}]},{"1":{"1":"registerDisposable","2":{"1":"closure/goog/disposable/disposable.js","2":203,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L203"},"3":{"1":[{"2":"<p>Associates a disposable object with this object so that they will be disposed\ntogether.</p>\n"}]},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#registerDisposable"}}},"4":[{"1":"disposable","2":{"6":{"1":[{"4":{"1":"goog.disposable.IDisposable","3":{"1":"goog.disposable.IDisposable.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>that will be disposed when\nthis object is disposed.</p>\n"}]}}]}],"16":[{"1":{"1":"creationStack","2":{"1":"closure/goog/disposable/disposable.js","2":147,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L147"},"3":{"1":[{"2":"<p>If monitoring the goog.Disposable instances is enabled, stores the creation\nstack trace of the Disposable instance.</p>\n"}]},"6":{"1":true},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#creationStack"}}},"2":{"4":{"1":"string","4":true}}}],"18":[{"1":"goog.Disposable","3":{"1":"goog.Disposable.html"}}],"19":[{"1":"goog.disposable.IDisposable","3":{"1":"goog.disposable.IDisposable.html"}},{"1":"goog.i18n.uChar.NameFetcher","3":{"1":"goog.i18n.uChar.NameFetcher.html"}}],"21":{"1":{"1":"goog.i18n.uChar.RemoteNameFetcher","3":{"1":"goog.i18n.uChar.RemoteNameFetcher.html"}},"2":4},"23":"goog.i18n.uChar.RemoteNameFetcher.html","24":"goog.i18n.uChar.RemoteNameFetcher"}]}}