{"2":{"1":[{"1":"goog.structs.TreeNode","5":{"1":"closure/goog/structs/treenode.js","2":41,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L41"},"7":{"1":[{"2":"<p>Generic tree node data structure with arbitrary number of child nodes.\nIt is possible to create a dynamic tree structure by overriding\n<a href=\"goog.structs.TreeNode.html#getParent\"><code>#getParent</code></a> and <a href=\"goog.structs.TreeNode.html#getChildren\"><code>#getChildren</code></a> in a subclass. All other getters\nwill automatically work.</p>\n"}]},"8":{},"12":[{"1":{"1":"TreeNode.findCommonAncestor","2":{"1":"closure/goog/structs/treenode.js","2":244,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L244"},"3":{"1":[{"2":"<p>Finds the deepest common ancestor of the given nodes. The concept of\nancestor is not strict in this case, it includes the node itself.</p>\n"}]}},"2":["KEY","VALUE"],"4":[{"1":"var_args","2":{"2":true,"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>The nodes.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"4":{"1":"KEY"}},{"4":{"1":"VALUE"}}]}},{"10":true}]}},"3":{"1":[{"2":"<p>The common ancestor of the nodes\nor null if they are from different trees.</p>\n"}]}}}],"14":{"1":{"1":"TreeNode","2":{"1":"closure/goog/structs/treenode.js","2":41,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L41"},"3":{"1":[{"2":"<p>Generic tree node data structure with arbitrary number of child nodes.\nIt is possible to create a dynamic tree structure by overriding\n<a href=\"goog.structs.TreeNode.html#getParent\"><code>#getParent</code></a> and <a href=\"goog.structs.TreeNode.html#getChildren\"><code>#getChildren</code></a> in a subclass. All other getters\nwill automatically work.</p>\n"}]}},"2":["KEY","VALUE"],"3":true,"4":[{"1":"key","2":{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},"3":{"1":[{"2":"<p>Key.</p>\n"}]}},{"1":"value","2":{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}},"3":{"1":[{"2":"<p>Value.</p>\n"}]}}]},"15":[{"1":{"1":"addChild","2":{"1":"closure/goog/structs/treenode.js","2":362,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L362"},"3":{"1":[{"2":"<p>Appends a child node to this node.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#addChild"}}},"4":[{"1":"child","2":{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>Orphan child node.</p>\n"}]}}]},{"1":{"1":"addChildAt","2":{"1":"closure/goog/structs/treenode.js","2":372,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L372"},"3":{"1":[{"2":"<p>Inserts a child node at the given index.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#addChildAt"}}},"4":[{"1":"child","2":{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>Orphan child node.</p>\n"}]}},{"1":"index","2":{"4":{"1":"number","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"4":true}},"3":{"1":[{"2":"<p>The position to insert at.</p>\n"}]}}]},{"1":{"1":"clone","2":{"1":"closure/goog/structs/treenode.js","2":71,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L71"},"3":{"1":[{"2":"<p>Clones a node and returns a new node.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#clone"}}},"5":{"2":{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"}}},"3":{"1":[{"2":"<p>Clone of the tree node without its parent\nand child nodes. The key and the value are copied by reference.</p>\n"}]}}},{"1":{"1":"contains","2":{"1":"closure/goog/structs/treenode.js","2":227,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L227"},"3":{"1":[{"2":"<p>Tells whether this node is the ancestor of the given node.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#contains"}}},"4":[{"1":"node","2":{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>A node.</p>\n"}]}}],"5":{"2":{"4":{"1":"boolean","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"},"4":true}},"3":{"1":[{"2":"<p>Whether this node is the ancestor of <code>node</code>.</p>\n"}]}}},{"1":{"1":"deepClone","2":{"1":"closure/goog/structs/treenode.js","2":79,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L79"},"3":{},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#deepClone"}}},"5":{"2":{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"}}},"3":{"1":[{"2":"<p>Clone of the subtree with this node as root.</p>\n"}]}}},{"1":{"1":"forEachChild","2":{"1":"closure/goog/structs/treenode.js","2":303,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L303"},"3":{"1":[{"2":"<p>Traverses all child nodes.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#forEachChild"}}},"2":["THIS"],"4":[{"1":"f","2":{"3":{"2":{"6":{"1":[{"4":{"1":"THIS"}},{"10":true}]}},"3":[{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}},{"4":{"1":"number","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"4":true}},{"4":{"1":"Array","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"},"4":true,"5":[{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}}]}}],"4":{"8":true}}},"3":{"1":[{"2":"<p>Callback function. It\ntakes the node, its index and the array of all child nodes as arguments.</p>\n"}]}},{"1":"opt_this","2":{"1":true,"6":{"1":[{"4":{"1":"THIS"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The object to be used as the value of <code>this</code>\nwithin <code>f</code>.</p>\n"}]}}]},{"1":{"1":"forEachDescendant","2":{"1":"closure/goog/structs/treenode.js","2":316,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L316"},"3":{"1":[{"2":"<p>Traverses all child nodes recursively in preorder.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#forEachDescendant"}}},"2":["THIS"],"4":[{"1":"f","2":{"3":{"2":{"6":{"1":[{"4":{"1":"THIS"}},{"10":true}]}},"3":[{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}}],"4":{"8":true}}},"3":{"1":[{"2":"<p>Callback\nfunction.  It takes the node as argument.</p>\n"}]}},{"1":"opt_this","2":{"1":true,"6":{"1":[{"4":{"1":"THIS"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The object to be used as the value of <code>this</code>\nwithin <code>f</code>.</p>\n"}]}}]},{"1":{"1":"getAncestors","2":{"1":"closure/goog/structs/treenode.js","2":170,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L170"},"3":{},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#getAncestors"}}},"5":{"2":{"4":{"1":"Array","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"},"4":true,"5":[{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}}]}},"3":{"1":[{"2":"<p>All ancestor nodes in\nbottom-up order.</p>\n"}]}}},{"1":{"1":"getChildAt","2":{"1":"closure/goog/structs/treenode.js","2":139,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L139"},"3":{"1":[{"2":"<p>Gets the child node of this node at the given index.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#getChildAt"}}},"4":[{"1":"index","2":{"4":{"1":"number","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"4":true}},"3":{"1":[{"2":"<p>Child index.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"4":{"1":"KEY"}},{"4":{"1":"VALUE"}}]}},{"10":true}]}},"3":{"1":[{"2":"<p>The node at the given index or\nnull if not found.</p>\n"}]}}},{"1":{"1":"getChildCount","2":{"1":"closure/goog/structs/treenode.js","2":147,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L147"},"3":{},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#getChildCount"}}},"5":{"2":{"4":{"1":"number","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"4":true}},"3":{"1":[{"2":"<p>The number of children.</p>\n"}]}}},{"1":{"1":"getChildren","2":{"1":"closure/goog/structs/treenode.js","2":128,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L128"},"3":{},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#getChildren"}}},"5":{"2":{"4":{"1":"Array","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"},"4":true,"5":[{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}}]}},"3":{"1":[{"2":"<p>Immutable child nodes.</p>\n"}]}}},{"1":{"1":"getDepth","2":{"1":"closure/goog/structs/treenode.js","2":155,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L155"},"3":{},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#getDepth"}}},"5":{"2":{"4":{"1":"number","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"4":true}},"3":{"1":[{"2":"<p>The number of ancestors of the node.</p>\n"}]}}},{"1":{"1":"getKey","2":{"1":"closure/goog/structs/node.js","2":52,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/node.js#L52"},"3":{"1":[{"2":"<p>Gets the key.</p>\n"}]},"7":{"1":"goog.structs.Node","3":{"1":"goog.structs.Node.html#getKey"}}},"5":{"2":{"4":{"1":"KEY"}},"3":{"1":[{"2":"<p>The key.</p>\n"}]}}},{"1":{"1":"getNodeByKey","2":{"1":"closure/goog/structs/treenode.js","2":279,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L279"},"3":{"1":[{"2":"<p>Returns a node whose key matches the given one in the hierarchy rooted at\nthis node. The hierarchy is searched using an in-order traversal.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#getNodeByKey"}}},"4":[{"1":"key","2":{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},"3":{"1":[{"2":"<p>The key to search for.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"4":{"1":"KEY"}},{"4":{"1":"VALUE"}}]}},{"10":true}]}},"3":{"1":[{"2":"<p>The node with the given key, or\nnull if no node with the given key exists in the hierarchy.</p>\n"}]}}},{"1":{"1":"getParent","2":{"1":"closure/goog/structs/treenode.js","2":90,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L90"},"3":{},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#getParent"}}},"5":{"2":{"6":{"1":[{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"4":{"1":"KEY"}},{"4":{"1":"VALUE"}}]}},{"10":true}]}},"3":{"1":[{"2":"<p>Parent node or null if it has no\nparent.</p>\n"}]}}},{"1":{"1":"getRoot","2":{"1":"closure/goog/structs/treenode.js","2":186,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L186"},"3":{},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#getRoot"}}},"5":{"2":{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>The root of the tree structure,\ni.e. the farthest ancestor of the node or the node itself if it has no\nparents.</p>\n"}]}}},{"1":{"1":"getSubtreeKeys","2":{"1":"closure/goog/structs/treenode.js","2":210,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L210"},"3":{"1":[{"2":"<p>Builds a nested array structure from the node keys in this node&#39;s subtree to\nfacilitate testing tree operations that change the hierarchy.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#getSubtreeKeys"}}},"5":{"2":{"4":{"1":"Array","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array"},"4":true,"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>The structure of this node&#39;s descendants as nested\narray of node keys. The number of unclosed opening brackets up to a\nparticular node is proportional to the indentation of that node in the\ngraphical representation of the tree. Example:\n</p><pre>\nthis\n|- child1\n|  L- grandchild\nL- child2\n</pre>\nis represented as [&#39;child1&#39;, [&#39;grandchild&#39;], &#39;child2&#39;].\n"}]}}},{"1":{"1":"getValue","2":{"1":"closure/goog/structs/node.js","2":61,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/node.js#L61"},"3":{"1":[{"2":"<p>Gets the value.</p>\n"}]},"7":{"1":"goog.structs.Node","3":{"1":"goog.structs.Node.html#getValue"}}},"5":{"2":{"4":{"1":"VALUE"}},"3":{"1":[{"2":"<p>The value.</p>\n"}]}}},{"1":{"1":"isLastChild","2":{"1":"closure/goog/structs/treenode.js","2":119,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L119"},"3":{"1":[{"2":"<p>Tells if the node is the last child of its parent. This method helps how to\nconnect the tree nodes with lines: L shapes should be used before the last\nchildren and |- shapes before the rest. Schematic tree visualization:</p>\n <pre>\n Node1\n |-Node2\n | L-Node3\n |   |-Node4\n |   L-Node5\n L-Node6\n </pre>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#isLastChild"}}},"5":{"2":{"4":{"1":"boolean","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"},"4":true}},"3":{"1":[{"2":"<p>Whether the node has parent and is the last child of it.</p>\n"}]}}},{"1":{"1":"isLeaf","2":{"1":"closure/goog/structs/treenode.js","2":98,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L98"},"3":{},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#isLeaf"}}},"5":{"2":{"4":{"1":"boolean","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"},"4":true}},"3":{"1":[{"2":"<p>Whether the node is a leaf node.</p>\n"}]}}},{"1":{"1":"removeChild","2":{"1":"closure/goog/structs/treenode.js","2":441,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L441"},"3":{"1":[{"2":"<p>Removes the given child node of this node.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#removeChild"}}},"4":[{"1":"child","2":{"6":{"1":[{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}},{"10":true}]}},"3":{"1":[{"2":"<p>The node to remove.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"4":{"1":"KEY"}},{"4":{"1":"VALUE"}}]}},{"10":true}]}},"3":{"1":[{"2":"<p>The removed node if any.</p>\n"}]}}},{"1":{"1":"removeChildAt","2":{"1":"closure/goog/structs/treenode.js","2":422,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L422"},"3":{"1":[{"2":"<p>Removes the child node at the given index.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#removeChildAt"}}},"4":[{"1":"index","2":{"4":{"1":"number","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"4":true}},"3":{"1":[{"2":"<p>The position to remove from.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"4":{"1":"KEY"}},{"4":{"1":"VALUE"}}]}},{"10":true}]}},"3":{"1":[{"2":"<p>The removed node if any.</p>\n"}]}}},{"1":{"1":"removeChildren","2":{"1":"closure/goog/structs/treenode.js","2":450,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L450"},"3":{"1":[{"2":"<p>Removes all child nodes of this node.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#removeChildren"}}}},{"1":{"1":"replaceChild","2":{"1":"closure/goog/structs/treenode.js","2":411,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L411"},"3":{"1":[{"2":"<p>Replaces the given child node.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#replaceChild"}}},"4":[{"1":"newChild","2":{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>New node to replace\n<code>oldChild</code>. It must not have parent node.</p>\n"}]}},{"1":"oldChild","2":{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>Existing child node to\nbe replaced.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>The replaced child node\ndetached from its parent.</p>\n"}]}}},{"1":{"1":"replaceChildAt","2":{"1":"closure/goog/structs/treenode.js","2":389,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L389"},"3":{"1":[{"2":"<p>Replaces a child node at the given index.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#replaceChildAt"}}},"4":[{"1":"newChild","2":{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>Child node to set. It\nmust not have parent node.</p>\n"}]}},{"1":"index","2":{"4":{"1":"number","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"},"4":true}},"3":{"1":[{"2":"<p>Valid index of the old child to replace.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}},"3":{"1":[{"2":"<p>The original child node,\ndetached from its parent.</p>\n"}]}}},{"1":{"1":"setParent","2":{"1":"closure/goog/structs/treenode.js","2":353,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L353"},"3":{"1":[{"2":"<p>Sets the parent node of this node. The callers must ensure that the parent\nnode and only that has this node among its children.</p>\n"}]},"5":1,"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#setParent"}}},"4":[{"1":"parent","2":{"6":{"1":[{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}},{"10":true}]}},"3":{"1":[{"2":"<p>The parent to set. If\nnull, the node will be detached from the tree.</p>\n"}]}}]},{"1":{"1":"traverse","2":{"1":"closure/goog/structs/treenode.js","2":336,"3":"https://github.com/google/closure-library/blob/master/closure/goog/structs/treenode.js#L336"},"3":{"1":[{"2":"<p>Traverses the subtree with the possibility to skip branches. Starts with\nthis node, and visits the descendant nodes depth-first, in preorder.</p>\n"}]},"8":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html#traverse"}}},"2":["THIS"],"4":[{"1":"f","2":{"3":{"2":{"6":{"1":[{"4":{"1":"THIS"}},{"10":true}]}},"3":[{"4":{"1":"goog.structs.TreeNode","3":{"1":"goog.structs.TreeNode.html"},"5":[{"6":{"1":[{"4":{"1":"KEY"}},{"10":true}]}},{"6":{"1":[{"4":{"1":"VALUE"}},{"10":true}]}}]}}],"4":{"6":{"1":[{"4":{"1":"boolean","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean"},"4":true}},{"9":true}]}}}},"3":{"1":[{"2":"<p>Callback function. It takes the node as argument.\nThe children of this node will be visited if the callback returns true or\nundefined, and will be skipped if the callback returns false.</p>\n"}]}},{"1":"opt_this","2":{"1":true,"6":{"1":[{"4":{"1":"THIS"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>The object to be used as the value of <code>this</code>\nwithin <code>f</code>.</p>\n"}]}}]}],"18":[{"1":"goog.structs.Node","3":{"1":"goog.structs.Node.html"},"5":[{"4":{"1":"KEY"}},{"4":{"1":"VALUE"}}]}],"21":{"1":{"1":"goog.structs","3":{"1":"goog.structs.html"}}},"23":"goog.structs.TreeNode.html","24":"goog.structs.TreeNode"}]}}