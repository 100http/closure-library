{"2":{"1":[{"1":"goog.html.sanitizer.unsafe","5":{"1":"closure/goog/html/sanitizer/unsafe.js","2":30,"3":"https://github.com/google/closure-library/blob/master/closure/goog/html/sanitizer/unsafe.js#L30"},"7":{},"8":{},"12":[{"1":{"1":"alsoAllowAttributes","2":{"1":"closure/goog/html/sanitizer/unsafe.js","2":93,"3":"https://github.com/google/closure-library/blob/master/closure/goog/html/sanitizer/unsafe.js#L93"},"3":{"1":[{"2":"<p>Installs custom attribute policies for the attributes provided in the list.\nThis can be used either on non-whitelisted attributes, effectively extending\nthe attribute whitelist, or on attributes that are whitelisted and already\nhave a policy, to override their policies.</p>\n<p>IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\nthat the new tags do not introduce untrusted code execution or unsanctioned\nnetwork activity.</p>\n"}]}},"4":[{"1":"justification","2":{"4":{"1":"goog.string.Const","3":{"1":"goog.string.Const.html"}}},"3":{"1":[{"2":"<p>A constant string explaining why\nthe addition of these attributes to the whitelist is safe. May include a\nsecurity review ticket number.</p>\n"}]}},{"1":"builder","2":{"4":{"1":"goog.html.sanitizer.HtmlSanitizer.Builder","3":{"1":"goog.html.sanitizer.HtmlSanitizer.Builder.html"}}},"3":{"1":[{"2":"<p>The builder\nwhose attribute whitelist should be extended.</p>\n"}]}},{"1":"attrs","2":{"4":{"1":"Array","4":true,"5":[{"6":{"1":[{"4":{"1":"string","4":true}},{"5":{"1":[{"1":"attributeName","2":{"4":{"1":"string","4":true}}},{"1":"policy","2":{"6":{"1":[{"3":{"3":[{"4":{"1":"string","4":true}},{"1":true,"5":{"1":[{"1":"attributeName","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}}},{"1":"cssProperty","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}}},{"1":"tagName","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}}}]}},{"1":true,"5":{"1":[{"1":"cssStyle","2":{"6":{"1":[{"4":{"1":"CSSStyleDeclaration"}},{"10":true},{"9":true}]}}}]}},{"1":true,"8":true}],"4":{"6":{"1":[{"4":{"1":"string","4":true}},{"10":true}]}}}},{"10":true}]}}},{"1":"tagName","2":{"4":{"1":"string","4":true}}}]}}]}}]}},"3":{"1":[{"2":"<p>A list of attributes whose policy should be overridden. Attributes\ncan come in of two forms:\n- string: allow all values and just trim whitespaces for this attribute\non all tags.\n- HtmlSanitizerAttributePolicy: allows specifying a policy for a\nparticular tag. The tagName can be &#39;*&#39;, which means all tags. If no\npolicy is passed, the default is allow all values and just trim\nwhitespaces.\nThe tag and attribute names are case-insensitive.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.html.sanitizer.HtmlSanitizer.Builder","3":{"1":"goog.html.sanitizer.HtmlSanitizer.Builder.html"}}}}},{"1":{"1":"alsoAllowTags","2":{"1":"closure/goog/html/sanitizer/unsafe.js","2":56,"3":"https://github.com/google/closure-library/blob/master/closure/goog/html/sanitizer/unsafe.js#L56"},"3":{"1":[{"2":"<p>Extends the tag whitelist with the list of tags provided.</p>\n<p>IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\nthat the new tags do not introduce untrusted code execution or unsanctioned\nnetwork activity.</p>\n"}]}},"4":[{"1":"justification","2":{"4":{"1":"goog.string.Const","3":{"1":"goog.string.Const.html"}}},"3":{"1":[{"2":"<p>A constant string explaining why\nthe addition of these tags to the whitelist is safe. May include a\nsecurity review ticket number.</p>\n"}]}},{"1":"builder","2":{"4":{"1":"goog.html.sanitizer.HtmlSanitizer.Builder","3":{"1":"goog.html.sanitizer.HtmlSanitizer.Builder.html"}}},"3":{"1":[{"2":"<p>The builder\nwhose tag whitelist should be extended.</p>\n"}]}},{"1":"tags","2":{"4":{"1":"Array","4":true,"5":[{"4":{"1":"string","4":true}}]}},"3":{"1":[{"2":"<p>A list of additional tags to allow through the\nsanitizer. Note that if the tag is also present in the blacklist,\nits addition to the whitelist has no effect. The tag names are\ncase-insensitive.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.html.sanitizer.HtmlSanitizer.Builder","3":{"1":"goog.html.sanitizer.HtmlSanitizer.Builder.html"}}}}},{"1":{"1":"keepUnsanitizedTemplateContents","2":{"1":"closure/goog/html/sanitizer/unsafe.js","2":126,"3":"https://github.com/google/closure-library/blob/master/closure/goog/html/sanitizer/unsafe.js#L126"},"3":{"1":[{"2":"<p>Turns off sanitization of TEMPLATE tag descendants. The output is still\nsafe to consume as a whole, but clients need to handle the contents of\nTEMPLATE nodes carefully, hence its definition in the unsafe package.</p>\n<p>Note that this only applies to descendants of unsanitized template tags, not\nto the tag itself, which must be manually added to the whitelist and removed\nfrom the blacklist.</p>\n<p>IMPORTANT: Uses of this method must be carefully security-reviewed to ensure\nthat the new tags do not introduce untrusted code execution or unsanctioned\nnetwork activity.</p>\n"}]}},"4":[{"1":"justification","2":{"4":{"1":"goog.string.Const","3":{"1":"goog.string.Const.html"}}},"3":{"1":[{"2":"<p>A constant string explaining why\nthe templates should not be sanitized, and why this is safe. May include\na security review ticket number.</p>\n"}]}},{"1":"builder","2":{"4":{"1":"goog.html.sanitizer.HtmlSanitizer.Builder","3":{"1":"goog.html.sanitizer.HtmlSanitizer.Builder.html"}}},"3":{"1":[{"2":"<p>The builder\nwhose template tag descendants should not be sanitized.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.html.sanitizer.HtmlSanitizer.Builder","3":{"1":"goog.html.sanitizer.HtmlSanitizer.Builder.html"}}}},"6":[{"2":{"6":{"1":[{"4":{"1":"Error","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>Thrown if the browser does not support TEMPLATE tags.\nIn this case, careful post-sanitization handling wouldn&#39;t matter.</p>\n"}]}}]}],"21":{"1":{"1":"goog.html.sanitizer.unsafe","3":{"1":"goog.html.sanitizer.unsafe.html"}},"2":4},"23":"goog.html.sanitizer.unsafe.html","24":"goog.html.sanitizer.unsafe"}]}}