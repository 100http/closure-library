{"2":{"1":[{"1":"goog.testing.net.XhrIo","5":{"1":"closure/goog/testing/net/xhrio.js","2":46,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L46"},"6":{"2":[{"1":"XhrIo.ResponseType","2":"goog.testing.net.XhrIo.ResponseType.html","3":{"1":[{"2":"<p>Alias this enum here to make mocking of goog.net.XhrIo easier.</p>\n"}]}}]},"7":{"1":[{"2":"<p>Mock implementation of goog.net.XhrIo. This doesn&#39;t provide a mock\nimplementation for all cases, but it&#39;s not too hard to add them as needed.</p>\n"}]},"8":{},"12":[{"1":{"1":"XhrIo.cleanup","2":{"1":"closure/goog/testing/net/xhrio.js","2":117,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L117"},"3":{"1":[{"2":"<p>Disposes all non-disposed instances of goog.testing.net.XhrIo created by\n<a href=\"goog.testing.net.XhrIo.html#XhrIo.send\"><code>goog.testing.net.XhrIo.send</code></a>.</p>\n"}]},"10":[{"1":[{"1":"goog.net.XhrIo.cleanup","3":{"1":"goog.net.XhrIo.html#XhrIo.cleanup"}}]}]}},{"1":{"1":"XhrIo.getSendInstances","2":{"1":"closure/goog/testing/net/xhrio.js","2":107,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L107"},"3":{"1":[{"2":"<p>Returns an Array containing all non-disposed instances of\ngoog.testing.net.XhrIo created by <a href=\"goog.testing.net.XhrIo.html#XhrIo.send\"><code>goog.testing.net.XhrIo.send</code></a>.</p>\n"}]}},"5":{"2":{"4":{"1":"Array","4":true,"5":[{"4":{"1":"goog.testing.net.XhrIo","3":{"1":"goog.testing.net.XhrIo.html"}}}]}},"3":{"1":[{"2":"<p>Array of goog.testing.net.XhrIo\ninstances.</p>\n"}]}}},{"1":{"1":"XhrIo.send","2":{"1":"closure/goog/testing/net/xhrio.js","2":140,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L140"},"3":{"1":[{"2":"<p>Simulates the static XhrIo send method.</p>\n"}]}},"4":[{"1":"url","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>Uri to make request to.</p>\n"}]}},{"1":"opt_callback","2":{"1":true,"6":{"1":[{"4":{"1":"Function"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Callback function for when request is\ncomplete.</p>\n"}]}},{"1":"opt_method","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Send method, default: GET.</p>\n"}]}},{"1":"opt_content","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Post data.</p>\n"}]}},{"1":"opt_headers","2":{"1":true,"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Map of headers to add to the\nrequest.</p>\n"}]}},{"1":"opt_timeoutInterval","2":{"1":true,"6":{"1":[{"4":{"1":"number","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Number of milliseconds after which an\nincomplete request will be aborted; 0 means no timeout is set.</p>\n"}]}},{"1":"opt_withCredentials","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Whether to send credentials with the\nrequest. Default to false. See <a href=\"goog.net.XhrIo.html#setWithCredentials\"><code>goog.net.XhrIo#setWithCredentials</code></a>.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.testing.net.XhrIo","3":{"1":"goog.testing.net.XhrIo.html"}}},"3":{"1":[{"2":"<p>The mocked sent XhrIo.</p>\n"}]}}}],"13":[{"1":{"1":"XhrIo.allowUnsafeAccessToXhrIoOutsideCallbacks","2":{"1":"closure/goog/testing/net/xhrio.js","2":74,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L74"},"3":{"1":[{"2":"<p>To emulate the behavior of the actual XhrIo, we do not allow access to the\nXhrIo&#39;s properties outside the event callbacks. For backwards compatibility,\nwe allow tests to allow access by setting this value to true.\nThis value is temporarily set to true, so that its introduction is separated\nfrom callers needing to set it.</p>\n"}]}},"2":{"4":{"1":"boolean","4":true}}}],"14":{"1":{"1":"XhrIo","2":{"1":"closure/goog/testing/net/xhrio.js","2":46,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L46"},"3":{"1":[{"2":"<p>Mock implementation of goog.net.XhrIo. This doesn&#39;t provide a mock\nimplementation for all cases, but it&#39;s not too hard to add them as needed.</p>\n"}]}},"3":true,"4":[{"1":"opt_testQueue","2":{"1":true,"6":{"1":[{"4":{"1":"goog.testing.TestQueue","3":{"1":"goog.testing.TestQueue.html"}}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Test queue for inserting test\nevents.</p>\n"}]}}]},"15":[{"1":{"1":"abort","2":{"1":"closure/goog/testing/net/xhrio.js","2":418,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L418"},"3":{"1":[{"2":"<p>Abort the current XMLHttpRequest</p>\n"}]}},"4":[{"1":"opt_failureCode","2":{"1":true,"6":{"1":[{"4":{"1":"goog.net.ErrorCode","3":{"1":"goog.net.ErrorCode.html"}}},{"9":true}]}},"3":{"1":[{"2":"<p>Optional error code to use -\ndefaults to ABORT.</p>\n"}]}}]},{"1":{"1":"addEventListener","2":{"1":"closure/goog/events/eventtarget.js","2":150,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/eventtarget.js#L150"},"3":{"1":[{"2":"<p>Adds an event listener to the event target. The same handler can only be\nadded once per the type. Even if you add the same handler multiple times\nusing the same type then it will only be called once when the event is\ndispatched.</p>\n"}]},"4":{"1":[{"2":"<p>Use <code>#listen</code> instead, when possible. Otherwise, use\n<code>goog.events.listen</code> if you are passing Object\n(instead of Function) as handler.</p>\n"}]},"6":{"2":true},"7":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#addEventListener"}}},"4":[{"1":"type","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The type of the event to listen for.</p>\n"}]}},{"1":"handler","2":{"6":{"1":[{"3":{"3":[{"8":true}],"4":{"8":true}}},{"5":{"1":[{"1":"handleEvent","2":{"3":{"3":[{"8":true}],"4":{"8":true}}}}]}},{"10":true}]}},"3":{"1":[{"2":"<p>The function\nto handle the event. The handler can also be an object that implements\nthe handleEvent method which takes the event object as argument.</p>\n"}]}},{"1":"opt_capture","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>In DOM-compliant browsers, this determines\nwhether the listener is fired during the capture or bubble phase\nof the event.</p>\n"}]}},{"1":"opt_handlerScope","2":{"1":true,"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Object in whose scope to call\nthe listener.</p>\n"}]}}]},{"1":{"1":"addOnDisposeCallback","2":{"1":"closure/goog/disposable/disposable.js","2":213,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L213"},"3":{"1":[{"2":"<p>Invokes a callback function when this object is disposed. Callbacks are\ninvoked in the order in which they were added. If a callback is added to\nan already disposed Disposable, it will be called immediately.</p>\n"}]},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#addOnDisposeCallback"}}},"2":["T"],"4":[{"1":"callback","2":{"3":{"2":{"6":{"1":[{"4":{"1":"T"}},{"10":true}]}},"4":{"8":true}}},"3":{"1":[{"2":"<p>The callback function.</p>\n"}]}},{"1":"opt_scope","2":{"1":true,"6":{"1":[{"4":{"1":"T"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>An optional scope to call the callback in.</p>\n"}]}}]},{"1":{"1":"createXhr","2":{"1":"closure/goog/testing/net/xhrio.js","2":479,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L479"},"3":{"1":[{"2":"<p>Creates a new XHR object.</p>\n"}]},"5":1},"5":{"2":{"6":{"1":[{"4":{"1":"goog.net.XhrLike","3":{"1":"goog.net.XhrLike.html"}}},{"4":{"1":"XMLHttpRequest"}}]}},"3":{"1":[{"2":"<p>The newly created XHR\nobject.</p>\n"}]}}},{"1":{"1":"dispatchEvent","2":{"1":"closure/goog/events/listenable.js","2":180,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L180"},"3":{"1":[{"2":"<p>Dispatches an event (or event like object) and calls all listeners\nlistening for events of this type. The type of the event is decided by the\ntype property on the event object.</p>\n<p>If any of the listeners returns false OR calls preventDefault then this\nfunction will return false.  If one of the capture listeners calls\nstopPropagation, then the bubble listeners won&#39;t fire.</p>\n"}]},"8":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#dispatchEvent"}}},"4":[{"1":"e","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"Object","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>Event object.</p>\n"}]}}],"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>If anyone called preventDefault on the event object (or\nif any of the listeners returns false) this will also return false.</p>\n"}]}}},{"1":{"1":"dispose","2":{"1":"closure/goog/disposable/idisposable.js","2":39,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/idisposable.js#L39"},"3":{"1":[{"2":"<p>Disposes of the object and its resources.</p>\n"}]},"8":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#dispose"}}},"5":{"3":{"1":[{"2":"<p>Nothing.</p>\n"}]}}},{"1":{"1":"disposeInternal","2":{"1":"closure/goog/events/eventtarget.js","2":207,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/eventtarget.js#L207"},"3":{"1":[{"2":"<p>Removes listeners from this object.  Classes that extend EventTarget may\nneed to override this method in order to remove references to DOM Elements\nand additional listeners.</p>\n"}]},"5":1,"7":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#disposeInternal"}},"8":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#disposeInternal"}}}},{"1":{"1":"fireListeners","2":{"1":"closure/goog/events/listenable.js","2":225,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L225"},"3":{"1":[{"2":"<p>Fires all registered listeners in this listenable for the given\ntype and capture mode, passing them the given eventObject. This\ndoes not perform actual capture/bubble. Only implementors of the\ninterface should be using this.</p>\n"}]},"8":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#fireListeners"}}},"2":["EVENTOBJ"],"4":[{"1":"type","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"goog.events.EventId","3":{"1":"goog.events.EventId.html"},"5":[{"6":{"1":[{"4":{"1":"EVENTOBJ"}},{"10":true}]}}]}}]}},"3":{"1":[{"2":"<p>The type of the\nlisteners to fire.</p>\n"}]}},{"1":"capture","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>The capture mode of the listeners to fire.</p>\n"}]}},{"1":"eventObject","2":{"6":{"1":[{"4":{"1":"EVENTOBJ"}},{"10":true}]}},"3":{"1":[{"2":"<p>The event object to fire.</p>\n"}]}}],"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether all listeners succeeded without\nattempting to prevent default behavior. If any listener returns\nfalse or called goog.events.Event#preventDefault, this returns\nfalse.</p>\n"}]}}},{"1":{"1":"getAllResponseHeaders","2":{"1":"closure/goog/testing/net/xhrio.js","2":841,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L841"},"3":{"1":[{"2":"<p>Gets the text of all the headers in the response.\nWill only return correct result when called from the context of a callback\nand the request has completed</p>\n"}]}},"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The string containing all the response headers.</p>\n"}]}}},{"1":{"1":"getAllStreamingResponseHeaders","2":{"1":"closure/goog/testing/net/xhrio.js","2":899,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L899"},"3":{"1":[{"2":"<p>Gets the text of all the headers in the response. As opposed to\n<a href=\"goog.testing.net.XhrIo.html#getAllResponseHeaders\"><code>#getAllResponseHeaders</code></a>, this method does not require that the request\nhas completed.</p>\n"}]}},"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The value of the response headers or empty string.</p>\n"}]}}},{"1":{"1":"getDisposed","2":{"1":"closure/goog/disposable/disposable.js","2":160,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L160"},"3":{},"4":{"1":[{"2":"<p>Use <a href=\"goog.testing.net.XhrIo.html#isDisposed\"><code>#isDisposed</code></a> instead.</p>\n"}]},"6":{"2":true},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#getDisposed"}}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the object has been disposed of.</p>\n"}]}}},{"1":{"1":"getLastContent","2":{"1":"closure/goog/testing/net/xhrio.js","2":709,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L709"},"3":{"1":[{"2":"<p>Gets the last POST content that was requested.</p>\n"}]}},"5":{"2":{"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Last POST content or undefined if last request was\na GET.</p>\n"}]}}},{"1":{"1":"getLastError","2":{"1":"closure/goog/testing/net/xhrio.js","2":681,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L681"},"3":{"1":[{"2":"<p>Gets the last error message.</p>\n"}]}},"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>Last error message.</p>\n"}]}}},{"1":{"1":"getLastErrorCode","2":{"1":"closure/goog/testing/net/xhrio.js","2":672,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L672"},"3":{"1":[{"2":"<p>Gets the last error message.</p>\n"}]}},"5":{"2":{"4":{"1":"goog.net.ErrorCode","3":{"1":"goog.net.ErrorCode.html"}}},"3":{"1":[{"2":"<p>Last error code.</p>\n"}]}}},{"1":{"1":"getLastMethod","2":{"1":"closure/goog/testing/net/xhrio.js","2":699,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L699"},"3":{"1":[{"2":"<p>Gets the last HTTP method that was requested.</p>\n"}]}},"5":{"2":{"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Last HTTP method used by send.</p>\n"}]}}},{"1":{"1":"getLastRequestHeaders","2":{"1":"closure/goog/testing/net/xhrio.js","2":719,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L719"},"3":{"1":[{"2":"<p>Gets the headers of the last request.</p>\n"}]}},"5":{"2":{"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Last headers manually set in send\ncall or undefined if no additional headers were specified.</p>\n"}]}}},{"1":{"1":"getLastUri","2":{"1":"closure/goog/testing/net/xhrio.js","2":690,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L690"},"3":{"1":[{"2":"<p>Gets the last URI that was requested.</p>\n"}]}},"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>Last URI.</p>\n"}]}}},{"1":{"1":"getListener","2":{"1":"closure/goog/events/listenable.js","2":255,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L255"},"3":{"1":[{"2":"<p>Gets the goog.events.ListenableKey for the event or null if no such\nlistener is in use.</p>\n"}]},"8":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#getListener"}}},"2":["SCOPE","EVENTOBJ"],"4":[{"1":"type","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"goog.events.EventId","3":{"1":"goog.events.EventId.html"},"5":[{"6":{"1":[{"4":{"1":"EVENTOBJ"}},{"10":true}]}}]}}]}},"3":{"1":[{"2":"<p>The name of the event\nwithout the &#39;on&#39; prefix.</p>\n"}]}},{"1":"listener","2":{"3":{"2":{"6":{"1":[{"4":{"1":"SCOPE"}},{"10":true}]}},"3":[{"6":{"1":[{"4":{"1":"EVENTOBJ"}},{"10":true}]}}],"4":{"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}}}},"3":{"1":[{"2":"<p>The\nlistener function to get.</p>\n"}]}},{"1":"capture","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the listener is a capturing listener.</p>\n"}]}},{"1":"opt_listenerScope","2":{"1":true,"6":{"1":[{"4":{"1":"SCOPE"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Object in whose scope to call the\nlistener.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"goog.events.ListenableKey","3":{"1":"goog.events.ListenableKey.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>the found listener or null if not found.</p>\n"}]}}},{"1":{"1":"getListeners","2":{"1":"closure/goog/events/listenable.js","2":238,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L238"},"3":{"1":[{"2":"<p>Gets all listeners in this listenable for the given type and\ncapture mode.</p>\n"}]},"8":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#getListeners"}}},"2":["EVENTOBJ"],"4":[{"1":"type","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"goog.events.EventId","3":{"1":"goog.events.EventId.html"}}}]}},"3":{"1":[{"2":"<p>The type of the listeners to fire.</p>\n"}]}},{"1":"capture","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>The capture mode of the listeners to fire.</p>\n"}]}}],"5":{"2":{"4":{"1":"Array","4":true,"5":[{"4":{"1":"goog.events.ListenableKey","3":{"1":"goog.events.ListenableKey.html"}}}]}},"3":{"1":[{"2":"<p>An array of registered\nlisteners.</p>\n"}]}}},{"1":{"1":"getParentEventTarget","2":{"1":"closure/goog/events/listenable.js","2":206,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L206"},"3":{"1":[{"2":"<p>Returns the parent of this event target to use for capture/bubble\nmechanism.</p>\n<p>NOTE(chrishenry): The name reflects the original implementation of\ncustom event target (<code>goog.events.EventTarget</code>). We decided\nthat changing the name is not worth it.</p>\n"}]},"8":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#getParentEventTarget"}}},"5":{"2":{"6":{"1":[{"4":{"1":"goog.events.Listenable","3":{"1":"goog.events.Listenable.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>The parent EventTarget or null if\nthere is no parent.</p>\n"}]}}},{"1":{"1":"getProgressEventsEnabled","2":{"1":"closure/goog/testing/net/xhrio.js","2":408,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L408"},"3":{"1":[{"2":"<p>Gets whether progress events are enabled.</p>\n"}]}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether progress events are enabled for this request.</p>\n"}]}}},{"1":{"1":"getReadyState","2":{"1":"closure/goog/testing/net/xhrio.js","2":643,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L643"},"3":{"1":[{"2":"<p>Returns the readystate.</p>\n"}]}},"5":{"2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>goog.net.XmlHttp.ReadyState.*.</p>\n"}]}}},{"1":{"1":"getResponse","2":{"1":"closure/goog/testing/net/xhrio.js","2":815,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L815"},"3":{"1":[{"2":"<p>Get the response as the type specificed by <a href=\"goog.testing.net.XhrIo.html#setResponseType\"><code>#setResponseType</code></a>. At time\nof writing, this is only supported in very recent versions of WebKit\n(10.0.612.1 dev and later).</p>\n"}]}},"5":{"2":{"7":true},"3":{"1":[{"2":"<p>The response.</p>\n"}]}}},{"1":{"1":"getResponseBody","2":{"1":"closure/goog/testing/net/xhrio.js","2":761,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L761"},"3":{"1":[{"2":"<p>Gets the response body from the Xhr object. Will only return correct result\nwhen called from the context of a callback.</p>\n"}]}},"5":{"2":{"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>Binary result from the server or null.</p>\n"}]}}},{"1":{"1":"getResponseHeader","2":{"1":"closure/goog/testing/net/xhrio.js","2":827,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L827"},"3":{"1":[{"2":"<p>Get the value of the response-header with the given name from the Xhr object\nWill only return correct result when called from the context of a callback\nand the request has completed</p>\n"}]}},"4":[{"1":"key","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The name of the response-header to retrieve.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>The value of the response-header named key.</p>\n"}]}}},{"1":{"1":"getResponseHeaders","2":{"1":"closure/goog/testing/net/xhrio.js","2":861,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L861"},"3":{"1":[{"2":"<p>Returns all response headers as a key-value map.\nMultiple values for the same header key can be combined into one,\nseparated by a comma and a space.\nNote that the native getResponseHeader method for retrieving a single header\ndoes a case insensitive match on the header name. This method does not\ninclude any case normalization logic, it will just return a key-value\nrepresentation of the headers.\nSee: http://www.w3.org/TR/XMLHttpRequest/#the-getresponseheader()-method</p>\n"}]}},"5":{"2":{"4":{"1":"Object","4":true,"5":[{"4":{"1":"string","4":true}},{"4":{"1":"string","4":true}}]}},"3":{"1":[{"2":"<p>An object with the header keys as keys\nand header values as values.</p>\n"}]}}},{"1":{"1":"getResponseJson","2":{"1":"closure/goog/testing/net/xhrio.js","2":775,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L775"},"3":{"1":[{"2":"<p>Gets the response and evaluates it as JSON from the Xhr object.  Will only\nreturn correct result when called from the context of a callback.</p>\n"}]}},"4":[{"1":"opt_xssiPrefix","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Optional XSSI prefix string to use for\nstripping of the response before parsing. This needs to be set only if\nyour backend server prepends the same prefix string to the JSON response.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>JavaScript object.</p>\n"}]}}},{"1":{"1":"getResponseText","2":{"1":"closure/goog/testing/net/xhrio.js","2":742,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L742"},"3":{"1":[{"2":"<p>Gets the response text from the Xhr object.  Will only return correct result\nwhen called from the context of a callback.</p>\n"}]}},"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>Result from the server.</p>\n"}]}}},{"1":{"1":"getResponseType","2":{"1":"closure/goog/testing/net/xhrio.js","2":363,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L363"},"3":{"1":[{"2":"<p>Gets the desired type for the response.</p>\n"}]}},"5":{"2":{"4":{"1":"goog.net.XhrIo.ResponseType","3":{"1":"goog.net.XhrIo.ResponseType.html"}}},"3":{"1":[{"2":"<p>The desired type for the response.</p>\n"}]}}},{"1":{"1":"getResponseXml","2":{"1":"closure/goog/testing/net/xhrio.js","2":794,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L794"},"3":{"1":[{"2":"<p>Gets the response XML from the Xhr object.  Will only return correct result\nwhen called from the context of a callback.</p>\n"}]}},"5":{"2":{"6":{"1":[{"4":{"1":"Document"}},{"10":true}]}},"3":{"1":[{"2":"<p>Result from the server if it was XML.</p>\n"}]}}},{"1":{"1":"getStatus","2":{"1":"closure/goog/testing/net/xhrio.js","2":653,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L653"},"3":{"1":[{"2":"<p>Get the status from the Xhr object.  Will only return correct result when\ncalled from the context of a callback.</p>\n"}]}},"5":{"2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>Http status.</p>\n"}]}}},{"1":{"1":"getStatusText","2":{"1":"closure/goog/testing/net/xhrio.js","2":663,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L663"},"3":{"1":[{"2":"<p>Get the status text from the Xhr object.  Will only return correct result\nwhen called from the context of a callback.</p>\n"}]}},"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>Status text.</p>\n"}]}}},{"1":{"1":"getStreamingResponseHeader","2":{"1":"closure/goog/testing/net/xhrio.js","2":885,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L885"},"3":{"1":[{"2":"<p>Get the value of the response-header with the given name from the Xhr object.\nAs opposed to <a href=\"goog.testing.net.XhrIo.html#getResponseHeader\"><code>#getResponseHeader</code></a>, this method does not require that\nthe request has completed.</p>\n"}]}},"4":[{"1":"key","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The name of the response-header to retrieve.</p>\n"}]}}],"5":{"2":{"6":{"1":[{"4":{"1":"string","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>The value of the response-header, or null if it is\nunavailable.</p>\n"}]}}},{"1":{"1":"getTimeoutInterval","2":{"1":"closure/goog/testing/net/xhrio.js","2":320,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L320"},"3":{"1":[{"2":"<p>Returns the number of milliseconds after which an incomplete request will be\naborted, or 0 if no timeout is set.</p>\n"}]}},"5":{"2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>Timeout interval in milliseconds.</p>\n"}]}}},{"1":{"1":"getWithCredentials","2":{"1":"closure/goog/testing/net/xhrio.js","2":387,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L387"},"3":{"1":[{"2":"<p>Gets whether a &#34;credentialed&#34; request is to be sent.</p>\n"}]}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>The desired type for the response.</p>\n"}]}}},{"1":{"1":"hasListener","2":{"1":"closure/goog/events/listenable.js","2":270,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L270"},"3":{"1":[{"2":"<p>Whether there is any active listeners matching the specified\nsignature. If either the type or capture parameters are\nunspecified, the function will match on the remaining criteria.</p>\n"}]},"8":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#hasListener"}}},"2":["EVENTOBJ"],"4":[{"1":"opt_type","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"goog.events.EventId","3":{"1":"goog.events.EventId.html"},"5":[{"6":{"1":[{"4":{"1":"EVENTOBJ"}},{"10":true}]}}]}},{"9":true}]}},"3":{"1":[{"2":"<p>Event type.</p>\n"}]}},{"1":"opt_capture","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Whether to check for capture or bubble\nlisteners.</p>\n"}]}}],"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether there is any active listeners matching\nthe requested type and/or capture phase.</p>\n"}]}}},{"1":{"1":"isActive","2":{"1":"closure/goog/testing/net/xhrio.js","2":602,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L602"},"3":{}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether there is an active request.</p>\n"}]}}},{"1":{"1":"isComplete","2":{"1":"closure/goog/testing/net/xhrio.js","2":611,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L611"},"3":{"1":[{"2":"<p>Has the request completed.</p>\n"}]}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the request has completed.</p>\n"}]}}},{"1":{"1":"isDisposed","2":{"1":"closure/goog/disposable/idisposable.js","2":45,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/idisposable.js#L45"},"3":{},"8":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#isDisposed"}}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the object has been disposed of.</p>\n"}]}}},{"1":{"1":"isSuccess","2":{"1":"closure/goog/testing/net/xhrio.js","2":620,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L620"},"3":{"1":[{"2":"<p>Has the request compeleted with a success.</p>\n"}]}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether the request compeleted successfully.</p>\n"}]}}},{"1":{"1":"listen","2":{"1":"closure/goog/events/listenable.js","2":113,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L113"},"3":{"1":[{"2":"<p>Adds an event listener. A listener can only be added once to an\nobject and if it is added again the key for the listener is\nreturned. Note that if the existing listener is a one-off listener\n(registered via listenOnce), it will no longer be a one-off\nlistener after a call to listen().</p>\n"}]},"8":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#listen"}}},"2":["SCOPE","EVENTOBJ"],"4":[{"1":"type","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"goog.events.EventId","3":{"1":"goog.events.EventId.html"},"5":[{"6":{"1":[{"4":{"1":"EVENTOBJ"}},{"10":true}]}}]}}]}},"3":{"1":[{"2":"<p>The event type id.</p>\n"}]}},{"1":"listener","2":{"3":{"2":{"6":{"1":[{"4":{"1":"SCOPE"}},{"10":true}]}},"3":[{"6":{"1":[{"4":{"1":"EVENTOBJ"}},{"10":true}]}}],"4":{"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}}}},"3":{"1":[{"2":"<p>Callback\nmethod.</p>\n"}]}},{"1":"opt_useCapture","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Whether to fire in capture phase\n(defaults to false).</p>\n"}]}},{"1":"opt_listenerScope","2":{"1":true,"6":{"1":[{"4":{"1":"SCOPE"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Object in whose scope to call the\nlistener.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.events.ListenableKey","3":{"1":"goog.events.ListenableKey.html"}}},"3":{"1":[{"2":"<p>Unique key for the listener.</p>\n"}]}}},{"1":{"1":"listenOnce","2":{"1":"closure/goog/events/listenable.js","2":137,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L137"},"3":{"1":[{"2":"<p>Adds an event listener that is removed automatically after the\nlistener fired once.</p>\n<p>If an existing listener already exists, listenOnce will do\nnothing. In particular, if the listener was previously registered\nvia listen(), listenOnce() will not turn the listener into a\none-off listener. Similarly, if there is already an existing\none-off listener, listenOnce does not modify the listeners (it is\nstill a once listener).</p>\n"}]},"8":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#listenOnce"}}},"2":["SCOPE","EVENTOBJ"],"4":[{"1":"type","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"goog.events.EventId","3":{"1":"goog.events.EventId.html"},"5":[{"6":{"1":[{"4":{"1":"EVENTOBJ"}},{"10":true}]}}]}}]}},"3":{"1":[{"2":"<p>The event type id.</p>\n"}]}},{"1":"listener","2":{"3":{"2":{"6":{"1":[{"4":{"1":"SCOPE"}},{"10":true}]}},"3":[{"6":{"1":[{"4":{"1":"EVENTOBJ"}},{"10":true}]}}],"4":{"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}}}},"3":{"1":[{"2":"<p>Callback\nmethod.</p>\n"}]}},{"1":"opt_useCapture","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Whether to fire in capture phase\n(defaults to false).</p>\n"}]}},{"1":"opt_listenerScope","2":{"1":true,"6":{"1":[{"4":{"1":"SCOPE"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Object in whose scope to call the\nlistener.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.events.ListenableKey","3":{"1":"goog.events.ListenableKey.html"}}},"3":{"1":[{"2":"<p>Unique key for the listener.</p>\n"}]}}},{"1":{"1":"registerDisposable","2":{"1":"closure/goog/disposable/disposable.js","2":200,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L200"},"3":{"1":[{"2":"<p>Associates a disposable object with this object so that they will be disposed\ntogether.</p>\n"}]},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#registerDisposable"}}},"4":[{"1":"disposable","2":{"6":{"1":[{"4":{"1":"goog.disposable.IDisposable","3":{"1":"goog.disposable.IDisposable.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>that will be disposed when\nthis object is disposed.</p>\n"}]}}]},{"1":{"1":"removeAllListeners","2":{"1":"closure/goog/events/listenable.js","2":192,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L192"},"3":{"1":[{"2":"<p>Removes all listeners from this listenable. If type is specified,\nit will only remove listeners of the particular type. otherwise all\nregistered listeners will be removed.</p>\n"}]},"8":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#removeAllListeners"}}},"4":[{"1":"opt_type","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Type of event to remove, default is to\nremove all types.</p>\n"}]}}],"5":{"2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>Number of listeners removed.</p>\n"}]}}},{"1":{"1":"removeEventListener","2":{"1":"closure/goog/events/eventtarget.js","2":174,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/eventtarget.js#L174"},"3":{"1":[{"2":"<p>Removes an event listener from the event target. The handler must be the\nsame object as the one added. If the handler has not been added then\nnothing is done.</p>\n"}]},"4":{"1":[{"2":"<p>Use <code>#unlisten</code> instead, when possible. Otherwise, use\n<code>goog.events.unlisten</code> if you are passing Object\n(instead of Function) as handler.</p>\n"}]},"6":{"2":true},"7":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#removeEventListener"}}},"4":[{"1":"type","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The type of the event to listen for.</p>\n"}]}},{"1":"handler","2":{"6":{"1":[{"3":{"3":[{"8":true}],"4":{"8":true}}},{"5":{"1":[{"1":"handleEvent","2":{"3":{"3":[{"8":true}],"4":{"8":true}}}}]}},{"10":true}]}},"3":{"1":[{"2":"<p>The function\nto handle the event. The handler can also be an object that implements\nthe handleEvent method which takes the event object as argument.</p>\n"}]}},{"1":"opt_capture","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>In DOM-compliant browsers, this determines\nwhether the listener is fired during the capture or bubble phase\nof the event.</p>\n"}]}},{"1":"opt_handlerScope","2":{"1":true,"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Object in whose scope to call\nthe listener.</p>\n"}]}}]},{"1":{"1":"send","2":{"1":"closure/goog/testing/net/xhrio.js","2":442,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L442"},"3":{"1":[{"2":"<p>Simulates the XhrIo send.</p>\n"}]}},"4":[{"1":"url","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>Uri to make request too.</p>\n"}]}},{"1":"opt_method","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Send method, default: GET.</p>\n"}]}},{"1":"opt_content","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Post data.</p>\n"}]}},{"1":"opt_headers","2":{"1":true,"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Map of headers to add to the\nrequest.</p>\n"}]}}]},{"1":{"1":"setParentEventTarget","2":{"1":"closure/goog/events/eventtarget.js","2":126,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/eventtarget.js#L126"},"3":{"1":[{"2":"<p>Sets the parent of this event target to use for capture/bubble\nmechanism.</p>\n"}]},"7":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#setParentEventTarget"}}},"4":[{"1":"parent","2":{"6":{"1":[{"4":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html"}}},{"10":true}]}},"3":{"1":[{"2":"<p>Parent listenable (null if none).</p>\n"}]}}]},{"1":{"1":"setProgressEventsEnabled","2":{"1":"closure/goog/testing/net/xhrio.js","2":399,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L399"},"3":{"1":[{"2":"<p>Sets whether progress events are enabled for this request. Note\nthat progress events require pre-flight OPTIONS request handling\nfor CORS requests, and may cause trouble with older browsers. See\ngoog.net.XhrIo.progressEventsEnabled_ for details.</p>\n"}]}},"4":[{"1":"enabled","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether progress events should be enabled.</p>\n"}]}}]},{"1":{"1":"setResponseType","2":{"1":"closure/goog/testing/net/xhrio.js","2":354,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L354"},"3":{"1":[{"2":"<p>Sets the desired type for the response. At time of writing, this is only\nsupported in very recent versions of WebKit (10.0.612.1 dev and later).</p>\n<p>If this is used, the response may only be accessed via <a href=\"goog.testing.net.XhrIo.html#getResponse\"><code>#getResponse</code></a>.</p>\n"}]}},"4":[{"1":"type","2":{"4":{"1":"goog.net.XhrIo.ResponseType","3":{"1":"goog.net.XhrIo.ResponseType.html"}}},"3":{"1":[{"2":"<p>The desired type for the response.</p>\n"}]}}]},{"1":{"1":"setTargetForTesting","2":{"1":"closure/goog/events/eventtarget.js","2":320,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/eventtarget.js#L320"},"3":{"1":[{"2":"<p>Sets the target to be used for <code>event.target</code> when firing\nevent. Mainly used for testing. For example, see\n<code>goog.testing.events.mixinListenable</code>.</p>\n"}]},"7":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#setTargetForTesting"}}},"4":[{"1":"target","2":{"4":{"1":"Object","4":true}},"3":{"1":[{"2":"<p>The target.</p>\n"}]}}]},{"1":{"1":"setTimeoutInterval","2":{"1":"closure/goog/testing/net/xhrio.js","2":331,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L331"},"3":{"1":[{"2":"<p>Sets the number of milliseconds after which an incomplete request will be\naborted and a <a href=\"goog.net.EventType.html#TIMEOUT\"><code>goog.net.EventType.TIMEOUT</code></a> event raised; 0 means no\ntimeout is set.</p>\n"}]}},"4":[{"1":"ms","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>Timeout interval in milliseconds; 0 means none.</p>\n"}]}}]},{"1":{"1":"setWithCredentials","2":{"1":"closure/goog/testing/net/xhrio.js","2":377,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L377"},"3":{"1":[{"2":"<p>Sets whether a &#34;credentialed&#34; request that is aware of cookie and\nauthentication information should be made. This option is only supported by\nbrowsers that support HTTP Access Control. As of this writing, this option\nis not supported in IE.</p>\n"}]}},"4":[{"1":"withCredentials","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether this should be a &#34;credentialed&#34;\nrequest.</p>\n"}]}}]},{"1":{"1":"simulatePartialResponse","2":{"1":"closure/goog/testing/net/xhrio.js","2":519,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L519"},"3":{"1":[{"2":"<p>Simulate receiving some bytes but the request not fully completing, and\nthe XHR entering the &#39;INTERACTIVE&#39; state.</p>\n"}]}},"4":[{"1":"partialResponse","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>A string to append to the response text.</p>\n"}]}},{"1":"opt_headers","2":{"1":true,"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Simulated response headers.</p>\n"}]}}]},{"1":{"1":"simulateProgress","2":{"1":"closure/goog/testing/net/xhrio.js","2":582,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L582"},"3":{"1":[{"2":"<p>Simulates the Xhr progress event.</p>\n"}]}},"4":[{"1":"lengthComputable","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether progress is measurable.</p>\n"}]}},{"1":"loaded","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>Amount of work already performed.</p>\n"}]}},{"1":"total","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>Total amount of work to perform.</p>\n"}]}},{"1":"opt_isDownload","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Whether the progress is from a download or\nupload.</p>\n"}]}}]},{"1":{"1":"simulateReady","2":{"1":"closure/goog/testing/net/xhrio.js","2":567,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L567"},"3":{"1":[{"2":"<p>Simulates the Xhr is ready for the next request.</p>\n"}]}}},{"1":{"1":"simulateReadyStateChange","2":{"1":"closure/goog/testing/net/xhrio.js","2":488,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L488"},"3":{"1":[{"2":"<p>Simulates changing to the new ready state.</p>\n"}]}},"4":[{"1":"readyState","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>Ready state to change to.</p>\n"}]}}]},{"1":{"1":"simulateResponse","2":{"1":"closure/goog/testing/net/xhrio.js","2":534,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L534"},"3":{"1":[{"2":"<p>Simulates receiving a response.</p>\n"}]}},"4":[{"1":"statusCode","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>Simulated status code.</p>\n"}]}},{"1":"response","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"Document"}},{"4":{"1":"ArrayBuffer"}},{"10":true}]}},"3":{"1":[{"2":"<p>Simulated response.</p>\n"}]}},{"1":"opt_headers","2":{"1":true,"6":{"1":[{"4":{"1":"Object","4":true}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Simulated response headers.</p>\n"}]}}]},{"1":{"1":"simulateTimeout","2":{"1":"closure/goog/testing/net/xhrio.js","2":339,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L339"},"3":{"1":[{"2":"<p>Causes timeout events to be fired.</p>\n"}]}}},{"1":{"1":"unlisten","2":{"1":"closure/goog/events/listenable.js","2":153,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L153"},"3":{"1":[{"2":"<p>Removes an event listener which was added with listen() or listenOnce().</p>\n"}]},"8":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#unlisten"}}},"2":["SCOPE","EVENTOBJ"],"4":[{"1":"type","2":{"6":{"1":[{"4":{"1":"string","4":true}},{"4":{"1":"goog.events.EventId","3":{"1":"goog.events.EventId.html"},"5":[{"6":{"1":[{"4":{"1":"EVENTOBJ"}},{"10":true}]}}]}}]}},"3":{"1":[{"2":"<p>The event type id.</p>\n"}]}},{"1":"listener","2":{"3":{"2":{"6":{"1":[{"4":{"1":"SCOPE"}},{"10":true}]}},"3":[{"6":{"1":[{"4":{"1":"EVENTOBJ"}},{"10":true}]}}],"4":{"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}}}},"3":{"1":[{"2":"<p>Callback\nmethod.</p>\n"}]}},{"1":"opt_useCapture","2":{"1":true,"6":{"1":[{"4":{"1":"boolean","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Whether to fire in capture phase\n(defaults to false).</p>\n"}]}},{"1":"opt_listenerScope","2":{"1":true,"6":{"1":[{"4":{"1":"SCOPE"}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Object in whose scope to call\nthe listener.</p>\n"}]}}],"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether any listener was removed.</p>\n"}]}}},{"1":{"1":"unlistenByKey","2":{"1":"closure/goog/events/listenable.js","2":164,"3":"https://github.com/google/closure-library/blob/master/closure/goog/events/listenable.js#L164"},"3":{"1":[{"2":"<p>Removes an event listener which was added with listen() by the key\nreturned by listen().</p>\n"}]},"8":{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html#unlistenByKey"}}},"4":[{"1":"key","2":{"4":{"1":"goog.events.ListenableKey","3":{"1":"goog.events.ListenableKey.html"}}},"3":{"1":[{"2":"<p>The key returned by\nlisten() or listenOnce().</p>\n"}]}}],"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether any listener was removed.</p>\n"}]}}}],"16":[{"1":{"1":"creationStack","2":{"1":"closure/goog/disposable/disposable.js","2":44,"3":"https://github.com/google/closure-library/blob/master/closure/goog/disposable/disposable.js#L44"},"3":{"1":[{"2":"<p>If monitoring the goog.Disposable instances is enabled, stores the creation\nstack trace of the Disposable instance.</p>\n"}]},"7":{"1":"goog.Disposable","3":{"1":"goog.Disposable.html#creationStack"}}},"2":{"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}}},{"1":{"1":"headers","2":{"1":"closure/goog/testing/net/xhrio.js","2":54,"3":"https://github.com/google/closure-library/blob/master/closure/goog/testing/net/xhrio.js#L54"},"3":{"1":[{"2":"<p>Map of default headers to add to every request, use:\nXhrIo.headers.set(name, value)</p>\n"}]}},"2":{"4":{"1":"goog.structs.Map","3":{"1":"goog.structs.Map.html"}}}}],"18":[{"1":"goog.events.EventTarget","3":{"1":"goog.events.EventTarget.html"}},{"1":"goog.Disposable","3":{"1":"goog.Disposable.html"}}],"19":[{"1":"goog.disposable.IDisposable","3":{"1":"goog.disposable.IDisposable.html"}},{"1":"goog.events.Listenable","3":{"1":"goog.events.Listenable.html"}}],"21":{"1":{"1":"goog.testing.net.XhrIo","3":{"1":"goog.testing.net.XhrIo.html"}},"2":4},"23":"goog.testing.net.XhrIo.html","24":"goog.testing.net.XhrIo"}]}}