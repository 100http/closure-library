[null,[[["goog.functions",null,null,null,[null,31,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L31"]],null,[[]],[],null,[],null,[[["FALSE",[null,49,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L49"]],[[[null,"<p>Always returns false.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["arg0",[null,null,null,null,null,null,null,1]]],[null,[null,null,null,["boolean",null,null,1,[]]]],[]],[["NULL",[null,67,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L67"]],[[[null,"<p>Always returns NULL.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["arg0",[null,null,null,null,null,null,null,1]]],[null,[null,null,null,null,null,null,null,null,null,1]],[]],[["TRUE",[null,58,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L58"]],[[[null,"<p>Always returns true.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["arg0",[null,null,null,null,null,null,null,1]]],[null,[null,null,null,["boolean",null,null,1,[]]]],[]],[["and",[null,247,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L247"]],[[[null,"<p>Creates a function that returns true if each of its components evaluates\nto true. The components are evaluated in order, and the evaluation will be\nshort-circuited as soon as a function returns false.\nFor example, (goog.functions.and(f, g))(x) is equivalent to f(x) &amp;&amp; g(x).</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["var_args",[null,1,null,null,null,[[[null,null,null,["Function",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>A list of functions.</p>\n"]]]]],[null,[null,null,[null,null,[[null,1,null,null,null,null,null,1]],[null,null,null,["boolean",null,null,1,[]]]]],[[[null,"<p>A function that ANDs its component\nfunctions.</p>\n"]]]],[]],[["cacheReturnValue",[null,356,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L356"]],[[[null,"<p>Gives a wrapper function that caches the return value of a parameterless\nfunction when first called.</p>\n<p>When called for the first time, the given function is called and its\nreturn value is cached (thus this is only appropriate for idempotent\nfunctions).  Subsequent calls will return the cached return value. This\nallows the evaluation of expensive functions to be delayed until first used.</p>\n<p>To cache the return values of functions with parameters, see goog.memoize.</p>\n"]]],null,null,null,null,null,[],[]],["T"],null,[["fn",[null,null,[null,null,[],[null,null,null,null,null,[[[null,null,null,["T",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>A function to lazily evaluate.</p>\n"]]]]],[null,[null,null,[null,null,[],[null,null,null,["T",null,null,null,[]]]]],[[[null,"<p>A wrapped version the function.</p>\n"]]]],[]],[["compose",[null,199,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L199"]],[[[null,"<p>Creates the composition of the functions passed in.\nFor example, (goog.functions.compose(f, g))(a) is equivalent to f(g(a)).</p>\n"]]],null,null,null,null,null,[],[]],["T"],null,[["fn",[null,null,[null,null,[[null,1,null,null,null,null,null,1]],[null,null,null,null,null,[[[null,null,null,["T",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>The final function.</p>\n"]]]],["var_args",[null,1,null,null,null,[[[null,null,null,["Function",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>A list of functions.</p>\n"]]]]],[null,[null,null,[null,null,[[null,1,null,null,null,null,null,1]],[null,null,null,["T",null,null,null,[]]]]],[[[null,"<p>The composition of all inputs.</p>\n"]]]],[]],[["constant",[null,40,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L40"]],[[[null,"<p>Creates a function that always returns the same value.</p>\n"]]],null,null,null,null,null,[],[]],["T"],null,[["retValue",[null,null,null,null,null,[[[null,null,null,["T",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The value to return.</p>\n"]]]]],[null,[null,null,[null,null,[],[null,null,null,["T",null,null,null,[]]]]],[[[null,"<p>The new function.</p>\n"]]]],[]],[["create",[null,314,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L314"]],[[[null,"<p>Generic factory function to construct an object given the constructor\nand the arguments. Intended to be bound to create object factories.</p>\n<p>Example:</p>\n<p>var factory &#61; goog.partial(goog.functions.create, Class);</p>\n"]]],null,null,null,null,null,[],[]],["T"],null,[["constructor",[null,null,[1,[null,null,null,null,null,[[[null,null,null,["T",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,1,null,null,null,null,null,1]]]],[[[null,"<p>The constructor for the Object.</p>\n"]]]],["var_args",[null,1,null,null,null,null,1],[[[null,"<p>The arguments to be passed to the constructor.</p>\n"]]]]],[null,[null,null,null,["T",null,null,null,[]]],[[[null,"<p>A new instance of the class given in <code>constructor</code>.</p>\n"]]]],[]],[["debounce",[null,419,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L419"]],[[[null,"<p>Wraps a function to allow it to be called, at most, once per interval\n(specified in milliseconds). If the wrapper function is called N times within\nthat interval, only the Nth call will go through.</p>\n<p>This is particularly useful for batching up repeated actions where the\nlast action should win. This can be used, for example, for refreshing an\nautocomplete pop-up every so often rather than updating with every keystroke,\nsince the final text typed by the user is the one that should produce the\nfinal autocomplete results. For more stateful debouncing with support for\npausing, resuming, and canceling debounced actions, use\n<code>goog.async.Debouncer</code>.</p>\n"]]],null,null,null,null,null,[],[]],["SCOPE"],null,[["f",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,1,null,null,null,null,null,1]],[null,null,null,null,null,null,null,1]]],[[[null,"<p>Function to call.</p>\n"]]]],["interval",[null,null,null,["number",null,null,1,[]]],[[[null,"<p>Interval over which to debounce. The function will\nonly be called after the full interval has elapsed since the last call.</p>\n"]]]],["opt_scope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call the function.</p>\n"]]]]],[null,[null,null,[null,null,[[null,1,null,null,null,null,null,1]],[null,null,null,null,null,null,null,null,1]]],[[[null,"<p>Wrapped function.</p>\n"]]]],[]],[["equalTo",[null,184,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L184"]],[[[null,"<p>Creates a function that returns whether its argument equals the given value.</p>\n<p>Example:\nvar key &#61; goog.object.findKey(obj, goog.functions.equalTo(&#39;needle&#39;));</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["value",[null,null,null,null,null,null,1],[[[null,"<p>The value to compare to.</p>\n"]]]],["opt_useLooseComparison",[1,null,null,null,null,[[[null,null,null,["boolean",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Whether to use a loose (&#61;&#61;)\ncomparison rather than a strict (&#61;&#61;&#61;) one. Defaults to false.</p>\n"]]]]],[null,[null,null,[null,null,[[null,null,null,null,null,null,1]],[null,null,null,["boolean",null,null,1,[]]]]],[[[null,"<p>The new function.</p>\n"]]]],[]],[["error",[null,90,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L90"]],[[[null,"<p>Creates a function that always throws an error with the given message.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["message",[null,null,null,["string",null,null,1,[]]],[[[null,"<p>The error message.</p>\n"]]]]],[null,[null,null,null,["Function",null,null,null,[]]],[[[null,"<p>The error-throwing function.</p>\n"]]]],[]],[["fail",[null,102,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L102"]],[[[null,"<p>Creates a function that throws the given object.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["err",[null,null,null,null,null,null,1],[[[null,"<p>An object to be thrown.</p>\n"]]]]],[null,[null,null,null,["Function",null,null,null,[]]],[[[null,"<p>The error-throwing function.</p>\n"]]]],[]],[["identity",[null,80,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L80"]],[[[null,"<p>A simple function that returns the first argument of whatever is passed\ninto it.</p>\n"]]],null,null,null,null,null,[],[]],["T"],null,[["opt_returnValue",[1,null,null,null,null,[[[null,null,null,["T",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The single value that will be returned.</p>\n"]]]],["var_args",[null,1,null,null,null,null,1],[[[null,"<p>Optional trailing arguments. These are ignored.</p>\n"]]]]],[null,[null,null,null,["T",null,null,null,[]]],[[[null,"<p>The first argument passed in, or undefined if nothing was passed.</p>\n"]]]],[]],[["lock",[null,115,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L115"]],[[[null,"<p>Given a function, create a function that keeps opt_numArgs arguments and\nsilently discards all additional arguments.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["f",[null,null,null,null,null,[[[null,null,null,["Function",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The original function.</p>\n"]]]],["opt_numArgs",[1,null,null,null,null,[[[null,null,null,["number",null,null,1,[]]],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The number of arguments to keep. Defaults to 0.</p>\n"]]]]],[null,[null,null,null,["Function",null,null,null,[]]],[[[null,"<p>A version of f that only keeps the first opt_numArgs\narguments.</p>\n"]]]],[]],[["not",[null,293,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L293"]],[[[null,"<p>Creates a function that returns the Boolean opposite of a provided function.\nFor example, (goog.functions.not(f))(x) is equivalent to !f(x).</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["f",[null,null,null,["Function",null,null,null,[]]],[[[null,"<p>The original function.</p>\n"]]]]],[null,[null,null,[null,null,[[null,1,null,null,null,null,null,1]],[null,null,null,["boolean",null,null,1,[]]]]],[[[null,"<p>A function that delegates to f and returns\nopposite.</p>\n"]]]],[]],[["nth",[null,129,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L129"]],[[[null,"<p>Creates a function that returns its nth argument.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["n",[null,null,null,["number",null,null,1,[]]],[[[null,"<p>The position of the return argument.</p>\n"]]]]],[null,[null,null,null,["Function",null,null,null,[]]],[[[null,"<p>A new function.</p>\n"]]]],[]],[["once",[null,385,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L385"]],[[[null,"<p>Wraps a function to allow it to be called, at most, once. All\nadditional calls are no-ops.</p>\n<p>This is particularly useful for initialization functions\nthat should be called, at most, once.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["f",[null,null,[null,null,[],[null,null,null,null,null,null,1]]],[[[null,"<p>Function to call.</p>\n"]]]]],[null,[null,null,[null,null,[],[null,null,null,null,null,null,null,null,1]]],[[[null,"<p>Wrapped function.</p>\n"]]]],[]],[["or",[null,271,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L271"]],[[[null,"<p>Creates a function that returns true if any of its components evaluates\nto true. The components are evaluated in order, and the evaluation will be\nshort-circuited as soon as a function returns true.\nFor example, (goog.functions.or(f, g))(x) is equivalent to f(x) || g(x).</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["var_args",[null,1,null,null,null,[[[null,null,null,["Function",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>A list of functions.</p>\n"]]]]],[null,[null,null,[null,null,[[null,1,null,null,null,null,null,1]],[null,null,null,["boolean",null,null,1,[]]]]],[[[null,"<p>A function that ORs its component\nfunctions.</p>\n"]]]],[]],[["partialRight",[null,149,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L149"]],[[[null,"<p>Like goog.partial(), except that arguments are added after arguments to the\nreturned function.</p>\n<p>Usage:\nfunction f(arg1, arg2, arg3, arg4) { ... }\nvar g &#61; goog.functions.partialRight(f, arg3, arg4);\ng(arg1, arg2);</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["fn",[null,null,null,["Function",null,null,null,[]]],[[[null,"<p>A function to partially apply.</p>\n"]]]],["var_args",[null,1,null,null,null,null,1],[[[null,"<p>Additional arguments that are partially applied to fn\nat the end.</p>\n"]]]]],[null,[null,null,null,["Function",null,null,null,[]]],[[[null,"<p>A partially-applied form of the function goog.partial()\nwas invoked as a method of.</p>\n"]]]],[]],[["rateLimit",[null,495,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L495"]],[[[null,"<p>Wraps a function to allow it to be called, at most, once per interval\n(specified in milliseconds). If the wrapper function is called N times within\nthat interval, only the 1st call will go through.</p>\n<p>This is particularly useful for limiting repeated user requests where the\nfirst request is guaranteed to have all the data required to perform the\nfinal action, so there&#39;s no need to wait until the end of the interval before\nsending the request out.</p>\n"]]],null,null,null,null,null,[],[]],["SCOPE"],null,[["f",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,1,null,null,null,null,null,1]],[null,null,null,null,null,null,null,1]]],[[[null,"<p>Function to call.</p>\n"]]]],["interval",[null,null,null,["number",null,null,1,[]]],[[[null,"<p>Interval over which to rate-limit. The function will\nonly be called once per interval, and ignored for the remainer of the\ninterval.</p>\n"]]]],["opt_scope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call the function.</p>\n"]]]]],[null,[null,null,[null,null,[[null,1,null,null,null,null,null,1]],[null,null,null,null,null,null,null,null,1]]],[[[null,"<p>Wrapped function.</p>\n"]]]],[]],[["sequence",[null,224,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L224"]],[[[null,"<p>Creates a function that calls the functions passed in in sequence, and\nreturns the value of the last function. For example,\n(goog.functions.sequence(f, g))(x) is equivalent to f(x),g(x).</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["var_args",[null,1,null,null,null,[[[null,null,null,["Function",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>A list of functions.</p>\n"]]]]],[null,[null,null,null,["Function",null,null,null,[]]],[[[null,"<p>A function that calls all inputs in sequence.</p>\n"]]]],[]],[["throttle",[null,448,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L448"]],[[[null,"<p>Wraps a function to allow it to be called, at most, once per interval\n(specified in milliseconds). If the wrapper function is called N times in\nthat interval, both the 1st and the Nth calls will go through.</p>\n<p>This is particularly useful for limiting repeated user requests where the\nthe last action should win, but you also don&#39;t want to wait until the end of\nthe interval before sending a request out, as it leads to a perception of\nslowness for the user.</p>\n"]]],null,null,null,null,null,[],[]],["SCOPE"],null,[["f",[null,null,[null,[null,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[null,1,null,null,null,null,null,1]],[null,null,null,null,null,null,null,1]]],[[[null,"<p>Function to call.</p>\n"]]]],["interval",[null,null,null,["number",null,null,1,[]]],[[[null,"<p>Interval over which to throttle. The function can\nonly be called once per interval.</p>\n"]]]],["opt_scope",[1,null,null,null,null,[[[null,null,null,["SCOPE",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Object in whose scope to call the function.</p>\n"]]]]],[null,[null,null,[null,null,[[null,1,null,null,null,null,null,1]],[null,null,null,null,null,null,null,null,1]]],[[[null,"<p>Wrapped function.</p>\n"]]]],[]],[["withReturnValue",[null,168,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L168"]],[[[null,"<p>Given a function, create a new function that swallows its return value\nand replaces it with a new one.</p>\n"]]],null,null,null,null,null,[],[]],["T"],null,[["f",[null,null,null,null,null,[[[null,null,null,["Function",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>A function.</p>\n"]]]],["retValue",[null,null,null,null,null,[[[null,null,null,["T",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>A new return value.</p>\n"]]]]],[null,[null,null,[null,null,[[null,1,null,null,null,null,null,1]],[null,null,null,["T",null,null,null,[]]]]],[[[null,"<p>A new function.</p>\n"]]]],[]]],[],null,[],[],null,[],[],[[["goog.functions.CACHE_RETURN_VALUE",[null,338,null,[null,null,"closure/goog/functions/functions.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/functions/functions.js#L338"]],[[[null,"<p>Whether the return value cache should be used.\nThis should only be used to disable caches when testing.</p>\n"]]],null,null,[1],null,null,[],[]],[null,null,null,["boolean",null,null,1,[]]]]],[["goog.functions",null,[null,null,[null,null,"goog.functions.html"]],null,[]],null,null,1],null,"goog.functions.html","goog.functions",[],[],[],[]]]]]