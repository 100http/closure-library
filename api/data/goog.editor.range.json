[null,[[["goog.editor.range",null,null,null,[null,21,null,[null,null,"closure/goog/editor/range.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/editor/range.js#L21"]],[[["NormalizedCaretRange_",null,[[[null,"<p>Saves the range using carets, but normalizes text nodes when carets\nare removed.</p>\n"]]],null,[null,null,"goog.editor.range.NormalizedCaretRange_.html"]],["Point",null,[[[null,"<p>One endpoint of a range, represented as a Node and and offset.</p>\n"]]],null,[null,null,"goog.editor.range.Point.html"]]],[],[]],[[]],[],null,[],null,[[["expand",[null,87,null,[null,null,"closure/goog/editor/range.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/editor/range.js#L87"]],[[[null,"<p>Given a range, expand the range to include outer tags if the full contents of\nthose tags are entirely selected.  This essentially changes the dom position,\nbut not the visible position of the range.\nEx. <code></code></p><code><li>foo</li></code> if &#34;foo&#34; is selected, instead of returning\nstart and end nodes as the foo text node, return the li.\n"]]],null,null,null,null,null,[],[]],[],null,[["range",[null,null,null,null,null,[[[null,null,null,["goog.dom.AbstractRange",null,[null,null,[null,null,"goog.dom.AbstractRange.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The range.</p>\n"]]]],["opt_stopNode",[1,null,null,null,null,[[[null,null,null,["Node",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1],[null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>Optional node to stop expanding past.</p>\n"]]]]],[null,[null,null,null,["goog.dom.AbstractRange",null,[null,null,[null,null,"goog.dom.AbstractRange.html"]],null,[]]],[[[null,"<p>The expanded range.</p>\n"]]]],[]],[["getDeepEndPoint",[null,298,null,[null,null,"closure/goog/editor/range.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/editor/range.js#L298"]],[[[null,"<p>Get the deepest point in the DOM that&#39;s equivalent to the endpoint of the\ngiven range.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["range",[null,null,null,null,null,[[[null,null,null,["goog.dom.AbstractRange",null,[null,null,[null,null,"goog.dom.AbstractRange.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>A range.</p>\n"]]]],["atStart",[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>True for the start point, false for the end point.</p>\n"]]]]],[null,[null,null,null,["goog.editor.range.Point",null,[null,null,[null,null,"goog.editor.range.Point.html"]],null,[]]],[[[null,"<p>The end point, expressed as a node\nand an offset.</p>\n"]]]],[]],[["intersectsTag",[null,447,null,[null,null,"closure/goog/editor/range.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/editor/range.js#L447"]],[[[null,"<p>Returns whether the given range intersects with any instance of the given\ntag.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["range",[null,null,null,null,null,[[[null,null,null,["goog.dom.AbstractRange",null,[null,null,[null,null,"goog.dom.AbstractRange.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The range to check.</p>\n"]]]],["tagName",[null,null,null,["goog.dom.TagName",null,[null,null,[null,null,"goog.dom.TagName.html"]],null,[]]],[[[null,"<p>The name of the tag.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether the given range intersects with any instance of\nthe given tag.</p>\n"]]]],[]],[["isEditable",[null,421,null,[null,null,"closure/goog/editor/range.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/editor/range.js#L421"]],[[[null,"<p>Checks if a range is completely inside an editable region.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["range",[null,null,null,null,null,[[[null,null,null,["goog.dom.AbstractRange",null,[null,null,[null,null,"goog.dom.AbstractRange.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The range to test.</p>\n"]]]]],[null,[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>Whether the range is completely inside an editable region.</p>\n"]]]],[]],[["narrow",[null,46,null,[null,null,"closure/goog/editor/range.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/editor/range.js#L46"]],[[[null,"<p>Given a range and an element, create a narrower range that is limited to the\nboundaries of the element. If the range starts (or ends) outside the\nelement, the narrowed range&#39;s start point (or end point) will be the\nleftmost (or rightmost) leaf of the element.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["range",[null,null,null,null,null,[[[null,null,null,["goog.dom.AbstractRange",null,[null,null,[null,null,"goog.dom.AbstractRange.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The range.</p>\n"]]]],["el",[null,null,null,null,null,[[[null,null,null,["Element",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The element to limit the range to.</p>\n"]]]]],[null,[null,null,null,null,null,[[[null,null,null,["goog.dom.AbstractRange",null,[null,null,[null,null,"goog.dom.AbstractRange.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>A new narrowed range, or null if the\nelement does not contain any part of the given range.</p>\n"]]]],[]],[["normalize",[null,331,null,[null,null,"closure/goog/editor/range.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/editor/range.js#L331"]],[[[null,"<p>Given a range in the current DOM, create a factory for a range that\nrepresents the same selection in a normalized DOM. The factory function\nshould be invoked after the DOM is normalized.</p>\n<p>All browsers do a bad job preserving ranges across DOM normalization.\nThe issue is best described in this 5-year-old bug report:\nhttps://bugzilla.mozilla.org/show_bug.cgi?id&#61;191864\nFor most applications, this isn&#39;t a problem. The browsers do a good job\nhandling un-normalized text, so there&#39;s usually no reason to normalize.</p>\n<p>The exception to this rule is the rich text editing commands\nexecCommand and queryCommandValue, which will fail often if there are\nun-normalized text nodes.</p>\n<p>The factory function creates new ranges so that we can normalize the DOM\nwithout problems. It must be created before any normalization happens,\nand invoked after normalization happens.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["range",[null,null,null,null,null,[[[null,null,null,["goog.dom.AbstractRange",null,[null,null,[null,null,"goog.dom.AbstractRange.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The range to normalize. It may\nbecome invalid after body.normalize() is called.</p>\n"]]]]],[null,[null,null,[null,null,[],[null,null,null,null,null,[[[null,null,null,["goog.dom.AbstractRange",null,[null,null,[null,null,"goog.dom.AbstractRange.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]]]],[[[null,"<p>A factory for a normalized\nrange. Should be called after body.normalize() is called.</p>\n"]]]],[]],[["normalizeNode",[null,244,null,[null,null,"closure/goog/editor/range.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/editor/range.js#L244"]],[[[null,"<p>Normalizes the given node.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["node",[null,null,null,null,null,[[[null,null,null,["Node",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The node to normalize.</p>\n"]]]]],null,[]],[["placeCursorNextTo",[null,182,null,[null,null,"closure/goog/editor/range.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/editor/range.js#L182"]],[[[null,"<p>Position the cursor immediately to the left or right of &#34;node&#34;.\nIn Firefox, the selection parent is outside of &#34;node&#34;, so the cursor can\neffectively be moved to the end of a link node, without being considered\ninside of it.\nNote: This does not always work in WebKit. In particular, if you try to\nplace a cursor to the right of a link, typing still puts you in the link.\nBug: http://bugs.webkit.org/show_bug.cgi?id&#61;17697</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["node",[null,null,null,null,null,[[[null,null,null,["Node",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The node to position the cursor relative to.</p>\n"]]]],["toLeft",[null,null,null,["boolean",null,null,1,[]]],[[[null,"<p>True to place it to the left, false to the right.</p>\n"]]]]],[null,[null,null,null,["goog.dom.AbstractRange",null,[null,null,[null,null,"goog.dom.AbstractRange.html"]],null,[]]],[[[null,"<p>The newly selected range.</p>\n"]]]],[]],[["rangePreservingNormalize",[null,262,null,[null,null,"closure/goog/editor/range.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/editor/range.js#L262"]],[[[null,"<p>Normalizes the node, preserving a range of the document.</p>\n<p>May also normalize things outside the node, if it is more efficient to do so.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["node",[null,null,null,null,null,[[[null,null,null,["Node",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The node to normalize.</p>\n"]]]],["range",[null,null,null,null,null,[[[null,null,null,["goog.dom.AbstractRange",null,[null,null,[null,null,"goog.dom.AbstractRange.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The range to normalize.</p>\n"]]]]],[null,[null,null,null,null,null,[[[null,null,null,["goog.dom.AbstractRange",null,[null,null,[null,null,"goog.dom.AbstractRange.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The range, adjusted for normalization.</p>\n"]]]],[]],[["saveUsingNormalizedCarets",[null,581,null,[null,null,"closure/goog/editor/range.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/editor/range.js#L581"]],[[[null,"<p>Saves the range by inserting carets into the HTML.</p>\n<p>Unlike the regular saveUsingCarets, this SavedRange normalizes text nodes.\nBrowsers have other bugs where they don&#39;t handle split text nodes in\ncontentEditable regions right.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["range",[null,null,null,null,null,[[[null,null,null,["goog.dom.AbstractRange",null,[null,null,[null,null,"goog.dom.AbstractRange.html"]],null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The abstract range object.</p>\n"]]]]],[null,[null,null,null,["goog.dom.SavedCaretRange",null,[null,null,[null,null,"goog.dom.SavedCaretRange.html"]],null,[]]],[[[null,"<p>A saved caret range that normalizes\ntext nodes.</p>\n"]]]],[]],[["selectNodeStart",[null,164,null,[null,null,"closure/goog/editor/range.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/editor/range.js#L164"]],[[[null,"<p>Cause the window&#39;s selection to be the start of this node.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["node",[null,null,null,null,null,[[[null,null,null,["Node",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The node to select the start of.</p>\n"]]]]],null,[]],[["selectionPreservingNormalize",[null,200,null,[null,null,"closure/goog/editor/range.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/editor/range.js#L200"]],[[[null,"<p>Normalizes the node, preserving the selection of the document.</p>\n<p>May also normalize things outside the node, if it is more efficient to do so.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["node",[null,null,null,null,null,[[[null,null,null,["Node",null,null,null,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>The node to normalize.</p>\n"]]]]],null,[]]],[],null,[],[],null,[],[],[],[["goog.editor.range",null,[null,null,[null,null,"goog.editor.range.html"]],null,[]],null,null,1],null,"goog.editor.range.html","goog.editor.range",[],[],[],[]]]]]