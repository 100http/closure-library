[null,[[["goog.html.SafeStyleSheet",null,null,null,[null,77,null,[null,null,"closure/goog/html/safestylesheet.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/html/safestylesheet.js#L77"]],null,[[[null,"<p>A string-like object which represents a CSS style sheet and that carries the\nsecurity type contract that its value, as a string, will not cause untrusted\nscript execution (XSS) when evaluated as CSS in a browser.</p>\n<p>Instances of this type must be created via the factory method\n<code>goog.html.SafeStyleSheet.fromConstant</code> and not by invoking its\nconstructor. The constructor intentionally takes no parameters and the type\nis immutable; hence only a default instance corresponding to the empty string\ncan be obtained via constructor invocation.</p>\n<p>A SafeStyleSheet&#39;s string representation can safely be interpolated as the\ncontent of a style element within HTML. The SafeStyleSheet string should\nnot be escaped before interpolation.</p>\n<p>Values of this type must be composable, i.e. for any two values\n<code>styleSheet1</code> and <code>styleSheet2</code> of this type,\n<code>goog.html.SafeStyleSheet.unwrap(styleSheet1) &#43;\ngoog.html.SafeStyleSheet.unwrap(styleSheet2)</code> must itself be a value that\nsatisfies the SafeStyleSheet type constraint. This requirement implies that\nfor any value <code>styleSheet</code> of this type,\n<code>goog.html.SafeStyleSheet.unwrap(styleSheet1)</code> must end in\n&#34;beginning of rule&#34; context.</p>\n<p>A SafeStyleSheet can be constructed via security-reviewed unchecked\nconversions. In this case producers of SafeStyleSheet must ensure themselves\nthat the SafeStyleSheet does not contain unsafe script. Note in particular\nthat <code>&amp;lt;</code> is dangerous, even when inside CSS strings, and so should\nalways be forbidden or CSS-escaped in user controlled input. For example, if\n<code>&amp;lt;/style&amp;gt;&amp;lt;script&amp;gt;evil&amp;lt;/script&amp;gt;&#34;</code> were interpolated\ninside a CSS string, it would break out of the context of the original\nstyle element and <code>evil</code> would execute. Also note that within an HTML\nstyle (raw text) element, HTML character references, such as\n<code>&amp;amp;lt;</code>, are not allowed. See</p>\n<p>http://www.w3.org/TR/html5/scripting-1.html#restrictions-for-contents-of-script-elements\n(similar considerations apply to the style element).</p>\n"]]],[null,null,null,1,null,null,1],null,[],null,[[["SafeStyleSheet.concat",[null,183,null,[null,null,"closure/goog/html/safestylesheet.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/html/safestylesheet.js#L183"]],[[[null,"<p>Creates a new SafeStyleSheet object by concatenating values.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["var_args",[null,1,null,null,null,[[[null,null,null,["goog.html.SafeStyleSheet",null,[null,null,[null,null,"goog.html.SafeStyleSheet.html"]],null,[]]],[null,null,null,["Array",null,null,1,[[null,null,null,["goog.html.SafeStyleSheet",null,[null,null,[null,null,"goog.html.SafeStyleSheet.html"]],null,[]]]]]]]]],[[[null,"<p>Values to concatenate.</p>\n"]]]]],[null,[null,null,null,["goog.html.SafeStyleSheet",null,[null,null,[null,null,"goog.html.SafeStyleSheet.html"]],null,[]]]],[]],[["SafeStyleSheet.createRule",[null,124,null,[null,null,"closure/goog/html/safestylesheet.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/html/safestylesheet.js#L124"]],[[[null,"<p>Creates a style sheet consisting of one selector and one style definition.\nUse <a href=\"goog.html.SafeStyleSheet.html#SafeStyleSheet.concat\"><code>goog.html.SafeStyleSheet.concat</code></a> to create longer style sheets.\nThis function doesn&#39;t support &#64;import, &#64;media and similar constructs.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["selector",[null,null,null,["string",null,null,1,[]]],[[[null,"<p>CSS selector, e.g. &#39;#id&#39; or &#39;tag .class, #id&#39;. We\nsupport CSS3 selectors: https://w3.org/TR/css3-selectors/#selectors.</p>\n"]]]],["style",[null,null,null,null,null,[[[null,null,null,["Object",null,null,1,[[null,null,null,["string",null,null,1,[]]],[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.string.Const",null,[null,null,[null,null,"goog.string.Const.html"]],null,[]]],[null,null,null,["goog.html.SafeUrl",null,[null,null,[null,null,"goog.html.SafeUrl.html"]],null,[]]],[null,null,null,["Array",null,null,1,[[null,null,null,null,null,[[[null,null,null,["string",null,null,1,[]]],[null,null,null,["goog.string.Const",null,[null,null,[null,null,"goog.string.Const.html"]],null,[]]],[null,null,null,["goog.html.SafeUrl",null,[null,null,[null,null,"goog.html.SafeUrl.html"]],null,[]]]]]]]]],[null,null,null,null,null,null,null,null,null,1]]]]]]],[null,null,null,["goog.html.SafeStyle",null,[null,null,[null,null,"goog.html.SafeStyle.html"]],null,[]]]]]],[[[null,"<p>Style\ndefinition associated with the selector.</p>\n"]]]]],[null,[null,null,null,["goog.html.SafeStyleSheet",null,[null,null,[null,null,"goog.html.SafeStyleSheet.html"]],null,[]]]],[[null,[null,null,null,null,null,[[[null,null,null,["Error",null,null,1,[]]],[null,null,null,null,null,null,null,null,null,1]]]],[[[null,"<p>If invalid selector is provided.</p>\n"]]]]]],[["SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse",[null,316,null,[null,null,"closure/goog/html/safestylesheet.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/html/safestylesheet.js#L316"]],[[[null,"<p>Package-internal utility method to create SafeStyleSheet instances.</p>\n"]]],null,null,null,null,null,[],[],[null,null,null,1]],[],null,[["styleSheet",[null,null,null,["string",null,null,1,[]]],[[[null,"<p>The string to initialize the SafeStyleSheet\nobject with.</p>\n"]]]]],[null,[null,null,null,["goog.html.SafeStyleSheet",null,[null,null,[null,null,"goog.html.SafeStyleSheet.html"]],null,[]]],[[[null,"<p>The initialized SafeStyleSheet object.</p>\n"]]]],[]],[["SafeStyleSheet.fromConstant",[null,215,null,[null,null,"closure/goog/html/safestylesheet.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/html/safestylesheet.js#L215"]],[[[null,"<p>Creates a SafeStyleSheet object from a compile-time constant string.</p>\n<p><code>styleSheet</code> must not have any &lt; characters in it, so that\nthe syntactic structure of the surrounding HTML is not affected.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["styleSheet",[null,null,null,["goog.string.Const",null,[null,null,[null,null,"goog.string.Const.html"]],null,[]]],[[[null,"<p>A compile-time-constant string from\nwhich to create a SafeStyleSheet.</p>\n"]]]]],[null,[null,null,null,["goog.html.SafeStyleSheet",null,[null,null,[null,null,"goog.html.SafeStyleSheet.html"]],null,[]]],[[[null,"<p>A SafeStyleSheet object initialized to\n<code>styleSheet</code>.</p>\n"]]]],[]],[["SafeStyleSheet.unwrap",[null,283,null,[null,null,"closure/goog/html/safestylesheet.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/html/safestylesheet.js#L283"]],[[[null,"<p>Performs a runtime check that the provided object is indeed a\nSafeStyleSheet object, and returns its value.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["safeStyleSheet",[null,null,null,["goog.html.SafeStyleSheet",null,[null,null,[null,null,"goog.html.SafeStyleSheet.html"]],null,[]]],[[[null,"<p>The object to extract from.</p>\n"]]]]],[null,[null,null,null,["string",null,null,1,[]]],[[[null,"<p>The safeStyleSheet object&#39;s contained string, unless\nthe run-time type check fails. In that case, <code>unwrap</code> returns an\ninnocuous string, or, if assertions are enabled, throws\n<code>goog.asserts.AssertionError</code>.</p>\n"]]]],[]]],[[["SafeStyleSheet.EMPTY",[null,342,null,[null,null,"closure/goog/html/safestylesheet.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/html/safestylesheet.js#L342"]],[[[null,"<p>A SafeStyleSheet instance corresponding to the empty string.</p>\n"]]],null,null,[1],null,null,[],[]],[null,null,null,["goog.html.SafeStyleSheet",null,[null,null,[null,null,"goog.html.SafeStyleSheet.html"]],null,[]]]]],[["SafeStyleSheet",[null,77,null,[null,null,"closure/goog/html/safestylesheet.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/html/safestylesheet.js#L77"]],[[[null,"<p>A string-like object which represents a CSS style sheet and that carries the\nsecurity type contract that its value, as a string, will not cause untrusted\nscript execution (XSS) when evaluated as CSS in a browser.</p>\n<p>Instances of this type must be created via the factory method\n<code>goog.html.SafeStyleSheet.fromConstant</code> and not by invoking its\nconstructor. The constructor intentionally takes no parameters and the type\nis immutable; hence only a default instance corresponding to the empty string\ncan be obtained via constructor invocation.</p>\n<p>A SafeStyleSheet&#39;s string representation can safely be interpolated as the\ncontent of a style element within HTML. The SafeStyleSheet string should\nnot be escaped before interpolation.</p>\n<p>Values of this type must be composable, i.e. for any two values\n<code>styleSheet1</code> and <code>styleSheet2</code> of this type,\n<code>goog.html.SafeStyleSheet.unwrap(styleSheet1) &#43;\ngoog.html.SafeStyleSheet.unwrap(styleSheet2)</code> must itself be a value that\nsatisfies the SafeStyleSheet type constraint. This requirement implies that\nfor any value <code>styleSheet</code> of this type,\n<code>goog.html.SafeStyleSheet.unwrap(styleSheet1)</code> must end in\n&#34;beginning of rule&#34; context.</p>\n<p>A SafeStyleSheet can be constructed via security-reviewed unchecked\nconversions. In this case producers of SafeStyleSheet must ensure themselves\nthat the SafeStyleSheet does not contain unsafe script. Note in particular\nthat <code>&amp;lt;</code> is dangerous, even when inside CSS strings, and so should\nalways be forbidden or CSS-escaped in user controlled input. For example, if\n<code>&amp;lt;/style&amp;gt;&amp;lt;script&amp;gt;evil&amp;lt;/script&amp;gt;&#34;</code> were interpolated\ninside a CSS string, it would break out of the context of the original\nstyle element and <code>evil</code> would execute. Also note that within an HTML\nstyle (raw text) element, HTML character references, such as\n<code>&amp;amp;lt;</code>, are not allowed. See</p>\n<p>http://www.w3.org/TR/html5/scripting-1.html#restrictions-for-contents-of-script-elements\n(similar considerations apply to the style element).</p>\n"]]],null,null,null,null,null,[],[[[["goog.html.SafeStyleSheet#fromConstant",null,[null,null,[null,null,"goog.html.SafeStyleSheet.html#SafeStyleSheet.fromConstant"]]]]]]],[],1,[],null,[]],[[["getTypedStringValue",[null,251,null,[null,null,"closure/goog/html/safestylesheet.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/html/safestylesheet.js#L251"]],[[[null,"<p>Returns this SafeStyleSheet&#39;s value as a string.</p>\n<p>IMPORTANT: In code where it is security relevant that an object&#39;s type is\nindeed <code>SafeStyleSheet</code>, use <code>goog.html.SafeStyleSheet.unwrap</code>\ninstead of this method. If in doubt, assume that it&#39;s security relevant. In\nparticular, note that goog.html functions which return a goog.html type do\nnot guarantee the returned instance is of the right type. For example:</p>\n <pre>\n var fakeSafeHtml &#61; new String(&#39;fake&#39;);\n fakeSafeHtml.__proto__ &#61; goog.html.SafeHtml.prototype;\n var newSafeHtml &#61; goog.html.SafeHtml.htmlEscape(fakeSafeHtml);\n // newSafeHtml is just an alias for fakeSafeHtml, it&#39;s passed through by\n // goog.html.SafeHtml.htmlEscape() as fakeSafeHtml\n // instanceof goog.html.SafeHtml.\n </pre>\n"]]],null,null,null,null,null,[["goog.string.TypedString",null,[null,null,[null,null,"goog.string.TypedString.html#getTypedStringValue"]],null,[]]],[[[["goog.html.SafeStyleSheet#unwrap",null,[null,null,[null,null,"goog.html.SafeStyleSheet.html#SafeStyleSheet.unwrap"]]]]]]],[],null,[],[null,[null,null,null,["string",null,null,1,[]]],[[[null,"<p>The wrapped string&#39;s value.</p>\n"]]]],[]],[["toString",[null,266,null,[null,null,"closure/goog/html/safestylesheet.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/html/safestylesheet.js#L266"]],[[[null,"<p>Returns a debug string-representation of this value.</p>\n<p>To obtain the actual string value wrapped in a SafeStyleSheet, use\n<code>goog.html.SafeStyleSheet.unwrap</code>.</p>\n"]]],null,null,null,null,null,[],[[[["goog.html.SafeStyleSheet#unwrap",null,[null,null,[null,null,"goog.html.SafeStyleSheet.html#SafeStyleSheet.unwrap"]]]]]]],[],null,[],[null,[null,null,null,["string",null,null,1,[]]]],[]]],[[["implementsGoogStringTypedString",[null,101,null,[null,null,"closure/goog/html/safestylesheet.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/html/safestylesheet.js#L101"]],[[[null,"<p>Interface marker of the TypedString interface.</p>\n<p>This property can be used to determine at runtime whether or not an object\nimplements this interface.  All implementations of this interface set this\nproperty to <code>true</code>.</p>\n"]]],null,null,[1],null,null,[["goog.string.TypedString",null,[null,null,[null,null,"goog.string.TypedString.html#implementsGoogStringTypedString"]],null,[]]],[]],[null,null,null,["boolean",null,null,1,[]]]]],null,[],[["goog.string.TypedString",null,[null,null,[null,null,"goog.string.TypedString.html"]],null,[]]],[],[["goog.html.SafeStyleSheet",null,[null,null,[null,null,"goog.html.SafeStyleSheet.html"]],null,[]],null,null,1],null,"goog.html.SafeStyleSheet.html","goog.html.SafeStyleSheet",[],[],[],[]]]]]