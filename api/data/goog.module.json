{"2":{"1":[{"1":"goog.module","5":{"1":"closure/goog/base.js","2":349,"3":"https://github.com/google/closure-library/blob/master/closure/goog/base.js#L349"},"6":{"1":[{"1":"BaseModule","2":"goog.module.BaseModule.html","3":{"1":[{"2":"<p>A basic module object that represents a module of Javascript code that can\nbe dynamically loaded.</p>\n"}]}},{"1":"Loader","2":"goog.module.Loader.html","3":{"1":[{"2":"<p>The dynamic loading functionality is defined as a class.</p>\n"}]}},{"1":"ModuleInfo","2":"goog.module.ModuleInfo.html","3":{"1":[{"2":"<p>A ModuleInfo object is used by the ModuleManager to hold information about a\nmodule of js code that may or may not yet be loaded into the environment.</p>\n"}]}},{"1":"ModuleLoadCallback","2":"goog.module.ModuleLoadCallback.html","3":{"1":[{"2":"<p>Class used to encapsulate the callbacks to be called when a module loads.</p>\n"}]}},{"1":"ModuleLoader","2":"goog.module.ModuleLoader.html","3":{"1":[{"2":"<p>A class that loads Javascript modules.</p>\n"}]}},{"1":"ModuleManager","2":"goog.module.ModuleManager.html","3":{"1":[{"2":"<p>The ModuleManager keeps track of all modules in the environment.</p>\n"}]}}],"3":[{"1":"AbstractModuleLoader","2":"goog.module.AbstractModuleLoader.html","3":{"1":[{"2":"<p>An interface that loads JavaScript modules.</p>\n"}]},"4":{"5":true}}]},"7":{"1":[{"2":"<p>Defines a module in Closure.</p>\n<p>Marks that this file must be loaded as a module and claims the namespace.</p>\n<p>A namespace may only be defined once in a codebase. It may be defined using\ngoog.provide() or goog.module().</p>\n<p>goog.module() has three requirements:</p>\n<ul><li>goog.module may not be used in the same file as goog.provide.</li><li>goog.module must be the first statement in the file.</li><li>only one goog.module is allowed per file.</li></ul>\n<p>When a goog.module annotated file is loaded, it is enclosed in\na strict function closure. This means that:</p>\n<ul><li>any variables declared in a goog.module file are private to the file\n(not global), though the compiler is expected to inline the module.</li><li>The code must obey all the rules of &#34;strict&#34; JavaScript.</li><li>the file will be marked as &#34;use strict&#34;</li></ul>\n<p>NOTE: unlike goog.provide, goog.module does not declare any symbols by\nitself. If declared symbols are desired, use\ngoog.module.declareLegacyNamespace().</p>\n<p>See the public goog.module proposal: http://goo.gl/Va1hin</p>\n"}]},"8":{},"12":[{"1":{"1":"declareLegacyNamespace","2":{"1":"closure/goog/base.js","2":434,"3":"https://github.com/google/closure-library/blob/master/closure/goog/base.js#L434"},"3":{"1":[{"2":"<p>Provide the module&#39;s exports as a globally accessible object under the\nmodule&#39;s declared name.  This is intended to ease migration to goog.module\nfor files that have existing usages.</p>\n"}]}}},{"1":{"1":"get","2":{"1":"closure/goog/base.js","2":390,"3":"https://github.com/google/closure-library/blob/master/closure/goog/base.js#L390"},"3":{}},"4":[{"1":"name","2":{"4":{"1":"string","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String"},"4":true}},"3":{"1":[{"2":"<p>The module identifier.</p>\n"}]}}],"5":{"3":{"1":[{"2":"<p>The module exports for an already loaded module or null.</p>\n<p>Note: This is not an alternative to goog.require, it does not\nindicate a hard dependency, instead it is used to indicate\nan optional dependency or to access the exports of a module\nthat has already been loaded.</p>\n"}]}}}],"14":{"1":{"1":"module","2":{"1":"closure/goog/base.js","2":349,"3":"https://github.com/google/closure-library/blob/master/closure/goog/base.js#L349"},"3":{"1":[{"2":"<p>Defines a module in Closure.</p>\n<p>Marks that this file must be loaded as a module and claims the namespace.</p>\n<p>A namespace may only be defined once in a codebase. It may be defined using\ngoog.provide() or goog.module().</p>\n<p>goog.module() has three requirements:</p>\n<ul><li>goog.module may not be used in the same file as goog.provide.</li><li>goog.module must be the first statement in the file.</li><li>only one goog.module is allowed per file.</li></ul>\n<p>When a goog.module annotated file is loaded, it is enclosed in\na strict function closure. This means that:</p>\n<ul><li>any variables declared in a goog.module file are private to the file\n(not global), though the compiler is expected to inline the module.</li><li>The code must obey all the rules of &#34;strict&#34; JavaScript.</li><li>the file will be marked as &#34;use strict&#34;</li></ul>\n<p>NOTE: unlike goog.provide, goog.module does not declare any symbols by\nitself. If declared symbols are desired, use\ngoog.module.declareLegacyNamespace().</p>\n<p>See the public goog.module proposal: http://goo.gl/Va1hin</p>\n"}]}},"4":[{"1":"name","2":{"4":{"1":"string","3":{"1":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String"},"4":true}},"3":{"1":[{"2":"<p>Namespace provided by this file in the form\n&#34;goog.package.part&#34;, is expected but not required.</p>\n"}]}}]},"23":"goog.module.html","24":"goog.module"}]}}