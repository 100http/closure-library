[null,[[["goog.string.Const",null,null,null,[null,47,null,[null,null,"closure/goog/string/const.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/string/const.js#L47"]],null,[[[null,"<p>Wrapper for compile-time-constant strings.</p>\n<p>Const is a wrapper for strings that can only be created from program\nconstants (i.e., string literals).  This property relies on a custom Closure\ncompiler check that <code>goog.string.Const.from</code> is only invoked on\ncompile-time-constant expressions.</p>\n<p>Const is useful in APIs whose correct and secure use requires that certain\narguments are not attacker controlled: Compile-time constants are inherently\nunder the control of the application and not under control of external\nattackers, and hence are safe to use in such contexts.</p>\n<p>Instances of this type must be created via its factory method\n<code>goog.string.Const.from</code> and not by invoking its constructor.  The\nconstructor intentionally takes no parameters and the type is immutable;\nhence only a default instance corresponding to the empty string can be\nobtained via constructor invocation.</p>\n"]]],[null,null,null,1,null,null,1],null,[],null,[[["Const.from",[null,154,null,[null,null,"closure/goog/string/const.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/string/const.js#L154"]],[[[null,"<p>Creates a Const object from a compile-time constant string.</p>\n<p>It is illegal to invoke this function on an expression whose\ncompile-time-contant value cannot be determined by the Closure compiler.</p>\n<p>Correct invocations include,</p>\n <pre>\n   var s &#61; goog.string.Const.from(&#39;hello&#39;);\n   var t &#61; goog.string.Const.from(&#39;hello&#39; &#43; &#39;world&#39;);\n </pre>\n<p>In contrast, the following are illegal:</p>\n <pre>\n   var s &#61; goog.string.Const.from(getHello());\n   var t &#61; goog.string.Const.from(&#39;hello&#39; &#43; world);\n </pre>\n"]]],null,null,null,null,null,[],[]],[],null,[["s",[null,null,null,["string",null,null,1,[]]],[[[null,"<p>A constant string from which to create a Const.</p>\n"]]]]],[null,[null,null,null,["goog.string.Const",null,[null,null,[null,null,"goog.string.Const.html"]],null,[]]],[[[null,"<p>A Const object initialized to stringConst.</p>\n"]]]],[]],[["Const.unwrap",[null,114,null,[null,null,"closure/goog/string/const.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/string/const.js#L114"]],[[[null,"<p>Performs a runtime check that the provided object is indeed an instance\nof <code>goog.string.Const</code>, and returns its value.</p>\n"]]],null,null,null,null,null,[],[]],[],null,[["stringConst",[null,null,null,["goog.string.Const",null,[null,null,[null,null,"goog.string.Const.html"]],null,[]]],[[[null,"<p>The object to extract from.</p>\n"]]]]],[null,[null,null,null,["string",null,null,1,[]]],[[[null,"<p>The Const object&#39;s contained string, unless the run-time\ntype check fails. In that case, <code>unwrap</code> returns an innocuous\nstring, or, if assertions are enabled, throws\n<code>goog.asserts.AssertionError</code>.</p>\n"]]]],[]]],[[["Const.EMPTY",[null,186,null,[null,null,"closure/goog/string/const.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/string/const.js#L186"]],[[[null,"<p>A Const instance wrapping the empty string.</p>\n"]]],null,null,[1],null,null,[],[]],[null,null,null,["goog.string.Const",null,[null,null,[null,null,"goog.string.Const.html"]],null,[]]]]],[["Const",[null,47,null,[null,null,"closure/goog/string/const.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/string/const.js#L47"]],[[[null,"<p>Wrapper for compile-time-constant strings.</p>\n<p>Const is a wrapper for strings that can only be created from program\nconstants (i.e., string literals).  This property relies on a custom Closure\ncompiler check that <code>goog.string.Const.from</code> is only invoked on\ncompile-time-constant expressions.</p>\n<p>Const is useful in APIs whose correct and secure use requires that certain\narguments are not attacker controlled: Compile-time constants are inherently\nunder the control of the application and not under control of external\nattackers, and hence are safe to use in such contexts.</p>\n<p>Instances of this type must be created via its factory method\n<code>goog.string.Const.from</code> and not by invoking its constructor.  The\nconstructor intentionally takes no parameters and the type is immutable;\nhence only a default instance corresponding to the empty string can be\nobtained via constructor invocation.</p>\n"]]],null,null,null,null,null,[],[[[["goog.string.Const#from",null,[null,null,[null,null,"goog.string.Const.html#Const.from"]]]]]]],[],1,[],null,[]],[[["getTypedStringValue",[null,84,null,[null,null,"closure/goog/string/const.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/string/const.js#L84"]],[[[null,"<p>Returns this Const&#39;s value a string.</p>\n<p>IMPORTANT: In code where it is security-relevant that an object&#39;s type is\nindeed <code>goog.string.Const</code>, use <code>goog.string.Const.unwrap</code>\ninstead of this method.</p>\n"]]],null,null,null,null,null,[["goog.string.TypedString",null,[null,null,[null,null,"goog.string.TypedString.html#getTypedStringValue"]],null,[]]],[[[["goog.string.Const#unwrap",null,[null,null,[null,null,"goog.string.Const.html#Const.unwrap"]]]]]]],[],null,[],[null,[null,null,null,["string",null,null,1,[]]],[[[null,"<p>The wrapped string&#39;s value.</p>\n"]]]],[]],[["toString",[null,98,null,[null,null,"closure/goog/string/const.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/string/const.js#L98"]],[[[null,"<p>Returns a debug-string representation of this value.</p>\n<p>To obtain the actual string value wrapped inside an object of this type,\nuse <code>goog.string.Const.unwrap</code>.</p>\n"]]],null,null,null,null,null,[],[[[["goog.string.Const#unwrap",null,[null,null,[null,null,"goog.string.Const.html#Const.unwrap"]]]]]]],[],null,[],[null,[null,null,null,["string",null,null,1,[]]]],[]]],[[["implementsGoogStringTypedString",[null,71,null,[null,null,"closure/goog/string/const.js"],[null,null,"https://github.com/google/closure-library/blob/master/closure/goog/string/const.js#L71"]],[[[null,"<p>Interface marker of the TypedString interface.</p>\n<p>This property can be used to determine at runtime whether or not an object\nimplements this interface.  All implementations of this interface set this\nproperty to <code>true</code>.</p>\n"]]],null,null,[1],null,null,[["goog.string.TypedString",null,[null,null,[null,null,"goog.string.TypedString.html#implementsGoogStringTypedString"]],null,[]]],[]],[null,null,null,["boolean",null,null,1,[]]]]],null,[],[["goog.string.TypedString",null,[null,null,[null,null,"goog.string.TypedString.html"]],null,[]]],[],[["goog.string.Const",null,[null,null,[null,null,"goog.string.Const.html"]],null,[]],null,null,1],null,"goog.string.Const.html","goog.string.Const",[],[],[],[]]]]]