{"2":{"1":[{"1":"goog.i18n.NumberFormat","5":{"1":"closure/goog/i18n/numberformat.js","2":48,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L48"},"6":{"2":[{"1":"NumberFormat.CompactStyle","2":"goog.i18n.NumberFormat.CompactStyle.html","3":{"1":[{"2":"<p>Compacting styles.</p>\n"}]}},{"1":"NumberFormat.CurrencyStyle","2":"goog.i18n.NumberFormat.CurrencyStyle.html","3":{"1":[{"2":"<p>Currency styles.</p>\n"}]}},{"1":"NumberFormat.Format","2":"goog.i18n.NumberFormat.Format.html","3":{"1":[{"2":"<p>Standard number formatting patterns.</p>\n"}]}}]},"7":{"1":[{"2":"<p>Constructor of NumberFormat.</p>\n"}]},"8":{},"10":[{"1":{"1":"NumberFormat.CompactNumberUnit","2":{"1":"closure/goog/i18n/numberformat.js","2":1388,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L1388"},"3":{"1":[{"2":"<p>Alias for the compact format &#39;unit&#39; object.</p>\n"}]}},"2":{"5":{"1":[{"1":"divisorBase","2":{"4":{"1":"number","4":true}}},{"1":"prefix","2":{"4":{"1":"string","4":true}}},{"1":"suffix","2":{"4":{"1":"string","4":true}}}]}}}],"12":[{"1":{"1":"NumberFormat.isEnforceAsciiDigits","2":{"1":"closure/goog/i18n/numberformat.js","2":190,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L190"},"3":{"1":[{"2":"<p>Return if Ascii digits is enforced.</p>\n"}]}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>If Ascii digits is enforced.</p>\n"}]}}},{"1":{"1":"NumberFormat.setEnforceAsciiDigits","2":{"1":"closure/goog/i18n/numberformat.js","2":181,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L181"},"3":{"1":[{"2":"<p>Set if the usage of Ascii digits in formatting should be enforced.</p>\n"}]}},"4":[{"1":"doEnforce","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Boolean value about if Ascii digits should be\nenforced.</p>\n"}]}}]}],"14":{"1":{"1":"NumberFormat","2":{"1":"closure/goog/i18n/numberformat.js","2":48,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L48"},"3":{"1":[{"2":"<p>Constructor of NumberFormat.</p>\n"}]}},"3":true,"4":[{"1":"pattern","2":{"6":{"1":[{"4":{"1":"number","4":true}},{"4":{"1":"string","4":true}}]}},"3":{"1":[{"2":"<p>The number that indicates a predefined\nnumber format pattern.</p>\n"}]}},{"1":"opt_currency","2":{"1":true,"6":{"1":[{"4":{"1":"string","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>Optional international currency\ncode. This determines the currency code/symbol used in format/parse. If\nnot given, the currency code for current locale will be used.</p>\n"}]}},{"1":"opt_currencyStyle","2":{"1":true,"6":{"1":[{"4":{"1":"number","4":true}},{"9":true}]}},"3":{"1":[{"2":"<p>currency style, value defined in\ngoog.i18n.NumberFormat.CurrencyStyle.</p>\n"}]}}]},"15":[{"1":{"1":"format","2":{"1":"closure/goog/i18n/numberformat.js","2":594,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L594"},"3":{"1":[{"2":"<p>Formats a Number to produce a string.</p>\n"}]}},"4":[{"1":"number","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>The Number to be formatted.</p>\n"}]}}],"5":{"2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The formatted number string.</p>\n"}]}}},{"1":{"1":"getBaseFormatting","2":{"1":"closure/goog/i18n/numberformat.js","2":320,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L320"},"3":{"1":[{"2":"<p>Gets the number on which compact formatting is currently based, or null if\nno such number is set. See setBaseFormatting() for more information.</p>\n"}]}},"5":{"2":{"6":{"1":[{"4":{"1":"number","4":true}},{"10":true}]}}}},{"1":{"1":"getSignificantDigits","2":{"1":"closure/goog/i18n/numberformat.js","2":270,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L270"},"3":{"1":[{"2":"<p>Gets number of significant digits to show. Only fractions will be rounded.</p>\n"}]}},"5":{"2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>The number of significant digits to include.</p>\n"}]}}},{"1":{"1":"isCurrencyCodeBeforeValue","2":{"1":"closure/goog/i18n/numberformat.js","2":1560,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L1560"},"3":{"1":[{"2":"<p>Checks if the currency symbol comes before the value ($12) or after (12$)\nHandy for applications that need to have separate UI fields for the currency\nvalue and symbol, especially for input: Price: [USD] [123.45]\nThe currency symbol might be a combo box, or a label.</p>\n"}]}},"5":{"2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>true if currency is before value.</p>\n"}]}}},{"1":{"1":"parse","2":{"1":"closure/goog/i18n/numberformat.js","2":423,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L423"},"3":{"1":[{"2":"<p>Parses text string to produce a Number.</p>\n<p>This method attempts to parse text starting from position &#34;opt_pos&#34; if it\nis given. Otherwise the parse will start from the beginning of the text.\nWhen opt_pos presents, opt_pos will be updated to the character next to where\nparsing stops after the call. If an error occurs, opt_pos won&#39;t be updated.</p>\n"}]}},"4":[{"1":"text","2":{"4":{"1":"string","4":true}},"3":{"1":[{"2":"<p>The string to be parsed.</p>\n"}]}},{"1":"opt_pos","2":{"1":true,"6":{"1":[{"4":{"1":"Array","4":true,"5":[{"4":{"1":"number","4":true}}]}},{"10":true},{"9":true}]}},"3":{"1":[{"2":"<p>Position to pass in and get back.</p>\n"}]}}],"5":{"2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>Parsed number. This throws an error if the text cannot be\nparsed.</p>\n"}]}}},{"1":{"1":"setBaseFormatting","2":{"1":"closure/goog/i18n/numberformat.js","2":306,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L306"},"3":{"1":[{"2":"<p>Sets a number to base the formatting on when compact style formatting is\nused. If this is null, the formatting should be based only on the number to\nbe formatting.</p>\n<p>This base formatting number can be used to format the target number as\nanother number would be formatted. For example, 100,000 is normally formatted\nas &#34;100K&#34; in the COMPACT_SHORT format. To instead format it as &#39;0.1M&#39;, the\nbase number could be set to 1,000,000 in order to force all numbers to be\nformatted in millions. Similarly, 1,000,000,000 would normally be formatted\nas &#39;1B&#39; and setting the base formatting number to 1,000,000, would cause it\nto be formatted instead as &#39;1,000M&#39;.</p>\n"}]}},"4":[{"1":"baseFormattingNumber","2":{"6":{"1":[{"4":{"1":"number","4":true}},{"10":true}]}},"3":{"1":[{"2":"<p>The number to base formatting on, or\nnull if formatting should not be based on another number.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.i18n.NumberFormat","3":{"1":"goog.i18n.NumberFormat.html"}}},"3":{"1":[{"2":"<p>Reference to this NumberFormat object.</p>\n"}]}}},{"1":{"1":"setMaximumFractionDigits","2":{"1":"closure/goog/i18n/numberformat.js","2":238,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L238"},"3":{"1":[{"2":"<p>Sets maximum number of fraction digits.</p>\n"}]}},"4":[{"1":"max","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>the maximum.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.i18n.NumberFormat","3":{"1":"goog.i18n.NumberFormat.html"}}},"3":{"1":[{"2":"<p>Reference to this NumberFormat object.</p>\n"}]}}},{"1":{"1":"setMinimumFractionDigits","2":{"1":"closure/goog/i18n/numberformat.js","2":223,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L223"},"3":{"1":[{"2":"<p>Sets minimum number of fraction digits.</p>\n"}]}},"4":[{"1":"min","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>the minimum.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.i18n.NumberFormat","3":{"1":"goog.i18n.NumberFormat.html"}}},"3":{"1":[{"2":"<p>Reference to this NumberFormat object.</p>\n"}]}}},{"1":{"1":"setShowTrailingZeros","2":{"1":"closure/goog/i18n/numberformat.js","2":282,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L282"},"3":{"1":[{"2":"<p>Sets whether trailing fraction zeros should be shown when significantDigits_\nis positive. If this is true and significantDigits_ is 2, 1 will be formatted\nas &#39;1.0&#39;.</p>\n"}]}},"4":[{"1":"showTrailingZeros","2":{"4":{"1":"boolean","4":true}},"3":{"1":[{"2":"<p>Whether trailing zeros should be shown.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.i18n.NumberFormat","3":{"1":"goog.i18n.NumberFormat.html"}}},"3":{"1":[{"2":"<p>Reference to this NumberFormat object.</p>\n"}]}}},{"1":{"1":"setSignificantDigits","2":{"1":"closure/goog/i18n/numberformat.js","2":256,"3":"https://github.com/google/closure-library/blob/master/closure/goog/i18n/numberformat.js#L256"},"3":{"1":[{"2":"<p>Sets number of significant digits to show. Only fractions will be rounded.\nRegardless of the number of significant digits set, the number of fractional\ndigits shown will always be capped by the maximum number of fractional digits\nset on <a href=\"goog.i18n.NumberFormat.html#setMaximumFractionDigits\"><code>#setMaximumFractionDigits</code></a>.</p>\n"}]}},"4":[{"1":"number","2":{"4":{"1":"number","4":true}},"3":{"1":[{"2":"<p>The number of significant digits to include.</p>\n"}]}}],"5":{"2":{"4":{"1":"goog.i18n.NumberFormat","3":{"1":"goog.i18n.NumberFormat.html"}}},"3":{"1":[{"2":"<p>Reference to this NumberFormat object.</p>\n"}]}}}],"21":{"1":{"1":"goog.i18n.NumberFormat","3":{"1":"goog.i18n.NumberFormat.html"}},"2":4},"23":"goog.i18n.NumberFormat.html","24":"goog.i18n.NumberFormat"}]}}